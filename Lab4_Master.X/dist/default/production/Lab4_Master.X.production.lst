

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 11 15:22:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0013                     _SSPBUF	set	19
   460  0014                     _SSPCON	set	20
   461  0009                     _PORTE	set	9
   462  0008                     _PORTD	set	8
   463  0006                     _PORTB	set	6
   464  0005                     _PORTA	set	5
   465  004A                     _RE2	set	74
   466  0049                     _RE1	set	73
   467  0048                     _RE0	set	72
   468  0063                     _SSPIF	set	99
   469  005E                     _PEIE	set	94
   470  005F                     _GIE	set	95
   471  0091                     _SSPCON2bits	set	145
   472  0087                     _TRISCbits	set	135
   473  0094                     _SSPSTAT	set	148
   474  0093                     _SSPADD	set	147
   475  0091                     _SSPCON2	set	145
   476  008F                     _OSCCONbits	set	143
   477  0089                     _TRISE	set	137
   478  0088                     _TRISD	set	136
   479  0086                     _TRISB	set	134
   480  0085                     _TRISA	set	133
   481  0463                     _SSPIE	set	1123
   482  043C                     _TRISC4	set	1084
   483  043B                     _TRISC3	set	1083
   484  0189                     _ANSELH	set	393
   485  0188                     _ANSEL	set	392
   486                           
   487                           	psect	strings
   488  0003                     __pstrings:
   489  0003                     stringtab:
   490  0003                     __stringtab:
   491                           
   492                           ;	String table - string pointers are 1 byte each
   493  0003  1BFF               	btfsc	btemp+1,7
   494  0004  280D               	ljmp	stringcode
   495  0005  1383               	bcf	3,7
   496  0006  187F               	btfsc	btemp+1,0
   497  0007  1783               	bsf	3,7
   498  0008  0800               	movf	0,w
   499  0009  0A84               	incf	4,f
   500  000A  1903               	skipnz
   501  000B  0AFF               	incf	btemp+1,f
   502  000C  0008               	return
   503  000D                     stringcode:
   504  000D                     stringdir:
   505  000D  3000               	movlw	high stringdir
   506  000E  008A               	movwf	10
   507  000F  0804               	movf	4,w
   508  0010  0A84               	incf	4,f
   509  0011  0782               	addwf	2,f
   510  0012                     __stringbase:
   511  0012  3400               	retlw	0
   512  0013                     __end_of__stringtab:
   513  0013                     STR_1:
   514  0013  3443               	retlw	67	;'C'
   515  0014  346F               	retlw	111	;'o'
   516  0015  3475               	retlw	117	;'u'
   517  0016  346E               	retlw	110	;'n'
   518  0017  3474               	retlw	116	;'t'
   519  0018  3420               	retlw	32	;' '
   520  0019  3450               	retlw	80	;'P'
   521  001A  346F               	retlw	111	;'o'
   522  001B  3474               	retlw	116	;'t'
   523  001C  3420               	retlw	32	;' '
   524  001D  3420               	retlw	32	;' '
   525  001E  3454               	retlw	84	;'T'
   526  001F  3465               	retlw	101	;'e'
   527  0020  346D               	retlw	109	;'m'
   528  0021  3470               	retlw	112	;'p'
   529  0022  3400               	retlw	0
   530                           
   531                           	psect	cinit
   532  07F3                     start_initialization:	
   533                           ; #config settings
   534                           
   535  07F3                     __initialization:
   536                           
   537                           ; Clear objects allocated to BANK0
   538  07F3  1383               	bcf	3,7	;select IRP bank0
   539  07F4  3041               	movlw	low __pbssBANK0
   540  07F5  0084               	movwf	4
   541  07F6  3057               	movlw	low (__pbssBANK0+22)
   542  07F7  120A  118A  219E  120A  118A  	fcall	clear_ram0
   543  07FC                     end_of_initialization:	
   544                           ;End of C runtime variable initialization code
   545                           
   546  07FC                     __end_of__initialization:
   547  07FC  0183               	clrf	3
   548  07FD  120A  118A  2EB9   	ljmp	_main	;jump to C main() function
   549                           
   550                           	psect	bssBANK0
   551  0041                     __pbssBANK0:
   552  0041                     _AU3:
   553  0041                     	ds	1
   554  0042                     _AU2:
   555  0042                     	ds	1
   556  0043                     _AU1:
   557  0043                     	ds	1
   558  0044                     _AD3:
   559  0044                     	ds	1
   560  0045                     _AD2:
   561  0045                     	ds	1
   562  0046                     _AD1:
   563  0046                     	ds	1
   564  0047                     _AC3:
   565  0047                     	ds	1
   566  0048                     _AC2:
   567  0048                     	ds	1
   568  0049                     _AC1:
   569  0049                     	ds	1
   570  004A                     _Un3:
   571  004A                     	ds	1
   572  004B                     _Un2:
   573  004B                     	ds	1
   574  004C                     _Un1:
   575  004C                     	ds	1
   576  004D                     _Dec3:
   577  004D                     	ds	1
   578  004E                     _Dec2:
   579  004E                     	ds	1
   580  004F                     _Dec1:
   581  004F                     	ds	1
   582  0050                     _Cen3:
   583  0050                     	ds	1
   584  0051                     _Cen2:
   585  0051                     	ds	1
   586  0052                     _Cen1:
   587  0052                     	ds	1
   588  0053                     _NUM:
   589  0053                     	ds	1
   590  0054                     _desde_pot:
   591  0054                     	ds	1
   592  0055                     _desde_contador:
   593  0055                     	ds	1
   594  0056                     _desde_sensor:
   595  0056                     	ds	1
   596                           
   597                           	psect	clrtext
   598  019E                     clear_ram0:	
   599                           ;	Called with FSR containing the base address, and
   600                           ;	W with the last address+1
   601                           
   602  019E  0064               	clrwdt	;clear the watchdog before getting into this loop
   603  019F                     clrloop0:
   604  019F  0180               	clrf	0	;clear RAM location pointed to by FSR
   605  01A0  0A84               	incf	4,f	;increment pointer
   606  01A1  0604               	xorwf	4,w	;XOR with final address
   607  01A2  1903               	btfsc	3,2	;have we reached the end yet?
   608  01A3  3400               	retlw	0	;all done for this memory range, return
   609  01A4  0604               	xorwf	4,w	;XOR again to restore value
   610  01A5  299F               	goto	clrloop0	;do the next byte
   611                           
   612                           	psect	cstackCOMMON
   613  0070                     __pcstackCOMMON:
   614  0070                     ?_setup:
   615  0070                     ?_lcd_clear:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_lcd_init:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_cmd:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??_cmd:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_temperatura:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_I2C_Master_Start:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ??_I2C_Master_Start:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_I2C_Master_Write:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_I2C_Master_Stop:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ??_I2C_Master_Stop:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_lcd_ascii:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_main:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_datos_ascii:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ??_datos_ascii:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_I2C_Master_Wait:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ??_I2C_Master_Wait:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_dat:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ??_dat:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?___bmul:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_I2C_Master_Read:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?___wmul:	
   676                           ; 2 bytes @ 0x0
   677                           
   678  0070                     ?___lldiv:	
   679                           ; 2 bytes @ 0x0
   680                           
   681  0070                     datos_ascii@numero:	
   682                           ; 4 bytes @ 0x0
   683                           
   684  0070                     ___bmul@multiplicand:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     I2C_Master_Write@d:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     I2C_Master_Read@a:	
   691                           ; 2 bytes @ 0x0
   692                           
   693  0070                     ___wmul@multiplier:	
   694                           ; 2 bytes @ 0x0
   695                           
   696  0070                     ___lldiv@divisor:	
   697                           ; 2 bytes @ 0x0
   698                           
   699                           
   700                           ; 4 bytes @ 0x0
   701  0070                     	ds	1
   702  0071                     ??___bmul:
   703  0071                     cmd@a:	
   704                           ; 1 bytes @ 0x1
   705                           
   706  0071                     dat@b:	
   707                           ; 1 bytes @ 0x1
   708                           
   709                           
   710                           ; 1 bytes @ 0x1
   711  0071                     	ds	1
   712  0072                     ??_lcd_clear:
   713  0072                     ??_lcd_init:	
   714                           ; 1 bytes @ 0x2
   715                           
   716  0072                     ??_I2C_Master_Write:	
   717                           ; 1 bytes @ 0x2
   718                           
   719  0072                     ??_I2C_Master_Read:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     ?_lcd_linea:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0072                     lcd_linea@b:	
   726                           ; 1 bytes @ 0x2
   727                           
   728  0072                     ___bmul@product:	
   729                           ; 1 bytes @ 0x2
   730                           
   731  0072                     ___wmul@multiplicand:	
   732                           ; 1 bytes @ 0x2
   733                           
   734                           
   735                           ; 2 bytes @ 0x2
   736  0072                     	ds	1
   737  0073                     ??_lcd_linea:
   738  0073                     ___bmul@multiplier:	
   739                           ; 1 bytes @ 0x3
   740                           
   741                           
   742                           ; 1 bytes @ 0x3
   743  0073                     	ds	1
   744  0074                     ??___wmul:
   745  0074                     lcd_linea@a:	
   746                           ; 1 bytes @ 0x4
   747                           
   748  0074                     I2C_Master_Read@temp:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     ___wmul@product:	
   752                           ; 2 bytes @ 0x4
   753                           
   754  0074                     ___lldiv@dividend:	
   755                           ; 2 bytes @ 0x4
   756                           
   757                           
   758                           ; 4 bytes @ 0x4
   759  0074                     	ds	1
   760  0075                     lcd_linea@temp:
   761                           
   762                           ; 1 bytes @ 0x5
   763  0075                     	ds	1
   764  0076                     ?___awdiv:
   765  0076                     lcd_linea@z:	
   766                           ; 2 bytes @ 0x6
   767                           
   768  0076                     ___awdiv@divisor:	
   769                           ; 1 bytes @ 0x6
   770                           
   771                           
   772                           ; 2 bytes @ 0x6
   773  0076                     	ds	2
   774  0078                     ??___lldiv:
   775  0078                     ___awdiv@dividend:	
   776                           ; 1 bytes @ 0x8
   777                           
   778                           
   779                           ; 2 bytes @ 0x8
   780  0078                     	ds	1
   781  0079                     ___lldiv@quotient:
   782                           
   783                           ; 4 bytes @ 0x9
   784  0079                     	ds	1
   785  007A                     ??___awdiv:
   786                           
   787                           ; 1 bytes @ 0xA
   788  007A                     	ds	1
   789  007B                     ??___awmod:
   790                           
   791                           ; 1 bytes @ 0xB
   792  007B                     	ds	1
   793  007C                     ___awmod@counter:
   794                           
   795                           ; 1 bytes @ 0xC
   796  007C                     	ds	1
   797  007D                     ___lldiv@counter:
   798  007D                     ___awmod@sign:	
   799                           ; 1 bytes @ 0xD
   800                           
   801                           
   802                           ; 1 bytes @ 0xD
   803  007D                     	ds	1
   804  007E                     ??_setup:
   805                           
   806                           	psect	cstackBANK0
   807  0020                     __pcstackBANK0:	
   808                           ; 1 bytes @ 0xE
   809                           
   810  0020                     ?_I2C_Master_Init:
   811  0020                     ___awdiv@counter:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0020                     I2C_Master_Init@c:	
   815                           ; 1 bytes @ 0x0
   816                           
   817                           
   818                           ; 4 bytes @ 0x0
   819  0020                     	ds	1
   820  0021                     ___awdiv@sign:
   821                           
   822                           ; 1 bytes @ 0x1
   823  0021                     	ds	1
   824  0022                     ___awdiv@quotient:
   825                           
   826                           ; 2 bytes @ 0x2
   827  0022                     	ds	2
   828  0024                     ??_temperatura:
   829  0024                     ??_I2C_Master_Init:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0024                     ?___awmod:	
   833                           ; 1 bytes @ 0x4
   834                           
   835  0024                     ___awmod@divisor:	
   836                           ; 2 bytes @ 0x4
   837                           
   838                           
   839                           ; 2 bytes @ 0x4
   840  0024                     	ds	2
   841  0026                     ___awmod@dividend:
   842                           
   843                           ; 2 bytes @ 0x6
   844  0026                     	ds	2
   845  0028                     ??_lcd_ascii:
   846                           
   847                           ; 1 bytes @ 0x8
   848  0028                     	ds	3
   849  002B                     lcd_ascii@random:
   850                           
   851                           ; 16 bytes @ 0xB
   852  002B                     	ds	16
   853  003B                     ?_show:
   854  003B                     show@s:	
   855                           ; 1 bytes @ 0x1B
   856                           
   857                           
   858                           ; 2 bytes @ 0x1B
   859  003B                     	ds	2
   860  003D                     ??_show:
   861                           
   862                           ; 1 bytes @ 0x1D
   863  003D                     	ds	1
   864  003E                     ??_main:
   865                           
   866                           ; 1 bytes @ 0x1E
   867  003E                     	ds	3
   868                           
   869                           	psect	maintext
   870  06B9                     __pmaintext:	
   871 ;;
   872 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   873 ;;
   874 ;; *************** function _main *****************
   875 ;; Defined at:
   876 ;;		line 82 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/Master_main.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : B00/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0
   892 ;;      Temps:          0       3       0       0       0
   893 ;;      Totals:         0       3       0       0       0
   894 ;;Total ram usage:        3 bytes
   895 ;; Hardware stack levels required when called:    3
   896 ;; This function calls:
   897 ;;		_I2C_Master_Read
   898 ;;		_I2C_Master_Start
   899 ;;		_I2C_Master_Stop
   900 ;;		_I2C_Master_Write
   901 ;;		_cmd
   902 ;;		_lcd_ascii
   903 ;;		_lcd_clear
   904 ;;		_lcd_init
   905 ;;		_lcd_linea
   906 ;;		_setup
   907 ;;		_show
   908 ;;		_temperatura
   909 ;; This function is called by:
   910 ;;		Startup code after reset
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           
   915                           ;psect for function _main
   916  06B9                     _main:
   917  06B9                     l1656:	
   918                           ;incstack = 0
   919                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   920                           
   921                           
   922                           ;Master_main.c: 83: setup();
   923  06B9  120A  118A  2217  120A  118A  	fcall	_setup
   924                           
   925                           ;Master_main.c: 84: lcd_clear();
   926  06BE  120A  118A  21CF  120A  118A  	fcall	_lcd_clear
   927                           
   928                           ;Master_main.c: 85: lcd_init();
   929  06C3  120A  118A  2321  120A  118A  	fcall	_lcd_init
   930                           
   931                           ;Master_main.c: 86: cmd(0x90);
   932  06C8  3090               	movlw	144
   933  06C9  120A  118A  21DC  120A  118A  	fcall	_cmd
   934  06CE                     l1658:
   935                           
   936                           ;Master_main.c: 87: _delay((unsigned long)((1)*(8000000/4000.0)));
   937  06CE  3003               	movlw	3
   938  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   939  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   940  06D1  00BF               	movwf	??_main+1
   941  06D2  3097               	movlw	151
   942  06D3  00BE               	movwf	??_main
   943  06D4                     u817:
   944  06D4  0BBE               	decfsz	??_main,f
   945  06D5  2ED4               	goto	u817
   946  06D6  0BBF               	decfsz	??_main+1,f
   947  06D7  2ED4               	goto	u817
   948  06D8                     l1660:
   949                           
   950                           ;Master_main.c: 89: {;Master_main.c: 90: temperatura();
   951  06D8  120A  118A  25AA  120A  118A  	fcall	_temperatura
   952  06DD                     l1662:
   953                           
   954                           ;Master_main.c: 92: I2C_Master_Start();
   955  06DD  120A  118A  21A6  120A  118A  	fcall	_I2C_Master_Start
   956  06E2                     l1664:
   957                           
   958                           ;Master_main.c: 93: I2C_Master_Write(0x50);
   959  06E2  3050               	movlw	80
   960  06E3  00F0               	movwf	I2C_Master_Write@d
   961  06E4  3000               	movlw	0
   962  06E5  00F1               	movwf	I2C_Master_Write@d+1
   963  06E6  120A  118A  21B8  120A  118A  	fcall	_I2C_Master_Write
   964  06EB                     l1666:
   965                           
   966                           ;Master_main.c: 94: I2C_Master_Write(0);
   967  06EB  3000               	movlw	0
   968  06EC  00F0               	movwf	I2C_Master_Write@d
   969  06ED  00F1               	movwf	I2C_Master_Write@d+1
   970  06EE  120A  118A  21B8  120A  118A  	fcall	_I2C_Master_Write
   971  06F3                     l1668:
   972                           
   973                           ;Master_main.c: 95: I2C_Master_Stop();
   974  06F3  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Stop
   975  06F8                     l1670:
   976                           
   977                           ;Master_main.c: 96: _delay((unsigned long)((200)*(8000000/4000.0)));
   978  06F8  3003               	movlw	3
   979  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   980  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   981  06FB  00C0               	movwf	??_main+2
   982  06FC  3008               	movlw	8
   983  06FD  00BF               	movwf	??_main+1
   984  06FE  3076               	movlw	118
   985  06FF  00BE               	movwf	??_main
   986  0700                     u827:
   987  0700  0BBE               	decfsz	??_main,f
   988  0701  2F00               	goto	u827
   989  0702  0BBF               	decfsz	??_main+1,f
   990  0703  2F00               	goto	u827
   991  0704  0BC0               	decfsz	??_main+2,f
   992  0705  2F00               	goto	u827
   993  0706  0000               	nop
   994  0707                     l1672:
   995                           
   996                           ;Master_main.c: 98: I2C_Master_Start();
   997  0707  120A  118A  21A6  120A  118A  	fcall	_I2C_Master_Start
   998  070C                     l1674:
   999                           
  1000                           ;Master_main.c: 99: I2C_Master_Write(0x51);
  1001  070C  3051               	movlw	81
  1002  070D  00F0               	movwf	I2C_Master_Write@d
  1003  070E  3000               	movlw	0
  1004  070F  00F1               	movwf	I2C_Master_Write@d+1
  1005  0710  120A  118A  21B8  120A  118A  	fcall	_I2C_Master_Write
  1006  0715                     l1676:
  1007                           
  1008                           ;Master_main.c: 100: desde_contador = I2C_Master_Read(0);
  1009  0715  3000               	movlw	0
  1010  0716  00F0               	movwf	I2C_Master_Read@a
  1011  0717  00F1               	movwf	I2C_Master_Read@a+1
  1012  0718  120A  118A  228D  120A  118A  	fcall	_I2C_Master_Read
  1013  071D  0870               	movf	?_I2C_Master_Read,w
  1014  071E  1283               	bcf	3,5	;RP0=0, select bank0
  1015  071F  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0720  00BE               	movwf	??_main
  1017  0721  083E               	movf	??_main,w
  1018  0722  00D5               	movwf	_desde_contador
  1019  0723                     l1678:
  1020                           
  1021                           ;Master_main.c: 101: I2C_Master_Stop();
  1022  0723  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Stop
  1023  0728                     l1680:
  1024                           
  1025                           ;Master_main.c: 102: _delay((unsigned long)((200)*(8000000/4000.0)));
  1026  0728  3003               	movlw	3
  1027  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1028  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1029  072B  00C0               	movwf	??_main+2
  1030  072C  3008               	movlw	8
  1031  072D  00BF               	movwf	??_main+1
  1032  072E  3076               	movlw	118
  1033  072F  00BE               	movwf	??_main
  1034  0730                     u837:
  1035  0730  0BBE               	decfsz	??_main,f
  1036  0731  2F30               	goto	u837
  1037  0732  0BBF               	decfsz	??_main+1,f
  1038  0733  2F30               	goto	u837
  1039  0734  0BC0               	decfsz	??_main+2,f
  1040  0735  2F30               	goto	u837
  1041  0736  0000               	nop
  1042  0737                     l1682:
  1043                           
  1044                           ;Master_main.c: 104: I2C_Master_Start();
  1045  0737  120A  118A  21A6  120A  118A  	fcall	_I2C_Master_Start
  1046  073C                     l1684:
  1047                           
  1048                           ;Master_main.c: 105: I2C_Master_Write(0x61);
  1049  073C  3061               	movlw	97
  1050  073D  00F0               	movwf	I2C_Master_Write@d
  1051  073E  3000               	movlw	0
  1052  073F  00F1               	movwf	I2C_Master_Write@d+1
  1053  0740  120A  118A  21B8  120A  118A  	fcall	_I2C_Master_Write
  1054  0745                     l1686:
  1055                           
  1056                           ;Master_main.c: 106: desde_pot =I2C_Master_Read(0);
  1057  0745  3000               	movlw	0
  1058  0746  00F0               	movwf	I2C_Master_Read@a
  1059  0747  00F1               	movwf	I2C_Master_Read@a+1
  1060  0748  120A  118A  228D  120A  118A  	fcall	_I2C_Master_Read
  1061  074D  0870               	movf	?_I2C_Master_Read,w
  1062  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1063  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0750  00BE               	movwf	??_main
  1065  0751  083E               	movf	??_main,w
  1066  0752  00D4               	movwf	_desde_pot
  1067  0753                     l1688:
  1068                           
  1069                           ;Master_main.c: 107: I2C_Master_Stop();
  1070  0753  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Stop
  1071  0758                     l1690:
  1072                           
  1073                           ;Master_main.c: 108: _delay((unsigned long)((200)*(8000000/4000.0)));
  1074  0758  3003               	movlw	3
  1075  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1076  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1077  075B  00C0               	movwf	??_main+2
  1078  075C  3008               	movlw	8
  1079  075D  00BF               	movwf	??_main+1
  1080  075E  3076               	movlw	118
  1081  075F  00BE               	movwf	??_main
  1082  0760                     u847:
  1083  0760  0BBE               	decfsz	??_main,f
  1084  0761  2F60               	goto	u847
  1085  0762  0BBF               	decfsz	??_main+1,f
  1086  0763  2F60               	goto	u847
  1087  0764  0BC0               	decfsz	??_main+2,f
  1088  0765  2F60               	goto	u847
  1089  0766  0000               	nop
  1090  0767                     l1692:
  1091                           
  1092                           ;Master_main.c: 110: I2C_Master_Start();
  1093  0767  120A  118A  21A6  120A  118A  	fcall	_I2C_Master_Start
  1094  076C                     l1694:
  1095                           
  1096                           ;Master_main.c: 111: I2C_Master_Write(0x80);
  1097  076C  3080               	movlw	128
  1098  076D  00F0               	movwf	I2C_Master_Write@d
  1099  076E  3000               	movlw	0
  1100  076F  00F1               	movwf	I2C_Master_Write@d+1
  1101  0770  120A  118A  21B8  120A  118A  	fcall	_I2C_Master_Write
  1102  0775                     l1696:
  1103                           
  1104                           ;Master_main.c: 112: I2C_Master_Write(0xF3);
  1105  0775  30F3               	movlw	243
  1106  0776  00F0               	movwf	I2C_Master_Write@d
  1107  0777  3000               	movlw	0
  1108  0778  00F1               	movwf	I2C_Master_Write@d+1
  1109  0779  120A  118A  21B8  120A  118A  	fcall	_I2C_Master_Write
  1110  077E                     l1698:
  1111                           
  1112                           ;Master_main.c: 113: I2C_Master_Stop();
  1113  077E  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Stop
  1114  0783                     l1700:
  1115                           
  1116                           ;Master_main.c: 114: _delay((unsigned long)((100)*(8000000/4000.0)));
  1117  0783  3002               	movlw	2
  1118  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0786  00C0               	movwf	??_main+2
  1121  0787  3004               	movlw	4
  1122  0788  00BF               	movwf	??_main+1
  1123  0789  30B9               	movlw	185
  1124  078A  00BE               	movwf	??_main
  1125  078B                     u857:
  1126  078B  0BBE               	decfsz	??_main,f
  1127  078C  2F8B               	goto	u857
  1128  078D  0BBF               	decfsz	??_main+1,f
  1129  078E  2F8B               	goto	u857
  1130  078F  0BC0               	decfsz	??_main+2,f
  1131  0790  2F8B               	goto	u857
  1132  0791  2F92               	nop2
  1133  0792                     l1702:
  1134                           
  1135                           ;Master_main.c: 116: I2C_Master_Start();
  1136  0792  120A  118A  21A6  120A  118A  	fcall	_I2C_Master_Start
  1137  0797                     l1704:
  1138                           
  1139                           ;Master_main.c: 117: I2C_Master_Write(0x81);
  1140  0797  3081               	movlw	129
  1141  0798  00F0               	movwf	I2C_Master_Write@d
  1142  0799  3000               	movlw	0
  1143  079A  00F1               	movwf	I2C_Master_Write@d+1
  1144  079B  120A  118A  21B8  120A  118A  	fcall	_I2C_Master_Write
  1145  07A0                     l1706:
  1146                           
  1147                           ;Master_main.c: 118: desde_sensor = I2C_Master_Read(0);
  1148  07A0  3000               	movlw	0
  1149  07A1  00F0               	movwf	I2C_Master_Read@a
  1150  07A2  00F1               	movwf	I2C_Master_Read@a+1
  1151  07A3  120A  118A  228D  120A  118A  	fcall	_I2C_Master_Read
  1152  07A8  0870               	movf	?_I2C_Master_Read,w
  1153  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1154  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1155  07AB  00BE               	movwf	??_main
  1156  07AC  083E               	movf	??_main,w
  1157  07AD  00D6               	movwf	_desde_sensor
  1158  07AE                     l1708:
  1159                           
  1160                           ;Master_main.c: 119: I2C_Master_Stop();
  1161  07AE  120A  118A  21AF  120A  118A  	fcall	_I2C_Master_Stop
  1162  07B3                     l1710:
  1163                           
  1164                           ;Master_main.c: 120: _delay((unsigned long)((200)*(8000000/4000.0)));
  1165  07B3  3003               	movlw	3
  1166  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1167  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1168  07B6  00C0               	movwf	??_main+2
  1169  07B7  3008               	movlw	8
  1170  07B8  00BF               	movwf	??_main+1
  1171  07B9  3076               	movlw	118
  1172  07BA  00BE               	movwf	??_main
  1173  07BB                     u867:
  1174  07BB  0BBE               	decfsz	??_main,f
  1175  07BC  2FBB               	goto	u867
  1176  07BD  0BBF               	decfsz	??_main+1,f
  1177  07BE  2FBB               	goto	u867
  1178  07BF  0BC0               	decfsz	??_main+2,f
  1179  07C0  2FBB               	goto	u867
  1180  07C1  0000               	nop
  1181  07C2                     l1712:
  1182                           
  1183                           ;Master_main.c: 123: lcd_linea(1,1);
  1184  07C2  01F2               	clrf	lcd_linea@b
  1185  07C3  0AF2               	incf	lcd_linea@b,f
  1186  07C4  3001               	movlw	1
  1187  07C5  120A  118A  2261  120A  118A  	fcall	_lcd_linea
  1188  07CA                     l1714:
  1189                           
  1190                           ;Master_main.c: 124: show("Count Pot  Temp");
  1191  07CA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1192  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1193  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1194  07CD  00BB               	movwf	show@s
  1195  07CE  3080               	movlw	128
  1196  07CF  00BC               	movwf	show@s+1
  1197  07D0  120A  118A  22BB  120A  118A  	fcall	_show
  1198  07D5                     l1716:
  1199                           
  1200                           ;Master_main.c: 125: lcd_linea(2,1);
  1201  07D5  01F2               	clrf	lcd_linea@b
  1202  07D6  0AF2               	incf	lcd_linea@b,f
  1203  07D7  3002               	movlw	2
  1204  07D8  120A  118A  2261  120A  118A  	fcall	_lcd_linea
  1205  07DD                     l1718:
  1206                           
  1207                           ;Master_main.c: 126: show(lcd_ascii());
  1208  07DD  120A  118A  24BA  120A  118A  	fcall	_lcd_ascii
  1209  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1210  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1211  07E4  00BE               	movwf	??_main
  1212  07E5  01BF               	clrf	??_main+1
  1213  07E6  083E               	movf	??_main,w
  1214  07E7  00BB               	movwf	show@s
  1215  07E8  083F               	movf	??_main+1,w
  1216  07E9  00BC               	movwf	show@s+1
  1217  07EA  120A  118A  22BB  120A  118A  	fcall	_show
  1218  07EF  2ED8               	goto	l1660
  1219  07F0  120A  118A  2800   	ljmp	start
  1220  07F3                     __end_of_main:
  1221                           
  1222                           	psect	text1
  1223  05AA                     __ptext1:	
  1224 ;; *************** function _temperatura *****************
  1225 ;; Defined at:
  1226 ;;		line 235 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/Master_main.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0
  1242 ;;      Temps:          0       4       0       0       0
  1243 ;;      Totals:         0       4       0       0       0
  1244 ;;Total ram usage:        4 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    1
  1247 ;; This function calls:
  1248 ;;		___awdiv
  1249 ;;		___bmul
  1250 ;;		___wmul
  1251 ;;		_datos_ascii
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _temperatura
  1259  05AA                     _temperatura:
  1260  05AA                     l1552:	
  1261                           ;incstack = 0
  1262                           ; Regs used in _temperatura: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1263                           
  1264                           
  1265                           ;Master_main.c: 236: if (desde_sensor>=68){
  1266  05AA  3044               	movlw	68
  1267  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1268  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1269  05AD  0256               	subwf	_desde_sensor,w
  1270  05AE  1C03               	skipc
  1271  05AF  2DB1               	goto	u761
  1272  05B0  2DB2               	goto	u760
  1273  05B1                     u761:
  1274  05B1  2E54               	goto	l1562
  1275  05B2                     u760:
  1276  05B2                     l1554:
  1277                           
  1278                           ;Master_main.c: 237: NUM = 24*desde_sensor/35-1632/35;
  1279  05B2  3023               	movlw	35
  1280  05B3  00F6               	movwf	___awdiv@divisor
  1281  05B4  3000               	movlw	0
  1282  05B5  00F7               	movwf	___awdiv@divisor+1
  1283  05B6  0856               	movf	_desde_sensor,w
  1284  05B7  00A4               	movwf	??_temperatura
  1285  05B8  01A5               	clrf	??_temperatura+1
  1286  05B9  0824               	movf	??_temperatura,w
  1287  05BA  00F0               	movwf	___wmul@multiplier
  1288  05BB  0825               	movf	??_temperatura+1,w
  1289  05BC  00F1               	movwf	___wmul@multiplier+1
  1290  05BD  3018               	movlw	24
  1291  05BE  00F2               	movwf	___wmul@multiplicand
  1292  05BF  3000               	movlw	0
  1293  05C0  00F3               	movwf	___wmul@multiplicand+1
  1294  05C1  120A  118A  223C  120A  118A  	fcall	___wmul
  1295  05C6  0871               	movf	?___wmul+1,w
  1296  05C7  00F9               	movwf	___awdiv@dividend+1
  1297  05C8  0870               	movf	?___wmul,w
  1298  05C9  00F8               	movwf	___awdiv@dividend
  1299  05CA  120A  118A  2451  120A  118A  	fcall	___awdiv
  1300  05CF  0876               	movf	?___awdiv,w
  1301  05D0  3ED2               	addlw	210
  1302  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1303  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1304  05D3  00A6               	movwf	??_temperatura+2
  1305  05D4  0826               	movf	??_temperatura+2,w
  1306  05D5  00D3               	movwf	_NUM
  1307                           
  1308                           ;Master_main.c: 238: Cen3 = NUM/100;
  1309  05D6  3064               	movlw	100
  1310  05D7  00F6               	movwf	___awdiv@divisor
  1311  05D8  3000               	movlw	0
  1312  05D9  00F7               	movwf	___awdiv@divisor+1
  1313  05DA  0853               	movf	_NUM,w
  1314  05DB  00A4               	movwf	??_temperatura
  1315  05DC  01A5               	clrf	??_temperatura+1
  1316  05DD  0824               	movf	??_temperatura,w
  1317  05DE  00F8               	movwf	___awdiv@dividend
  1318  05DF  0825               	movf	??_temperatura+1,w
  1319  05E0  00F9               	movwf	___awdiv@dividend+1
  1320  05E1  120A  118A  2451  120A  118A  	fcall	___awdiv
  1321  05E6  0876               	movf	?___awdiv,w
  1322  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1323  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1324  05E9  00A6               	movwf	??_temperatura+2
  1325  05EA  0826               	movf	??_temperatura+2,w
  1326  05EB  00D0               	movwf	_Cen3
  1327                           
  1328                           ;Master_main.c: 239: Dec3 = (NUM-Cen3*100)/10;
  1329  05EC  300A               	movlw	10
  1330  05ED  00F6               	movwf	___awdiv@divisor
  1331  05EE  3000               	movlw	0
  1332  05EF  00F7               	movwf	___awdiv@divisor+1
  1333  05F0  0850               	movf	_Cen3,w
  1334  05F1  00A4               	movwf	??_temperatura
  1335  05F2  01A5               	clrf	??_temperatura+1
  1336  05F3  0824               	movf	??_temperatura,w
  1337  05F4  00F0               	movwf	___wmul@multiplier
  1338  05F5  0825               	movf	??_temperatura+1,w
  1339  05F6  00F1               	movwf	___wmul@multiplier+1
  1340  05F7  309C               	movlw	156
  1341  05F8  00F2               	movwf	___wmul@multiplicand
  1342  05F9  30FF               	movlw	255
  1343  05FA  00F3               	movwf	___wmul@multiplicand+1
  1344  05FB  120A  118A  223C  120A  118A  	fcall	___wmul
  1345  0600  1283               	bcf	3,5	;RP0=0, select bank0
  1346  0601  1303               	bcf	3,6	;RP1=0, select bank0
  1347  0602  0853               	movf	_NUM,w
  1348  0603  0770               	addwf	?___wmul,w
  1349  0604  00F8               	movwf	___awdiv@dividend
  1350  0605  0871               	movf	?___wmul+1,w
  1351  0606  1803               	skipnc
  1352  0607  0A71               	incf	?___wmul+1,w
  1353  0608  00F9               	movwf	___awdiv@dividend+1
  1354  0609  120A  118A  2451  120A  118A  	fcall	___awdiv
  1355  060E  0876               	movf	?___awdiv,w
  1356  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0611  00A6               	movwf	??_temperatura+2
  1359  0612  0826               	movf	??_temperatura+2,w
  1360  0613  00CD               	movwf	_Dec3
  1361                           
  1362                           ;Master_main.c: 240: Un3 = NUM-Cen3*100-Dec3*10;
  1363  0614  309C               	movlw	156
  1364  0615  00A4               	movwf	??_temperatura
  1365  0616  0824               	movf	??_temperatura,w
  1366  0617  00F0               	movwf	___bmul@multiplicand
  1367  0618  0850               	movf	_Cen3,w
  1368  0619  120A  118A  2202  120A  118A  	fcall	___bmul
  1369  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1370  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0620  00A5               	movwf	??_temperatura+1
  1372  0621  30F6               	movlw	246
  1373  0622  00A6               	movwf	??_temperatura+2
  1374  0623  0826               	movf	??_temperatura+2,w
  1375  0624  00F0               	movwf	___bmul@multiplicand
  1376  0625  084D               	movf	_Dec3,w
  1377  0626  120A  118A  2202  120A  118A  	fcall	___bmul
  1378  062B  1283               	bcf	3,5	;RP0=0, select bank0
  1379  062C  1303               	bcf	3,6	;RP1=0, select bank0
  1380  062D  0725               	addwf	??_temperatura+1,w
  1381  062E  0753               	addwf	_NUM,w
  1382  062F  00A7               	movwf	??_temperatura+3
  1383  0630  0827               	movf	??_temperatura+3,w
  1384  0631  00CA               	movwf	_Un3
  1385  0632                     l1556:
  1386                           
  1387                           ;Master_main.c: 241: AC3 = datos_ascii(Cen3);
  1388  0632  0850               	movf	_Cen3,w
  1389  0633  120A  118A  22EA  120A  118A  	fcall	_datos_ascii
  1390  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1392  063A  00A4               	movwf	??_temperatura
  1393  063B  0824               	movf	??_temperatura,w
  1394  063C  00C7               	movwf	_AC3
  1395  063D                     l1558:
  1396                           
  1397                           ;Master_main.c: 242: AD3 = datos_ascii(Dec3);
  1398  063D  084D               	movf	_Dec3,w
  1399  063E  120A  118A  22EA  120A  118A  	fcall	_datos_ascii
  1400  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0645  00A4               	movwf	??_temperatura
  1403  0646  0824               	movf	??_temperatura,w
  1404  0647  00C4               	movwf	_AD3
  1405  0648                     l1560:
  1406                           
  1407                           ;Master_main.c: 243: AU3 = datos_ascii(Un3);
  1408  0648  084A               	movf	_Un3,w
  1409  0649  120A  118A  22EA  120A  118A  	fcall	_datos_ascii
  1410  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1411  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0650  00A4               	movwf	??_temperatura
  1413  0651  0824               	movf	??_temperatura,w
  1414  0652  00C1               	movwf	_AU3
  1415                           
  1416                           ;Master_main.c: 244: }
  1417  0653  2EB8               	goto	l132
  1418  0654                     l1562:
  1419                           
  1420                           ;Master_main.c: 245: else{;Master_main.c: 246: NUM = (877/19)-13*desde_sensor/19;
  1421  0654  3013               	movlw	19
  1422  0655  00F6               	movwf	___awdiv@divisor
  1423  0656  3000               	movlw	0
  1424  0657  00F7               	movwf	___awdiv@divisor+1
  1425  0658  0856               	movf	_desde_sensor,w
  1426  0659  00A4               	movwf	??_temperatura
  1427  065A  01A5               	clrf	??_temperatura+1
  1428  065B  0824               	movf	??_temperatura,w
  1429  065C  00F0               	movwf	___wmul@multiplier
  1430  065D  0825               	movf	??_temperatura+1,w
  1431  065E  00F1               	movwf	___wmul@multiplier+1
  1432  065F  300D               	movlw	13
  1433  0660  00F2               	movwf	___wmul@multiplicand
  1434  0661  3000               	movlw	0
  1435  0662  00F3               	movwf	___wmul@multiplicand+1
  1436  0663  120A  118A  223C  120A  118A  	fcall	___wmul
  1437  0668  0871               	movf	?___wmul+1,w
  1438  0669  00F9               	movwf	___awdiv@dividend+1
  1439  066A  0870               	movf	?___wmul,w
  1440  066B  00F8               	movwf	___awdiv@dividend
  1441  066C  120A  118A  2451  120A  118A  	fcall	___awdiv
  1442  0671  0876               	movf	?___awdiv,w
  1443  0672  3C2E               	sublw	46
  1444  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0675  00A6               	movwf	??_temperatura+2
  1447  0676  0826               	movf	??_temperatura+2,w
  1448  0677  00D3               	movwf	_NUM
  1449  0678                     l1564:
  1450                           
  1451                           ;Master_main.c: 247: AC3 = 0x2D;
  1452  0678  302D               	movlw	45
  1453  0679  00A4               	movwf	??_temperatura
  1454  067A  0824               	movf	??_temperatura,w
  1455  067B  00C7               	movwf	_AC3
  1456  067C                     l1566:
  1457                           
  1458                           ;Master_main.c: 248: Dec3 = NUM/10;
  1459  067C  300A               	movlw	10
  1460  067D  00F6               	movwf	___awdiv@divisor
  1461  067E  3000               	movlw	0
  1462  067F  00F7               	movwf	___awdiv@divisor+1
  1463  0680  0853               	movf	_NUM,w
  1464  0681  00A4               	movwf	??_temperatura
  1465  0682  01A5               	clrf	??_temperatura+1
  1466  0683  0824               	movf	??_temperatura,w
  1467  0684  00F8               	movwf	___awdiv@dividend
  1468  0685  0825               	movf	??_temperatura+1,w
  1469  0686  00F9               	movwf	___awdiv@dividend+1
  1470  0687  120A  118A  2451  120A  118A  	fcall	___awdiv
  1471  068C  0876               	movf	?___awdiv,w
  1472  068D  1283               	bcf	3,5	;RP0=0, select bank0
  1473  068E  1303               	bcf	3,6	;RP1=0, select bank0
  1474  068F  00A6               	movwf	??_temperatura+2
  1475  0690  0826               	movf	??_temperatura+2,w
  1476  0691  00CD               	movwf	_Dec3
  1477  0692                     l1568:
  1478                           
  1479                           ;Master_main.c: 249: Un3 = NUM - Dec3*10;
  1480  0692  30F6               	movlw	246
  1481  0693  00A4               	movwf	??_temperatura
  1482  0694  0824               	movf	??_temperatura,w
  1483  0695  00F0               	movwf	___bmul@multiplicand
  1484  0696  084D               	movf	_Dec3,w
  1485  0697  120A  118A  2202  120A  118A  	fcall	___bmul
  1486  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1487  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1488  069E  0753               	addwf	_NUM,w
  1489  069F  00A5               	movwf	??_temperatura+1
  1490  06A0  0825               	movf	??_temperatura+1,w
  1491  06A1  00CA               	movwf	_Un3
  1492  06A2                     l1570:
  1493                           
  1494                           ;Master_main.c: 250: AD3 = datos_ascii(Dec3);
  1495  06A2  084D               	movf	_Dec3,w
  1496  06A3  120A  118A  22EA  120A  118A  	fcall	_datos_ascii
  1497  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1498  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1499  06AA  00A4               	movwf	??_temperatura
  1500  06AB  0824               	movf	??_temperatura,w
  1501  06AC  00C4               	movwf	_AD3
  1502  06AD                     l1572:
  1503                           
  1504                           ;Master_main.c: 251: AU3 = datos_ascii(Un3);
  1505  06AD  084A               	movf	_Un3,w
  1506  06AE  120A  118A  22EA  120A  118A  	fcall	_datos_ascii
  1507  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1508  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1509  06B5  00A4               	movwf	??_temperatura
  1510  06B6  0824               	movf	??_temperatura,w
  1511  06B7  00C1               	movwf	_AU3
  1512  06B8                     l132:
  1513  06B8  0008               	return
  1514  06B9                     __end_of_temperatura:
  1515                           
  1516                           	psect	text2
  1517  023C                     __ptext2:	
  1518 ;; *************** function ___wmul *****************
  1519 ;; Defined at:
  1520 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  multiplier      2    0[COMMON] unsigned int 
  1523 ;;  multiplicand    2    2[COMMON] unsigned int 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  product         2    4[COMMON] unsigned int 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  2    0[COMMON] unsigned int 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         4       0       0       0       0
  1536 ;;      Locals:         2       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0
  1538 ;;      Totals:         6       0       0       0       0
  1539 ;;Total ram usage:        6 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_temperatura
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           
  1549                           ;psect for function ___wmul
  1550  023C                     ___wmul:
  1551  023C                     l1430:	
  1552                           ;incstack = 0
  1553                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1554                           
  1555  023C  01F4               	clrf	___wmul@product
  1556  023D  01F5               	clrf	___wmul@product+1
  1557  023E                     l1432:
  1558  023E  1C70               	btfss	___wmul@multiplier,0
  1559  023F  2A41               	goto	u511
  1560  0240  2A42               	goto	u510
  1561  0241                     u511:
  1562  0241  2A48               	goto	l326
  1563  0242                     u510:
  1564  0242                     l1434:
  1565  0242  0872               	movf	___wmul@multiplicand,w
  1566  0243  07F4               	addwf	___wmul@product,f
  1567  0244  1803               	skipnc
  1568  0245  0AF5               	incf	___wmul@product+1,f
  1569  0246  0873               	movf	___wmul@multiplicand+1,w
  1570  0247  07F5               	addwf	___wmul@product+1,f
  1571  0248                     l326:
  1572  0248  3001               	movlw	1
  1573  0249                     u525:
  1574  0249  1003               	clrc
  1575  024A  0DF2               	rlf	___wmul@multiplicand,f
  1576  024B  0DF3               	rlf	___wmul@multiplicand+1,f
  1577  024C  3EFF               	addlw	-1
  1578  024D  1D03               	skipz
  1579  024E  2A49               	goto	u525
  1580  024F                     l1436:
  1581  024F  3001               	movlw	1
  1582  0250                     u535:
  1583  0250  1003               	clrc
  1584  0251  0CF1               	rrf	___wmul@multiplier+1,f
  1585  0252  0CF0               	rrf	___wmul@multiplier,f
  1586  0253  3EFF               	addlw	-1
  1587  0254  1D03               	skipz
  1588  0255  2A50               	goto	u535
  1589  0256                     l1438:
  1590  0256  0870               	movf	___wmul@multiplier,w
  1591  0257  0471               	iorwf	___wmul@multiplier+1,w
  1592  0258  1D03               	btfss	3,2
  1593  0259  2A5B               	goto	u541
  1594  025A  2A5C               	goto	u540
  1595  025B                     u541:
  1596  025B  2A3E               	goto	l1432
  1597  025C                     u540:
  1598  025C                     l1440:
  1599  025C  0875               	movf	___wmul@product+1,w
  1600  025D  00F1               	movwf	?___wmul+1
  1601  025E  0874               	movf	___wmul@product,w
  1602  025F  00F0               	movwf	?___wmul
  1603  0260                     l328:
  1604  0260  0008               	return
  1605  0261                     __end_of___wmul:
  1606                           
  1607                           	psect	text3
  1608  0202                     __ptext3:	
  1609 ;; *************** function ___bmul *****************
  1610 ;; Defined at:
  1611 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  multiplier      1    wreg     unsigned char 
  1614 ;;  multiplicand    1    0[COMMON] unsigned char 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  multiplier      1    3[COMMON] unsigned char 
  1617 ;;  product         1    2[COMMON] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      unsigned char 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         1       0       0       0       0
  1628 ;;      Locals:         2       0       0       0       0
  1629 ;;      Temps:          1       0       0       0       0
  1630 ;;      Totals:         4       0       0       0       0
  1631 ;;Total ram usage:        4 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_temperatura
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function ___bmul
  1642  0202                     ___bmul:
  1643                           
  1644                           ;incstack = 0
  1645                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1646                           ;___bmul@multiplier stored from wreg
  1647  0202  00F3               	movwf	___bmul@multiplier
  1648  0203                     l1444:
  1649  0203  01F2               	clrf	___bmul@product
  1650  0204                     l1446:
  1651  0204  1C73               	btfss	___bmul@multiplier,0
  1652  0205  2A07               	goto	u551
  1653  0206  2A08               	goto	u550
  1654  0207                     u551:
  1655  0207  2A0C               	goto	l1450
  1656  0208                     u550:
  1657  0208                     l1448:
  1658  0208  0870               	movf	___bmul@multiplicand,w
  1659  0209  00F1               	movwf	??___bmul
  1660  020A  0871               	movf	??___bmul,w
  1661  020B  07F2               	addwf	___bmul@product,f
  1662  020C                     l1450:
  1663  020C  1003               	clrc
  1664  020D  0DF0               	rlf	___bmul@multiplicand,f
  1665  020E                     l1452:
  1666  020E  1003               	clrc
  1667  020F  0CF3               	rrf	___bmul@multiplier,f
  1668  0210  0873               	movf	___bmul@multiplier,w
  1669  0211  1D03               	btfss	3,2
  1670  0212  2A14               	goto	u561
  1671  0213  2A15               	goto	u560
  1672  0214                     u561:
  1673  0214  2A04               	goto	l1446
  1674  0215                     u560:
  1675  0215                     l1454:
  1676  0215  0872               	movf	___bmul@product,w
  1677  0216                     l352:
  1678  0216  0008               	return
  1679  0217                     __end_of___bmul:
  1680                           
  1681                           	psect	text4
  1682  02BB                     __ptext4:	
  1683 ;; *************** function _show *****************
  1684 ;; Defined at:
  1685 ;;		line 72 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  s               2   27[BANK0 ] PTR unsigned char 
  1688 ;;		 -> RAM(512), STR_1(16), 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       2       0       0       0
  1701 ;;      Locals:         0       0       0       0       0
  1702 ;;      Temps:          0       1       0       0       0
  1703 ;;      Totals:         0       3       0       0       0
  1704 ;;Total ram usage:        3 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    1
  1707 ;; This function calls:
  1708 ;;		_dat
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _show
  1716  02BB                     _show:
  1717  02BB                     l1618:	
  1718                           ;incstack = 0
  1719                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1720                           
  1721                           
  1722                           ;LCD.c: 74: while(*s) {
  1723  02BB  2AD9               	goto	l1626
  1724  02BC                     l1620:
  1725                           
  1726                           ;LCD.c: 75: dat(*s++);
  1727  02BC  083C               	movf	show@s+1,w
  1728  02BD  00FF               	movwf	btemp+1
  1729  02BE  083B               	movf	show@s,w
  1730  02BF  0084               	movwf	4
  1731  02C0  120A  118A  2003  120A  118A  	fcall	stringtab
  1732  02C5  120A  118A  21EF  120A  118A  	fcall	_dat
  1733  02CA                     l1622:
  1734  02CA  3001               	movlw	1
  1735  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1736  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1737  02CD  07BB               	addwf	show@s,f
  1738  02CE  1803               	skipnc
  1739  02CF  0ABC               	incf	show@s+1,f
  1740  02D0  3000               	movlw	0
  1741  02D1  07BC               	addwf	show@s+1,f
  1742  02D2                     l1624:
  1743                           
  1744                           ;LCD.c: 76: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1745  02D2  300C               	movlw	12
  1746  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1747  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1748  02D5  00BD               	movwf	??_show
  1749  02D6                     u877:
  1750  02D6  0BBD               	decfsz	??_show,f
  1751  02D7  2AD6               	goto	u877
  1752  02D8  0000               	nop
  1753  02D9                     l1626:
  1754  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1755  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1756  02DB  083C               	movf	show@s+1,w
  1757  02DC  00FF               	movwf	btemp+1
  1758  02DD  083B               	movf	show@s,w
  1759  02DE  0084               	movwf	4
  1760  02DF  120A  118A  2003  120A  118A  	fcall	stringtab
  1761  02E4  3A00               	xorlw	0
  1762  02E5  1D03               	skipz
  1763  02E6  2AE8               	goto	u801
  1764  02E7  2AE9               	goto	u800
  1765  02E8                     u801:
  1766  02E8  2ABC               	goto	l1620
  1767  02E9                     u800:
  1768  02E9                     l217:
  1769  02E9  0008               	return
  1770  02EA                     __end_of_show:
  1771                           
  1772                           	psect	text5
  1773  01EF                     __ptext5:	
  1774 ;; *************** function _dat *****************
  1775 ;; Defined at:
  1776 ;;		line 61 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  b               1    wreg     unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  b               1    1[COMMON] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       0       0       0       0
  1791 ;;      Locals:         1       0       0       0       0
  1792 ;;      Temps:          1       0       0       0       0
  1793 ;;      Totals:         2       0       0       0       0
  1794 ;;Total ram usage:        2 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_show
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _dat
  1805  01EF                     _dat:
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in _dat: [wreg]
  1809                           ;dat@b stored from wreg
  1810  01EF  00F1               	movwf	dat@b
  1811  01F0                     l1420:
  1812                           
  1813                           ;LCD.c: 63: PORTB=b;
  1814  01F0  0871               	movf	dat@b,w
  1815  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1816  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1817  01F3  0086               	movwf	6	;volatile
  1818  01F4                     l1422:
  1819                           
  1820                           ;LCD.c: 64: RE0=1;
  1821  01F4  1409               	bsf	9,0	;volatile
  1822  01F5                     l1424:
  1823                           
  1824                           ;LCD.c: 65: RE1=0;
  1825  01F5  1089               	bcf	9,1	;volatile
  1826  01F6                     l1426:
  1827                           
  1828                           ;LCD.c: 66: RE2=1;
  1829  01F6  1509               	bsf	9,2	;volatile
  1830                           
  1831                           ;LCD.c: 67: _delay((unsigned long)((1)*(4000000/4000.0)));
  1832  01F7  30C7               	movlw	199
  1833  01F8  00F0               	movwf	??_dat
  1834  01F9                     u887:
  1835  01F9  29FA               	nop2
  1836  01FA  0BF0               	decfsz	??_dat,f
  1837  01FB  29F9               	goto	u887
  1838  01FC  29FD               	nop2
  1839  01FD  29FE               	nop2
  1840  01FE                     l1428:
  1841                           
  1842                           ;LCD.c: 68: RE2=0;
  1843  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1844  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0200  1109               	bcf	9,2	;volatile
  1846  0201                     l211:
  1847  0201  0008               	return
  1848  0202                     __end_of_dat:
  1849                           
  1850                           	psect	text6
  1851  0217                     __ptext6:	
  1852 ;; *************** function _setup *****************
  1853 ;; Defined at:
  1854 ;;		line 133 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/Master_main.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    2
  1875 ;; This function calls:
  1876 ;;		_I2C_Master_Init
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           
  1883                           ;psect for function _setup
  1884  0217                     _setup:
  1885  0217                     l1540:	
  1886                           ;incstack = 0
  1887                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1888                           
  1889                           
  1890                           ;Master_main.c: 135: ANSEL = 0;
  1891  0217  1683               	bsf	3,5	;RP0=1, select bank3
  1892  0218  1703               	bsf	3,6	;RP1=1, select bank3
  1893  0219  0188               	clrf	8	;volatile
  1894                           
  1895                           ;Master_main.c: 136: ANSELH = 0;
  1896  021A  0189               	clrf	9	;volatile
  1897                           
  1898                           ;Master_main.c: 138: TRISA = 0;
  1899  021B  1683               	bsf	3,5	;RP0=1, select bank1
  1900  021C  1303               	bcf	3,6	;RP1=0, select bank1
  1901  021D  0185               	clrf	5	;volatile
  1902                           
  1903                           ;Master_main.c: 139: TRISB = 0;
  1904  021E  0186               	clrf	6	;volatile
  1905                           
  1906                           ;Master_main.c: 140: TRISD = 0;
  1907  021F  0188               	clrf	8	;volatile
  1908                           
  1909                           ;Master_main.c: 141: TRISE = 0;
  1910  0220  0189               	clrf	9	;volatile
  1911                           
  1912                           ;Master_main.c: 143: PORTA = 0;
  1913  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0223  0185               	clrf	5	;volatile
  1916                           
  1917                           ;Master_main.c: 144: PORTB = 0;
  1918  0224  0186               	clrf	6	;volatile
  1919                           
  1920                           ;Master_main.c: 145: PORTD = 0;
  1921  0225  0188               	clrf	8	;volatile
  1922                           
  1923                           ;Master_main.c: 146: PORTE = 0;
  1924  0226  0189               	clrf	9	;volatile
  1925  0227                     l1542:
  1926                           
  1927                           ;Master_main.c: 148: OSCCONbits.IRCF=0b111;
  1928  0227  3070               	movlw	112
  1929  0228  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0229  1303               	bcf	3,6	;RP1=0, select bank1
  1931  022A  048F               	iorwf	15,f	;volatile
  1932  022B                     l1544:
  1933                           
  1934                           ;Master_main.c: 149: OSCCONbits.SCS=1;
  1935  022B  140F               	bsf	15,0	;volatile
  1936  022C                     l1546:
  1937                           
  1938                           ;Master_main.c: 151: I2C_Master_Init(100000);
  1939  022C  3000               	movlw	0
  1940  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1941  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1942  022F  00A3               	movwf	I2C_Master_Init@c+3
  1943  0230  3001               	movlw	1
  1944  0231  00A2               	movwf	I2C_Master_Init@c+2
  1945  0232  3086               	movlw	134
  1946  0233  00A1               	movwf	I2C_Master_Init@c+1
  1947  0234  30A0               	movlw	160
  1948  0235  00A0               	movwf	I2C_Master_Init@c
  1949  0236  120A  118A  2358  120A  118A  	fcall	_I2C_Master_Init
  1950  023B                     l105:
  1951  023B  0008               	return
  1952  023C                     __end_of_setup:
  1953                           
  1954                           	psect	text7
  1955  0358                     __ptext7:	
  1956 ;; *************** function _I2C_Master_Init *****************
  1957 ;; Defined at:
  1958 ;;		line 16 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  c               4    0[BANK0 ] const unsigned long 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, pclath, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         0       4       0       0       0
  1973 ;;      Locals:         0       0       0       0       0
  1974 ;;      Temps:          0       4       0       0       0
  1975 ;;      Totals:         0       8       0       0       0
  1976 ;;Total ram usage:        8 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    1
  1979 ;; This function calls:
  1980 ;;		___lldiv
  1981 ;; This function is called by:
  1982 ;;		_setup
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _I2C_Master_Init
  1988  0358                     _I2C_Master_Init:
  1989  0358                     l1332:	
  1990                           ;incstack = 0
  1991                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1992                           
  1993                           
  1994                           ;I2C.c: 18: SSPCON = 0b00101000;
  1995  0358  3028               	movlw	40
  1996  0359  1283               	bcf	3,5	;RP0=0, select bank0
  1997  035A  1303               	bcf	3,6	;RP1=0, select bank0
  1998  035B  0094               	movwf	20	;volatile
  1999  035C                     l1334:
  2000                           
  2001                           ;I2C.c: 19: SSPCON2 = 0;
  2002  035C  1683               	bsf	3,5	;RP0=1, select bank1
  2003  035D  1303               	bcf	3,6	;RP1=0, select bank1
  2004  035E  0191               	clrf	17	;volatile
  2005  035F                     l1336:
  2006                           
  2007                           ;I2C.c: 20: SSPADD = (8000000/(4*c))-1;
  2008  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0361  0820               	movf	I2C_Master_Init@c,w
  2011  0362  00A4               	movwf	??_I2C_Master_Init
  2012  0363  0821               	movf	I2C_Master_Init@c+1,w
  2013  0364  00A5               	movwf	??_I2C_Master_Init+1
  2014  0365  0822               	movf	I2C_Master_Init@c+2,w
  2015  0366  00A6               	movwf	??_I2C_Master_Init+2
  2016  0367  0823               	movf	I2C_Master_Init@c+3,w
  2017  0368  00A7               	movwf	??_I2C_Master_Init+3
  2018  0369  3002               	movlw	2
  2019  036A                     u485:
  2020  036A  1003               	clrc
  2021  036B  0DA4               	rlf	??_I2C_Master_Init,f
  2022  036C  0DA5               	rlf	??_I2C_Master_Init+1,f
  2023  036D  0DA6               	rlf	??_I2C_Master_Init+2,f
  2024  036E  0DA7               	rlf	??_I2C_Master_Init+3,f
  2025  036F                     u480:
  2026  036F  3EFF               	addlw	-1
  2027  0370  1D03               	skipz
  2028  0371  2B6A               	goto	u485
  2029  0372  0827               	movf	??_I2C_Master_Init+3,w
  2030  0373  00F3               	movwf	___lldiv@divisor+3
  2031  0374  0826               	movf	??_I2C_Master_Init+2,w
  2032  0375  00F2               	movwf	___lldiv@divisor+2
  2033  0376  0825               	movf	??_I2C_Master_Init+1,w
  2034  0377  00F1               	movwf	___lldiv@divisor+1
  2035  0378  0824               	movf	??_I2C_Master_Init,w
  2036  0379  00F0               	movwf	___lldiv@divisor
  2037  037A  3000               	movlw	0
  2038  037B  00F7               	movwf	___lldiv@dividend+3
  2039  037C  307A               	movlw	122
  2040  037D  00F6               	movwf	___lldiv@dividend+2
  2041  037E  3012               	movlw	18
  2042  037F  00F5               	movwf	___lldiv@dividend+1
  2043  0380  3000               	movlw	0
  2044  0381  00F4               	movwf	___lldiv@dividend
  2045  0382  120A  118A  23EB  120A  118A  	fcall	___lldiv
  2046  0387  0870               	movf	?___lldiv,w
  2047  0388  3EFF               	addlw	255
  2048  0389  1683               	bsf	3,5	;RP0=1, select bank1
  2049  038A  1303               	bcf	3,6	;RP1=0, select bank1
  2050  038B  0093               	movwf	19	;volatile
  2051  038C                     l1338:
  2052                           
  2053                           ;I2C.c: 21: SSPSTAT = 0;
  2054  038C  0194               	clrf	20	;volatile
  2055  038D                     l1340:
  2056                           
  2057                           ;I2C.c: 22: TRISCbits.TRISC3 = 1;
  2058  038D  1587               	bsf	7,3	;volatile
  2059  038E                     l1342:
  2060                           
  2061                           ;I2C.c: 23: TRISCbits.TRISC4 = 1;
  2062  038E  1607               	bsf	7,4	;volatile
  2063  038F                     l161:
  2064  038F  0008               	return
  2065  0390                     __end_of_I2C_Master_Init:
  2066                           
  2067                           	psect	text8
  2068  03EB                     __ptext8:	
  2069 ;; *************** function ___lldiv *****************
  2070 ;; Defined at:
  2071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  divisor         4    0[COMMON] unsigned long 
  2074 ;;  dividend        4    4[COMMON] unsigned long 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  quotient        4    9[COMMON] unsigned long 
  2077 ;;  counter         1   13[COMMON] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  4    0[COMMON] unsigned long 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         8       0       0       0       0
  2088 ;;      Locals:         5       0       0       0       0
  2089 ;;      Temps:          1       0       0       0       0
  2090 ;;      Totals:        14       0       0       0       0
  2091 ;;Total ram usage:       14 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_I2C_Master_Init
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function ___lldiv
  2102  03EB                     ___lldiv:
  2103  03EB                     l1298:	
  2104                           ;incstack = 0
  2105                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2106                           
  2107  03EB  3000               	movlw	0
  2108  03EC  00FC               	movwf	___lldiv@quotient+3
  2109  03ED  3000               	movlw	0
  2110  03EE  00FB               	movwf	___lldiv@quotient+2
  2111  03EF  3000               	movlw	0
  2112  03F0  00FA               	movwf	___lldiv@quotient+1
  2113  03F1  3000               	movlw	0
  2114  03F2  00F9               	movwf	___lldiv@quotient
  2115  03F3  0873               	movf	___lldiv@divisor+3,w
  2116  03F4  0472               	iorwf	___lldiv@divisor+2,w
  2117  03F5  0471               	iorwf	___lldiv@divisor+1,w
  2118  03F6  0470               	iorwf	___lldiv@divisor,w
  2119  03F7  1903               	skipnz
  2120  03F8  2BFA               	goto	u411
  2121  03F9  2BFB               	goto	u410
  2122  03FA                     u411:
  2123  03FA  2C48               	goto	l1318
  2124  03FB                     u410:
  2125  03FB                     l1300:
  2126  03FB  01FD               	clrf	___lldiv@counter
  2127  03FC  0AFD               	incf	___lldiv@counter,f
  2128  03FD  2C0B               	goto	l1304
  2129  03FE                     l1302:
  2130  03FE  3001               	movlw	1
  2131  03FF  00F8               	movwf	??___lldiv
  2132  0400                     u425:
  2133  0400  1003               	clrc
  2134  0401  0DF0               	rlf	___lldiv@divisor,f
  2135  0402  0DF1               	rlf	___lldiv@divisor+1,f
  2136  0403  0DF2               	rlf	___lldiv@divisor+2,f
  2137  0404  0DF3               	rlf	___lldiv@divisor+3,f
  2138  0405  0BF8               	decfsz	??___lldiv,f
  2139  0406  2C00               	goto	u425
  2140  0407  3001               	movlw	1
  2141  0408  00F8               	movwf	??___lldiv
  2142  0409  0878               	movf	??___lldiv,w
  2143  040A  07FD               	addwf	___lldiv@counter,f
  2144  040B                     l1304:
  2145  040B  1FF3               	btfss	___lldiv@divisor+3,7
  2146  040C  2C0E               	goto	u431
  2147  040D  2C0F               	goto	u430
  2148  040E                     u431:
  2149  040E  2BFE               	goto	l1302
  2150  040F                     u430:
  2151  040F                     l1306:
  2152  040F  3001               	movlw	1
  2153  0410  00F8               	movwf	??___lldiv
  2154  0411                     u445:
  2155  0411  1003               	clrc
  2156  0412  0DF9               	rlf	___lldiv@quotient,f
  2157  0413  0DFA               	rlf	___lldiv@quotient+1,f
  2158  0414  0DFB               	rlf	___lldiv@quotient+2,f
  2159  0415  0DFC               	rlf	___lldiv@quotient+3,f
  2160  0416  0BF8               	decfsz	??___lldiv,f
  2161  0417  2C11               	goto	u445
  2162  0418                     l1308:
  2163  0418  0873               	movf	___lldiv@divisor+3,w
  2164  0419  0277               	subwf	___lldiv@dividend+3,w
  2165  041A  1D03               	skipz
  2166  041B  2C26               	goto	u455
  2167  041C  0872               	movf	___lldiv@divisor+2,w
  2168  041D  0276               	subwf	___lldiv@dividend+2,w
  2169  041E  1D03               	skipz
  2170  041F  2C26               	goto	u455
  2171  0420  0871               	movf	___lldiv@divisor+1,w
  2172  0421  0275               	subwf	___lldiv@dividend+1,w
  2173  0422  1D03               	skipz
  2174  0423  2C26               	goto	u455
  2175  0424  0870               	movf	___lldiv@divisor,w
  2176  0425  0274               	subwf	___lldiv@dividend,w
  2177  0426                     u455:
  2178  0426  1C03               	skipc
  2179  0427  2C29               	goto	u451
  2180  0428  2C2A               	goto	u450
  2181  0429                     u451:
  2182  0429  2C39               	goto	l1314
  2183  042A                     u450:
  2184  042A                     l1310:
  2185  042A  0870               	movf	___lldiv@divisor,w
  2186  042B  02F4               	subwf	___lldiv@dividend,f
  2187  042C  0871               	movf	___lldiv@divisor+1,w
  2188  042D  1C03               	skipc
  2189  042E  0F71               	incfsz	___lldiv@divisor+1,w
  2190  042F  02F5               	subwf	___lldiv@dividend+1,f
  2191  0430  0872               	movf	___lldiv@divisor+2,w
  2192  0431  1C03               	skipc
  2193  0432  0F72               	incfsz	___lldiv@divisor+2,w
  2194  0433  02F6               	subwf	___lldiv@dividend+2,f
  2195  0434  0873               	movf	___lldiv@divisor+3,w
  2196  0435  1C03               	skipc
  2197  0436  0F73               	incfsz	___lldiv@divisor+3,w
  2198  0437  02F7               	subwf	___lldiv@dividend+3,f
  2199  0438                     l1312:
  2200  0438  1479               	bsf	___lldiv@quotient,0
  2201  0439                     l1314:
  2202  0439  3001               	movlw	1
  2203  043A                     u465:
  2204  043A  1003               	clrc
  2205  043B  0CF3               	rrf	___lldiv@divisor+3,f
  2206  043C  0CF2               	rrf	___lldiv@divisor+2,f
  2207  043D  0CF1               	rrf	___lldiv@divisor+1,f
  2208  043E  0CF0               	rrf	___lldiv@divisor,f
  2209  043F  3EFF               	addlw	-1
  2210  0440  1D03               	skipz
  2211  0441  2C3A               	goto	u465
  2212  0442                     l1316:
  2213  0442  3001               	movlw	1
  2214  0443  02FD               	subwf	___lldiv@counter,f
  2215  0444  1D03               	btfss	3,2
  2216  0445  2C47               	goto	u471
  2217  0446  2C48               	goto	u470
  2218  0447                     u471:
  2219  0447  2C0F               	goto	l1306
  2220  0448                     u470:
  2221  0448                     l1318:
  2222  0448  087C               	movf	___lldiv@quotient+3,w
  2223  0449  00F3               	movwf	?___lldiv+3
  2224  044A  087B               	movf	___lldiv@quotient+2,w
  2225  044B  00F2               	movwf	?___lldiv+2
  2226  044C  087A               	movf	___lldiv@quotient+1,w
  2227  044D  00F1               	movwf	?___lldiv+1
  2228  044E  0879               	movf	___lldiv@quotient,w
  2229  044F  00F0               	movwf	?___lldiv
  2230  0450                     l362:
  2231  0450  0008               	return
  2232  0451                     __end_of___lldiv:
  2233                           
  2234                           	psect	text9
  2235  0261                     __ptext9:	
  2236 ;; *************** function _lcd_linea *****************
  2237 ;; Defined at:
  2238 ;;		line 81 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  a               1    wreg     unsigned char 
  2241 ;;  b               1    2[COMMON] unsigned char 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  a               1    4[COMMON] unsigned char 
  2244 ;;  z               1    6[COMMON] unsigned char 
  2245 ;;  temp            1    5[COMMON] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0, pclath, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2255 ;;      Params:         1       0       0       0       0
  2256 ;;      Locals:         3       0       0       0       0
  2257 ;;      Temps:          1       0       0       0       0
  2258 ;;      Totals:         5       0       0       0       0
  2259 ;;Total ram usage:        5 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; Hardware stack levels required when called:    1
  2262 ;; This function calls:
  2263 ;;		_cmd
  2264 ;; This function is called by:
  2265 ;;		_main
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function _lcd_linea
  2271  0261                     _lcd_linea:
  2272                           
  2273                           ;incstack = 0
  2274                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  2275                           ;lcd_linea@a stored from wreg
  2276  0261  00F4               	movwf	lcd_linea@a
  2277  0262                     l1602:
  2278                           
  2279                           ;LCD.c: 82: char temp, z;;LCD.c: 83: if (a == 1)
  2280  0262  0374               	decf	lcd_linea@a,w
  2281  0263  1D03               	btfss	3,2
  2282  0264  2A66               	goto	u781
  2283  0265  2A67               	goto	u780
  2284  0266                     u781:
  2285  0266  2A77               	goto	l1610
  2286  0267                     u780:
  2287  0267                     l1604:
  2288                           
  2289                           ;LCD.c: 84: {;LCD.c: 85: temp = 0x80 + b - 1;
  2290  0267  0872               	movf	lcd_linea@b,w
  2291  0268  3E7F               	addlw	127
  2292  0269  00F3               	movwf	??_lcd_linea
  2293  026A  0873               	movf	??_lcd_linea,w
  2294  026B  00F5               	movwf	lcd_linea@temp
  2295  026C                     l1606:
  2296                           
  2297                           ;LCD.c: 86: z = temp;
  2298  026C  0875               	movf	lcd_linea@temp,w
  2299  026D  00F3               	movwf	??_lcd_linea
  2300  026E  0873               	movf	??_lcd_linea,w
  2301  026F  00F6               	movwf	lcd_linea@z
  2302  0270                     l1608:
  2303                           
  2304                           ;LCD.c: 87: cmd(z);
  2305  0270  0876               	movf	lcd_linea@z,w
  2306  0271  120A  118A  21DC  120A  118A  	fcall	_cmd
  2307                           
  2308                           ;LCD.c: 89: }
  2309  0276  2A8C               	goto	l223
  2310  0277                     l1610:
  2311                           
  2312                           ;LCD.c: 90: else if (a == 2)
  2313  0277  3002               	movlw	2
  2314  0278  0674               	xorwf	lcd_linea@a,w
  2315  0279  1D03               	btfss	3,2
  2316  027A  2A7C               	goto	u791
  2317  027B  2A7D               	goto	u790
  2318  027C                     u791:
  2319  027C  2A8C               	goto	l223
  2320  027D                     u790:
  2321  027D                     l1612:
  2322                           
  2323                           ;LCD.c: 91: {;LCD.c: 92: temp = 0xC0 + b - 1;
  2324  027D  0872               	movf	lcd_linea@b,w
  2325  027E  3EBF               	addlw	191
  2326  027F  00F3               	movwf	??_lcd_linea
  2327  0280  0873               	movf	??_lcd_linea,w
  2328  0281  00F5               	movwf	lcd_linea@temp
  2329  0282                     l1614:
  2330                           
  2331                           ;LCD.c: 93: z = temp;
  2332  0282  0875               	movf	lcd_linea@temp,w
  2333  0283  00F3               	movwf	??_lcd_linea
  2334  0284  0873               	movf	??_lcd_linea,w
  2335  0285  00F6               	movwf	lcd_linea@z
  2336  0286                     l1616:
  2337                           
  2338                           ;LCD.c: 94: cmd(z);
  2339  0286  0876               	movf	lcd_linea@z,w
  2340  0287  120A  118A  21DC  120A  118A  	fcall	_cmd
  2341  028C                     l223:
  2342  028C  0008               	return
  2343  028D                     __end_of_lcd_linea:
  2344                           
  2345                           	psect	text10
  2346  0321                     __ptext10:	
  2347 ;; *************** function _lcd_init *****************
  2348 ;; Defined at:
  2349 ;;		line 36 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, pclath, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0
  2366 ;;      Totals:         0       0       0       0       0
  2367 ;;Total ram usage:        0 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    1
  2370 ;; This function calls:
  2371 ;;		_cmd
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _lcd_init
  2379  0321                     _lcd_init:
  2380  0321                     l1550:	
  2381                           ;incstack = 0
  2382                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2383                           
  2384                           
  2385                           ;LCD.c: 38: cmd(0x30);
  2386  0321  3030               	movlw	48
  2387  0322  120A  118A  21DC  120A  118A  	fcall	_cmd
  2388                           
  2389                           ;LCD.c: 39: cmd(0x0C);
  2390  0327  300C               	movlw	12
  2391  0328  120A  118A  21DC  120A  118A  	fcall	_cmd
  2392                           
  2393                           ;LCD.c: 40: cmd(0x01);
  2394  032D  3001               	movlw	1
  2395  032E  120A  118A  21DC  120A  118A  	fcall	_cmd
  2396                           
  2397                           ;LCD.c: 41: cmd(0x06);
  2398  0333  3006               	movlw	6
  2399  0334  120A  118A  21DC  120A  118A  	fcall	_cmd
  2400                           
  2401                           ;LCD.c: 42: cmd(0x80);
  2402  0339  3080               	movlw	128
  2403  033A  120A  118A  21DC  120A  118A  	fcall	_cmd
  2404                           
  2405                           ;LCD.c: 43: cmd(0x38);
  2406  033F  3038               	movlw	56
  2407  0340  120A  118A  21DC  120A  118A  	fcall	_cmd
  2408                           
  2409                           ;LCD.c: 44: cmd(0x0c);
  2410  0345  300C               	movlw	12
  2411  0346  120A  118A  21DC  120A  118A  	fcall	_cmd
  2412                           
  2413                           ;LCD.c: 45: cmd(0x06);
  2414  034B  3006               	movlw	6
  2415  034C  120A  118A  21DC  120A  118A  	fcall	_cmd
  2416                           
  2417                           ;LCD.c: 46: cmd(0x80);
  2418  0351  3080               	movlw	128
  2419  0352  120A  118A  21DC  120A  118A  	fcall	_cmd
  2420  0357                     l205:
  2421  0357  0008               	return
  2422  0358                     __end_of_lcd_init:
  2423                           
  2424                           	psect	text11
  2425  01CF                     __ptext11:	
  2426 ;; *************** function _lcd_clear *****************
  2427 ;; Defined at:
  2428 ;;		line 29 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0, pclath, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2442 ;;      Params:         0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0
  2445 ;;      Totals:         0       0       0       0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    1
  2449 ;; This function calls:
  2450 ;;		_cmd
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _lcd_clear
  2458  01CF                     _lcd_clear:
  2459  01CF                     l1548:	
  2460                           ;incstack = 0
  2461                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2462                           
  2463                           
  2464                           ;LCD.c: 31: cmd(0);
  2465  01CF  3000               	movlw	0
  2466  01D0  120A  118A  21DC  120A  118A  	fcall	_cmd
  2467                           
  2468                           ;LCD.c: 32: cmd(1);
  2469  01D5  3001               	movlw	1
  2470  01D6  120A  118A  21DC  120A  118A  	fcall	_cmd
  2471  01DB                     l202:
  2472  01DB  0008               	return
  2473  01DC                     __end_of_lcd_clear:
  2474                           
  2475                           	psect	text12
  2476  01DC                     __ptext12:	
  2477 ;; *************** function _cmd *****************
  2478 ;; Defined at:
  2479 ;;		line 50 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  a               1    wreg     unsigned char 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  a               1    1[COMMON] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2493 ;;      Params:         0       0       0       0       0
  2494 ;;      Locals:         1       0       0       0       0
  2495 ;;      Temps:          1       0       0       0       0
  2496 ;;      Totals:         2       0       0       0       0
  2497 ;;Total ram usage:        2 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;;		_lcd_clear
  2504 ;;		_lcd_init
  2505 ;;		_lcd_linea
  2506 ;;		_lcd_mov_derecha
  2507 ;;		_lcd_mov_izquierda
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function _cmd
  2513  01DC                     _cmd:
  2514                           
  2515                           ;incstack = 0
  2516                           ; Regs used in _cmd: [wreg]
  2517                           ;cmd@a stored from wreg
  2518  01DC  00F1               	movwf	cmd@a
  2519  01DD                     l1322:
  2520                           
  2521                           ;LCD.c: 52: PORTB=a;
  2522  01DD  0871               	movf	cmd@a,w
  2523  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2524  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2525  01E0  0086               	movwf	6	;volatile
  2526  01E1                     l1324:
  2527                           
  2528                           ;LCD.c: 53: RE0=0;
  2529  01E1  1009               	bcf	9,0	;volatile
  2530  01E2                     l1326:
  2531                           
  2532                           ;LCD.c: 54: RE1=0;
  2533  01E2  1089               	bcf	9,1	;volatile
  2534  01E3                     l1328:
  2535                           
  2536                           ;LCD.c: 55: RE2=1;
  2537  01E3  1509               	bsf	9,2	;volatile
  2538                           
  2539                           ;LCD.c: 56: _delay((unsigned long)((1)*(4000000/4000.0)));
  2540  01E4  30C7               	movlw	199
  2541  01E5  00F0               	movwf	??_cmd
  2542  01E6                     u897:
  2543  01E6  29E7               	nop2
  2544  01E7  0BF0               	decfsz	??_cmd,f
  2545  01E8  29E6               	goto	u897
  2546  01E9  29EA               	nop2
  2547  01EA  29EB               	nop2
  2548  01EB                     l1330:
  2549                           
  2550                           ;LCD.c: 57: RE2=0;
  2551  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2552  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2553  01ED  1109               	bcf	9,2	;volatile
  2554  01EE                     l208:
  2555  01EE  0008               	return
  2556  01EF                     __end_of_cmd:
  2557                           
  2558                           	psect	text13
  2559  04BA                     __ptext13:	
  2560 ;; *************** function _lcd_ascii *****************
  2561 ;; Defined at:
  2562 ;;		line 213 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/Master_main.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  random         16   11[BANK0 ] unsigned char [16]
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      unsigned char 
  2569 ;; Registers used:
  2570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         0       0       0       0       0
  2577 ;;      Locals:         0      16       0       0       0
  2578 ;;      Temps:          0       3       0       0       0
  2579 ;;      Totals:         0      19       0       0       0
  2580 ;;Total ram usage:       19 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    1
  2583 ;; This function calls:
  2584 ;;		___awdiv
  2585 ;;		___awmod
  2586 ;;		_datos_ascii
  2587 ;; This function is called by:
  2588 ;;		_main
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           
  2593                           ;psect for function _lcd_ascii
  2594  04BA                     _lcd_ascii:
  2595  04BA                     l1628:	
  2596                           ;incstack = 0
  2597                           ; Regs used in _lcd_ascii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2598                           
  2599                           
  2600                           ;Master_main.c: 215: uint8_t random[16];;Master_main.c: 216: random[0]=32;
  2601  04BA  3020               	movlw	32
  2602  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2603  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2604  04BD  00A8               	movwf	??_lcd_ascii
  2605  04BE  0828               	movf	??_lcd_ascii,w
  2606  04BF  00AB               	movwf	lcd_ascii@random
  2607                           
  2608                           ;Master_main.c: 217: random[1]=32;
  2609  04C0  3020               	movlw	32
  2610  04C1  00A8               	movwf	??_lcd_ascii
  2611  04C2  0828               	movf	??_lcd_ascii,w
  2612  04C3  00AC               	movwf	lcd_ascii@random+1
  2613  04C4                     l1630:
  2614                           
  2615                           ;Master_main.c: 218: random[2]=datos_ascii((desde_contador/10)%10);
  2616  04C4  300A               	movlw	10
  2617  04C5  00A4               	movwf	___awmod@divisor
  2618  04C6  3000               	movlw	0
  2619  04C7  00A5               	movwf	___awmod@divisor+1
  2620  04C8  300A               	movlw	10
  2621  04C9  00F6               	movwf	___awdiv@divisor
  2622  04CA  3000               	movlw	0
  2623  04CB  00F7               	movwf	___awdiv@divisor+1
  2624  04CC  0855               	movf	_desde_contador,w
  2625  04CD  00A8               	movwf	??_lcd_ascii
  2626  04CE  01A9               	clrf	??_lcd_ascii+1
  2627  04CF  0828               	movf	??_lcd_ascii,w
  2628  04D0  00F8               	movwf	___awdiv@dividend
  2629  04D1  0829               	movf	??_lcd_ascii+1,w
  2630  04D2  00F9               	movwf	___awdiv@dividend+1
  2631  04D3  120A  118A  2451  120A  118A  	fcall	___awdiv
  2632  04D8  0877               	movf	?___awdiv+1,w
  2633  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2634  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2635  04DB  00A7               	movwf	___awmod@dividend+1
  2636  04DC  0876               	movf	?___awdiv,w
  2637  04DD  00A6               	movwf	___awmod@dividend
  2638  04DE  120A  118A  2390  120A  118A  	fcall	___awmod
  2639  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2640  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2641  04E5  0824               	movf	?___awmod,w
  2642  04E6  120A  118A  22EA  120A  118A  	fcall	_datos_ascii
  2643  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2644  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2645  04ED  00AA               	movwf	??_lcd_ascii+2
  2646  04EE  082A               	movf	??_lcd_ascii+2,w
  2647  04EF  00AD               	movwf	lcd_ascii@random+2
  2648  04F0                     l1632:
  2649                           
  2650                           ;Master_main.c: 219: random[3]=datos_ascii(desde_contador%10);
  2651  04F0  300A               	movlw	10
  2652  04F1  00A4               	movwf	___awmod@divisor
  2653  04F2  3000               	movlw	0
  2654  04F3  00A5               	movwf	___awmod@divisor+1
  2655  04F4  0855               	movf	_desde_contador,w
  2656  04F5  00A8               	movwf	??_lcd_ascii
  2657  04F6  01A9               	clrf	??_lcd_ascii+1
  2658  04F7  0828               	movf	??_lcd_ascii,w
  2659  04F8  00A6               	movwf	___awmod@dividend
  2660  04F9  0829               	movf	??_lcd_ascii+1,w
  2661  04FA  00A7               	movwf	___awmod@dividend+1
  2662  04FB  120A  118A  2390  120A  118A  	fcall	___awmod
  2663  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0502  0824               	movf	?___awmod,w
  2666  0503  120A  118A  22EA  120A  118A  	fcall	_datos_ascii
  2667  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2669  050A  00AA               	movwf	??_lcd_ascii+2
  2670  050B  082A               	movf	??_lcd_ascii+2,w
  2671  050C  00AE               	movwf	lcd_ascii@random+3
  2672                           
  2673                           ;Master_main.c: 220: random[4]=32;
  2674  050D  3020               	movlw	32
  2675  050E  00A8               	movwf	??_lcd_ascii
  2676  050F  0828               	movf	??_lcd_ascii,w
  2677  0510  00AF               	movwf	lcd_ascii@random+4
  2678  0511                     l1634:
  2679                           
  2680                           ;Master_main.c: 221: random[5]=datos_ascii(((2*desde_pot)/100)%10);
  2681  0511  300A               	movlw	10
  2682  0512  00A4               	movwf	___awmod@divisor
  2683  0513  3000               	movlw	0
  2684  0514  00A5               	movwf	___awmod@divisor+1
  2685  0515  3064               	movlw	100
  2686  0516  00F6               	movwf	___awdiv@divisor
  2687  0517  3000               	movlw	0
  2688  0518  00F7               	movwf	___awdiv@divisor+1
  2689  0519  0854               	movf	_desde_pot,w
  2690  051A  00A8               	movwf	??_lcd_ascii
  2691  051B  01A9               	clrf	??_lcd_ascii+1
  2692  051C  1003               	clrc
  2693  051D  0D28               	rlf	??_lcd_ascii,w
  2694  051E  00F8               	movwf	___awdiv@dividend
  2695  051F  0D29               	rlf	??_lcd_ascii+1,w
  2696  0520  00F9               	movwf	___awdiv@dividend+1
  2697  0521  120A  118A  2451  120A  118A  	fcall	___awdiv
  2698  0526  0877               	movf	?___awdiv+1,w
  2699  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0528  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0529  00A7               	movwf	___awmod@dividend+1
  2702  052A  0876               	movf	?___awdiv,w
  2703  052B  00A6               	movwf	___awmod@dividend
  2704  052C  120A  118A  2390  120A  118A  	fcall	___awmod
  2705  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0533  0824               	movf	?___awmod,w
  2708  0534  120A  118A  22EA  120A  118A  	fcall	_datos_ascii
  2709  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2710  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2711  053B  00AA               	movwf	??_lcd_ascii+2
  2712  053C  082A               	movf	??_lcd_ascii+2,w
  2713  053D  00B0               	movwf	lcd_ascii@random+5
  2714  053E                     l1636:
  2715                           
  2716                           ;Master_main.c: 222: random[6]=0x2E;
  2717  053E  302E               	movlw	46
  2718  053F  00A8               	movwf	??_lcd_ascii
  2719  0540  0828               	movf	??_lcd_ascii,w
  2720  0541  00B1               	movwf	lcd_ascii@random+6
  2721                           
  2722                           ;Master_main.c: 223: random[7]=datos_ascii(((2*desde_pot)/10)%10);
  2723  0542  300A               	movlw	10
  2724  0543  00A4               	movwf	___awmod@divisor
  2725  0544  3000               	movlw	0
  2726  0545  00A5               	movwf	___awmod@divisor+1
  2727  0546  300A               	movlw	10
  2728  0547  00F6               	movwf	___awdiv@divisor
  2729  0548  3000               	movlw	0
  2730  0549  00F7               	movwf	___awdiv@divisor+1
  2731  054A  0854               	movf	_desde_pot,w
  2732  054B  00A8               	movwf	??_lcd_ascii
  2733  054C  01A9               	clrf	??_lcd_ascii+1
  2734  054D  1003               	clrc
  2735  054E  0D28               	rlf	??_lcd_ascii,w
  2736  054F  00F8               	movwf	___awdiv@dividend
  2737  0550  0D29               	rlf	??_lcd_ascii+1,w
  2738  0551  00F9               	movwf	___awdiv@dividend+1
  2739  0552  120A  118A  2451  120A  118A  	fcall	___awdiv
  2740  0557  0877               	movf	?___awdiv+1,w
  2741  0558  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0559  1303               	bcf	3,6	;RP1=0, select bank0
  2743  055A  00A7               	movwf	___awmod@dividend+1
  2744  055B  0876               	movf	?___awdiv,w
  2745  055C  00A6               	movwf	___awmod@dividend
  2746  055D  120A  118A  2390  120A  118A  	fcall	___awmod
  2747  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0564  0824               	movf	?___awmod,w
  2750  0565  120A  118A  22EA  120A  118A  	fcall	_datos_ascii
  2751  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2752  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2753  056C  00AA               	movwf	??_lcd_ascii+2
  2754  056D  082A               	movf	??_lcd_ascii+2,w
  2755  056E  00B2               	movwf	lcd_ascii@random+7
  2756                           
  2757                           ;Master_main.c: 224: random[8]=datos_ascii(desde_pot%10);
  2758  056F  300A               	movlw	10
  2759  0570  00A4               	movwf	___awmod@divisor
  2760  0571  3000               	movlw	0
  2761  0572  00A5               	movwf	___awmod@divisor+1
  2762  0573  0854               	movf	_desde_pot,w
  2763  0574  00A8               	movwf	??_lcd_ascii
  2764  0575  01A9               	clrf	??_lcd_ascii+1
  2765  0576  0828               	movf	??_lcd_ascii,w
  2766  0577  00A6               	movwf	___awmod@dividend
  2767  0578  0829               	movf	??_lcd_ascii+1,w
  2768  0579  00A7               	movwf	___awmod@dividend+1
  2769  057A  120A  118A  2390  120A  118A  	fcall	___awmod
  2770  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0581  0824               	movf	?___awmod,w
  2773  0582  120A  118A  22EA  120A  118A  	fcall	_datos_ascii
  2774  0587  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0588  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0589  00AA               	movwf	??_lcd_ascii+2
  2777  058A  082A               	movf	??_lcd_ascii+2,w
  2778  058B  00B3               	movwf	lcd_ascii@random+8
  2779  058C                     l1638:
  2780                           
  2781                           ;Master_main.c: 225: random[9]=86;
  2782  058C  3056               	movlw	86
  2783  058D  00A8               	movwf	??_lcd_ascii
  2784  058E  0828               	movf	??_lcd_ascii,w
  2785  058F  00B4               	movwf	lcd_ascii@random+9
  2786  0590                     l1640:
  2787                           
  2788                           ;Master_main.c: 226: random[10]=32;
  2789  0590  3020               	movlw	32
  2790  0591  00A8               	movwf	??_lcd_ascii
  2791  0592  0828               	movf	??_lcd_ascii,w
  2792  0593  00B5               	movwf	lcd_ascii@random+10
  2793  0594                     l1642:
  2794                           
  2795                           ;Master_main.c: 227: random[11]=AC3;
  2796  0594  0847               	movf	_AC3,w
  2797  0595  00A8               	movwf	??_lcd_ascii
  2798  0596  0828               	movf	??_lcd_ascii,w
  2799  0597  00B6               	movwf	lcd_ascii@random+11
  2800  0598                     l1644:
  2801                           
  2802                           ;Master_main.c: 228: random[12]=AD3;
  2803  0598  0844               	movf	_AD3,w
  2804  0599  00A8               	movwf	??_lcd_ascii
  2805  059A  0828               	movf	??_lcd_ascii,w
  2806  059B  00B7               	movwf	lcd_ascii@random+12
  2807  059C                     l1646:
  2808                           
  2809                           ;Master_main.c: 229: random[13]=AU3;
  2810  059C  0841               	movf	_AU3,w
  2811  059D  00A8               	movwf	??_lcd_ascii
  2812  059E  0828               	movf	??_lcd_ascii,w
  2813  059F  00B8               	movwf	lcd_ascii@random+13
  2814  05A0                     l1648:
  2815                           
  2816                           ;Master_main.c: 230: random[14]=0xDF;
  2817  05A0  30DF               	movlw	223
  2818  05A1  00A8               	movwf	??_lcd_ascii
  2819  05A2  0828               	movf	??_lcd_ascii,w
  2820  05A3  00B9               	movwf	lcd_ascii@random+14
  2821  05A4                     l1650:
  2822                           
  2823                           ;Master_main.c: 231: random[15]=67;
  2824  05A4  3043               	movlw	67
  2825  05A5  00A8               	movwf	??_lcd_ascii
  2826  05A6  0828               	movf	??_lcd_ascii,w
  2827  05A7  00BA               	movwf	lcd_ascii@random+15
  2828  05A8                     l1652:
  2829                           
  2830                           ;Master_main.c: 232: return random;
  2831  05A8  302B               	movlw	(low lcd_ascii@random)& (0+255)
  2832  05A9                     l127:
  2833  05A9  0008               	return
  2834  05AA                     __end_of_lcd_ascii:
  2835                           
  2836                           	psect	text14
  2837  02EA                     __ptext14:	
  2838 ;; *************** function _datos_ascii *****************
  2839 ;; Defined at:
  2840 ;;		line 164 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/Master_main.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  numero          1    wreg     unsigned char 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  numero          1    0[COMMON] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      unsigned char 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         0       0       0       0       0
  2855 ;;      Locals:         1       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0
  2857 ;;      Totals:         1       0       0       0       0
  2858 ;;Total ram usage:        1 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_lcd_ascii
  2864 ;;		_temperatura
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function _datos_ascii
  2870  02EA                     _datos_ascii:
  2871                           
  2872                           ;incstack = 0
  2873                           ; Regs used in _datos_ascii: [wreg-fsr0h+status,2+status,0]
  2874                           ;datos_ascii@numero stored from wreg
  2875  02EA  00F0               	movwf	datos_ascii@numero
  2876  02EB                     l1344:
  2877                           
  2878                           ;Master_main.c: 166: switch(numero)
  2879  02EB  2B00               	goto	l1414
  2880  02EC                     l1346:
  2881                           
  2882                           ;Master_main.c: 169: return 0x30;
  2883  02EC  3030               	movlw	48
  2884  02ED  2B20               	goto	l113
  2885  02EE                     l1358:
  2886                           
  2887                           ;Master_main.c: 176: return 0x31;
  2888  02EE  3031               	movlw	49
  2889  02EF  2B20               	goto	l113
  2890  02F0                     l1364:
  2891                           
  2892                           ;Master_main.c: 180: return 0x32;
  2893  02F0  3032               	movlw	50
  2894  02F1  2B20               	goto	l113
  2895  02F2                     l1370:
  2896                           
  2897                           ;Master_main.c: 184: return 0x33;
  2898  02F2  3033               	movlw	51
  2899  02F3  2B20               	goto	l113
  2900  02F4                     l1376:
  2901                           
  2902                           ;Master_main.c: 188: return 0x34;
  2903  02F4  3034               	movlw	52
  2904  02F5  2B20               	goto	l113
  2905  02F6                     l1382:
  2906                           
  2907                           ;Master_main.c: 192: return 0x35;
  2908  02F6  3035               	movlw	53
  2909  02F7  2B20               	goto	l113
  2910  02F8                     l1388:
  2911                           
  2912                           ;Master_main.c: 196: return 0x36;
  2913  02F8  3036               	movlw	54
  2914  02F9  2B20               	goto	l113
  2915  02FA                     l1394:
  2916                           
  2917                           ;Master_main.c: 200: return 0x37;
  2918  02FA  3037               	movlw	55
  2919  02FB  2B20               	goto	l113
  2920  02FC                     l1400:
  2921                           
  2922                           ;Master_main.c: 204: return 0x38;
  2923  02FC  3038               	movlw	56
  2924  02FD  2B20               	goto	l113
  2925  02FE                     l1406:
  2926                           
  2927                           ;Master_main.c: 208: return 0x39;
  2928  02FE  3039               	movlw	57
  2929  02FF  2B20               	goto	l113
  2930  0300                     l1414:
  2931  0300  0870               	movf	datos_ascii@numero,w
  2932                           
  2933                           ; Switch size 1, requested type "simple"
  2934                           ; Number of cases is 10, Range of values is 0 to 9
  2935                           ; switch strategies available:
  2936                           ; Name         Instructions Cycles
  2937                           ; simple_byte           31    16 (average)
  2938                           ; direct_byte           38     8 (fixed)
  2939                           ; jumptable            260     6 (fixed)
  2940                           ;	Chosen strategy is simple_byte
  2941  0301  3A00               	xorlw	0	; case 0
  2942  0302  1903               	skipnz
  2943  0303  2AEC               	goto	l1346
  2944  0304  3A01               	xorlw	1	; case 1
  2945  0305  1903               	skipnz
  2946  0306  2AEE               	goto	l1358
  2947  0307  3A03               	xorlw	3	; case 2
  2948  0308  1903               	skipnz
  2949  0309  2AF0               	goto	l1364
  2950  030A  3A01               	xorlw	1	; case 3
  2951  030B  1903               	skipnz
  2952  030C  2AF2               	goto	l1370
  2953  030D  3A07               	xorlw	7	; case 4
  2954  030E  1903               	skipnz
  2955  030F  2AF4               	goto	l1376
  2956  0310  3A01               	xorlw	1	; case 5
  2957  0311  1903               	skipnz
  2958  0312  2AF6               	goto	l1382
  2959  0313  3A03               	xorlw	3	; case 6
  2960  0314  1903               	skipnz
  2961  0315  2AF8               	goto	l1388
  2962  0316  3A01               	xorlw	1	; case 7
  2963  0317  1903               	skipnz
  2964  0318  2AFA               	goto	l1394
  2965  0319  3A0F               	xorlw	15	; case 8
  2966  031A  1903               	skipnz
  2967  031B  2AFC               	goto	l1400
  2968  031C  3A01               	xorlw	1	; case 9
  2969  031D  1903               	skipnz
  2970  031E  2AFE               	goto	l1406
  2971  031F  2AEC               	goto	l1346
  2972  0320                     l113:
  2973  0320  0008               	return
  2974  0321                     __end_of_datos_ascii:
  2975                           
  2976                           	psect	text15
  2977  0390                     __ptext15:	
  2978 ;; *************** function ___awmod *****************
  2979 ;; Defined at:
  2980 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  divisor         2    4[BANK0 ] int 
  2983 ;;  dividend        2    6[BANK0 ] int 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  sign            1   13[COMMON] unsigned char 
  2986 ;;  counter         1   12[COMMON] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  2    4[BANK0 ] int 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2996 ;;      Params:         0       4       0       0       0
  2997 ;;      Locals:         2       0       0       0       0
  2998 ;;      Temps:          1       0       0       0       0
  2999 ;;      Totals:         3       4       0       0       0
  3000 ;;Total ram usage:        7 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_lcd_ascii
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           
  3010                           ;psect for function ___awmod
  3011  0390                     ___awmod:
  3012  0390                     l1502:	
  3013                           ;incstack = 0
  3014                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3015                           
  3016  0390  01FD               	clrf	___awmod@sign
  3017  0391                     l1504:
  3018  0391  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0392  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0393  1FA7               	btfss	___awmod@dividend+1,7
  3021  0394  2B96               	goto	u671
  3022  0395  2B97               	goto	u670
  3023  0396                     u671:
  3024  0396  2B9E               	goto	l1510
  3025  0397                     u670:
  3026  0397                     l1506:
  3027  0397  09A6               	comf	___awmod@dividend,f
  3028  0398  09A7               	comf	___awmod@dividend+1,f
  3029  0399  0AA6               	incf	___awmod@dividend,f
  3030  039A  1903               	skipnz
  3031  039B  0AA7               	incf	___awmod@dividend+1,f
  3032  039C                     l1508:
  3033  039C  01FD               	clrf	___awmod@sign
  3034  039D  0AFD               	incf	___awmod@sign,f
  3035  039E                     l1510:
  3036  039E  1FA5               	btfss	___awmod@divisor+1,7
  3037  039F  2BA1               	goto	u681
  3038  03A0  2BA2               	goto	u680
  3039  03A1                     u681:
  3040  03A1  2BA7               	goto	l1514
  3041  03A2                     u680:
  3042  03A2                     l1512:
  3043  03A2  09A4               	comf	___awmod@divisor,f
  3044  03A3  09A5               	comf	___awmod@divisor+1,f
  3045  03A4  0AA4               	incf	___awmod@divisor,f
  3046  03A5  1903               	skipnz
  3047  03A6  0AA5               	incf	___awmod@divisor+1,f
  3048  03A7                     l1514:
  3049  03A7  0824               	movf	___awmod@divisor,w
  3050  03A8  0425               	iorwf	___awmod@divisor+1,w
  3051  03A9  1903               	btfsc	3,2
  3052  03AA  2BAC               	goto	u691
  3053  03AB  2BAD               	goto	u690
  3054  03AC                     u691:
  3055  03AC  2BDC               	goto	l1532
  3056  03AD                     u690:
  3057  03AD                     l1516:
  3058  03AD  01FC               	clrf	___awmod@counter
  3059  03AE  0AFC               	incf	___awmod@counter,f
  3060  03AF  2BBB               	goto	l1522
  3061  03B0                     l1518:
  3062  03B0  3001               	movlw	1
  3063  03B1                     u705:
  3064  03B1  1003               	clrc
  3065  03B2  0DA4               	rlf	___awmod@divisor,f
  3066  03B3  0DA5               	rlf	___awmod@divisor+1,f
  3067  03B4  3EFF               	addlw	-1
  3068  03B5  1D03               	skipz
  3069  03B6  2BB1               	goto	u705
  3070  03B7                     l1520:
  3071  03B7  3001               	movlw	1
  3072  03B8  00FB               	movwf	??___awmod
  3073  03B9  087B               	movf	??___awmod,w
  3074  03BA  07FC               	addwf	___awmod@counter,f
  3075  03BB                     l1522:
  3076  03BB  1FA5               	btfss	___awmod@divisor+1,7
  3077  03BC  2BBE               	goto	u711
  3078  03BD  2BBF               	goto	u710
  3079  03BE                     u711:
  3080  03BE  2BB0               	goto	l1518
  3081  03BF                     u710:
  3082  03BF                     l1524:
  3083  03BF  0825               	movf	___awmod@divisor+1,w
  3084  03C0  0227               	subwf	___awmod@dividend+1,w
  3085  03C1  1D03               	skipz
  3086  03C2  2BC5               	goto	u725
  3087  03C3  0824               	movf	___awmod@divisor,w
  3088  03C4  0226               	subwf	___awmod@dividend,w
  3089  03C5                     u725:
  3090  03C5  1C03               	skipc
  3091  03C6  2BC8               	goto	u721
  3092  03C7  2BC9               	goto	u720
  3093  03C8                     u721:
  3094  03C8  2BCF               	goto	l1528
  3095  03C9                     u720:
  3096  03C9                     l1526:
  3097  03C9  0824               	movf	___awmod@divisor,w
  3098  03CA  02A6               	subwf	___awmod@dividend,f
  3099  03CB  0825               	movf	___awmod@divisor+1,w
  3100  03CC  1C03               	skipc
  3101  03CD  03A7               	decf	___awmod@dividend+1,f
  3102  03CE  02A7               	subwf	___awmod@dividend+1,f
  3103  03CF                     l1528:
  3104  03CF  3001               	movlw	1
  3105  03D0                     u735:
  3106  03D0  1003               	clrc
  3107  03D1  0CA5               	rrf	___awmod@divisor+1,f
  3108  03D2  0CA4               	rrf	___awmod@divisor,f
  3109  03D3  3EFF               	addlw	-1
  3110  03D4  1D03               	skipz
  3111  03D5  2BD0               	goto	u735
  3112  03D6                     l1530:
  3113  03D6  3001               	movlw	1
  3114  03D7  02FC               	subwf	___awmod@counter,f
  3115  03D8  1D03               	btfss	3,2
  3116  03D9  2BDB               	goto	u741
  3117  03DA  2BDC               	goto	u740
  3118  03DB                     u741:
  3119  03DB  2BBF               	goto	l1524
  3120  03DC                     u740:
  3121  03DC                     l1532:
  3122  03DC  087D               	movf	___awmod@sign,w
  3123  03DD  1903               	btfsc	3,2
  3124  03DE  2BE0               	goto	u751
  3125  03DF  2BE1               	goto	u750
  3126  03E0                     u751:
  3127  03E0  2BE6               	goto	l1536
  3128  03E1                     u750:
  3129  03E1                     l1534:
  3130  03E1  09A6               	comf	___awmod@dividend,f
  3131  03E2  09A7               	comf	___awmod@dividend+1,f
  3132  03E3  0AA6               	incf	___awmod@dividend,f
  3133  03E4  1903               	skipnz
  3134  03E5  0AA7               	incf	___awmod@dividend+1,f
  3135  03E6                     l1536:
  3136  03E6  0827               	movf	___awmod@dividend+1,w
  3137  03E7  00A5               	movwf	?___awmod+1
  3138  03E8  0826               	movf	___awmod@dividend,w
  3139  03E9  00A4               	movwf	?___awmod
  3140  03EA                     l492:
  3141  03EA  0008               	return
  3142  03EB                     __end_of___awmod:
  3143                           
  3144                           	psect	text16
  3145  0451                     __ptext16:	
  3146 ;; *************** function ___awdiv *****************
  3147 ;; Defined at:
  3148 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  divisor         2    6[COMMON] int 
  3151 ;;  dividend        2    8[COMMON] int 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  quotient        2    2[BANK0 ] int 
  3154 ;;  sign            1    1[BANK0 ] unsigned char 
  3155 ;;  counter         1    0[BANK0 ] unsigned char 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  2    6[COMMON] int 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3165 ;;      Params:         4       0       0       0       0
  3166 ;;      Locals:         0       4       0       0       0
  3167 ;;      Temps:          1       0       0       0       0
  3168 ;;      Totals:         5       4       0       0       0
  3169 ;;Total ram usage:        9 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_lcd_ascii
  3175 ;;		_temperatura
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function ___awdiv
  3181  0451                     ___awdiv:
  3182  0451                     l1458:	
  3183                           ;incstack = 0
  3184                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3185                           
  3186  0451  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0452  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0453  01A1               	clrf	___awdiv@sign
  3189  0454                     l1460:
  3190  0454  1FF7               	btfss	___awdiv@divisor+1,7
  3191  0455  2C57               	goto	u571
  3192  0456  2C58               	goto	u570
  3193  0457                     u571:
  3194  0457  2C5F               	goto	l1466
  3195  0458                     u570:
  3196  0458                     l1462:
  3197  0458  09F6               	comf	___awdiv@divisor,f
  3198  0459  09F7               	comf	___awdiv@divisor+1,f
  3199  045A  0AF6               	incf	___awdiv@divisor,f
  3200  045B  1903               	skipnz
  3201  045C  0AF7               	incf	___awdiv@divisor+1,f
  3202  045D                     l1464:
  3203  045D  01A1               	clrf	___awdiv@sign
  3204  045E  0AA1               	incf	___awdiv@sign,f
  3205  045F                     l1466:
  3206  045F  1FF9               	btfss	___awdiv@dividend+1,7
  3207  0460  2C62               	goto	u581
  3208  0461  2C63               	goto	u580
  3209  0462                     u581:
  3210  0462  2C6C               	goto	l1472
  3211  0463                     u580:
  3212  0463                     l1468:
  3213  0463  09F8               	comf	___awdiv@dividend,f
  3214  0464  09F9               	comf	___awdiv@dividend+1,f
  3215  0465  0AF8               	incf	___awdiv@dividend,f
  3216  0466  1903               	skipnz
  3217  0467  0AF9               	incf	___awdiv@dividend+1,f
  3218  0468                     l1470:
  3219  0468  3001               	movlw	1
  3220  0469  00FA               	movwf	??___awdiv
  3221  046A  087A               	movf	??___awdiv,w
  3222  046B  06A1               	xorwf	___awdiv@sign,f
  3223  046C                     l1472:
  3224  046C  01A2               	clrf	___awdiv@quotient
  3225  046D  01A3               	clrf	___awdiv@quotient+1
  3226  046E                     l1474:
  3227  046E  0876               	movf	___awdiv@divisor,w
  3228  046F  0477               	iorwf	___awdiv@divisor+1,w
  3229  0470  1903               	btfsc	3,2
  3230  0471  2C73               	goto	u591
  3231  0472  2C74               	goto	u590
  3232  0473                     u591:
  3233  0473  2CAB               	goto	l1494
  3234  0474                     u590:
  3235  0474                     l1476:
  3236  0474  01A0               	clrf	___awdiv@counter
  3237  0475  0AA0               	incf	___awdiv@counter,f
  3238  0476  2C82               	goto	l1482
  3239  0477                     l1478:
  3240  0477  3001               	movlw	1
  3241  0478                     u605:
  3242  0478  1003               	clrc
  3243  0479  0DF6               	rlf	___awdiv@divisor,f
  3244  047A  0DF7               	rlf	___awdiv@divisor+1,f
  3245  047B  3EFF               	addlw	-1
  3246  047C  1D03               	skipz
  3247  047D  2C78               	goto	u605
  3248  047E                     l1480:
  3249  047E  3001               	movlw	1
  3250  047F  00FA               	movwf	??___awdiv
  3251  0480  087A               	movf	??___awdiv,w
  3252  0481  07A0               	addwf	___awdiv@counter,f
  3253  0482                     l1482:
  3254  0482  1FF7               	btfss	___awdiv@divisor+1,7
  3255  0483  2C85               	goto	u611
  3256  0484  2C86               	goto	u610
  3257  0485                     u611:
  3258  0485  2C77               	goto	l1478
  3259  0486                     u610:
  3260  0486                     l1484:
  3261  0486  3001               	movlw	1
  3262  0487                     u625:
  3263  0487  1003               	clrc
  3264  0488  0DA2               	rlf	___awdiv@quotient,f
  3265  0489  0DA3               	rlf	___awdiv@quotient+1,f
  3266  048A  3EFF               	addlw	-1
  3267  048B  1D03               	skipz
  3268  048C  2C87               	goto	u625
  3269  048D  0877               	movf	___awdiv@divisor+1,w
  3270  048E  0279               	subwf	___awdiv@dividend+1,w
  3271  048F  1D03               	skipz
  3272  0490  2C93               	goto	u635
  3273  0491  0876               	movf	___awdiv@divisor,w
  3274  0492  0278               	subwf	___awdiv@dividend,w
  3275  0493                     u635:
  3276  0493  1C03               	skipc
  3277  0494  2C96               	goto	u631
  3278  0495  2C97               	goto	u630
  3279  0496                     u631:
  3280  0496  2C9E               	goto	l1490
  3281  0497                     u630:
  3282  0497                     l1486:
  3283  0497  0876               	movf	___awdiv@divisor,w
  3284  0498  02F8               	subwf	___awdiv@dividend,f
  3285  0499  0877               	movf	___awdiv@divisor+1,w
  3286  049A  1C03               	skipc
  3287  049B  03F9               	decf	___awdiv@dividend+1,f
  3288  049C  02F9               	subwf	___awdiv@dividend+1,f
  3289  049D                     l1488:
  3290  049D  1422               	bsf	___awdiv@quotient,0
  3291  049E                     l1490:
  3292  049E  3001               	movlw	1
  3293  049F                     u645:
  3294  049F  1003               	clrc
  3295  04A0  0CF7               	rrf	___awdiv@divisor+1,f
  3296  04A1  0CF6               	rrf	___awdiv@divisor,f
  3297  04A2  3EFF               	addlw	-1
  3298  04A3  1D03               	skipz
  3299  04A4  2C9F               	goto	u645
  3300  04A5                     l1492:
  3301  04A5  3001               	movlw	1
  3302  04A6  02A0               	subwf	___awdiv@counter,f
  3303  04A7  1D03               	btfss	3,2
  3304  04A8  2CAA               	goto	u651
  3305  04A9  2CAB               	goto	u650
  3306  04AA                     u651:
  3307  04AA  2C86               	goto	l1484
  3308  04AB                     u650:
  3309  04AB                     l1494:
  3310  04AB  0821               	movf	___awdiv@sign,w
  3311  04AC  1903               	btfsc	3,2
  3312  04AD  2CAF               	goto	u661
  3313  04AE  2CB0               	goto	u660
  3314  04AF                     u661:
  3315  04AF  2CB5               	goto	l1498
  3316  04B0                     u660:
  3317  04B0                     l1496:
  3318  04B0  09A2               	comf	___awdiv@quotient,f
  3319  04B1  09A3               	comf	___awdiv@quotient+1,f
  3320  04B2  0AA2               	incf	___awdiv@quotient,f
  3321  04B3  1903               	skipnz
  3322  04B4  0AA3               	incf	___awdiv@quotient+1,f
  3323  04B5                     l1498:
  3324  04B5  0823               	movf	___awdiv@quotient+1,w
  3325  04B6  00F7               	movwf	?___awdiv+1
  3326  04B7  0822               	movf	___awdiv@quotient,w
  3327  04B8  00F6               	movwf	?___awdiv
  3328  04B9                     l479:
  3329  04B9  0008               	return
  3330  04BA                     __end_of___awdiv:
  3331                           
  3332                           	psect	text17
  3333  01B8                     __ptext17:	
  3334 ;; *************** function _I2C_Master_Write *****************
  3335 ;; Defined at:
  3336 ;;		line 65 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  d               2    0[COMMON] unsigned int 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0, pclath, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         2       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0
  3353 ;;      Totals:         2       0       0       0       0
  3354 ;;Total ram usage:        2 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    1
  3357 ;; This function calls:
  3358 ;;		_I2C_Master_Wait
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           
  3365                           ;psect for function _I2C_Master_Write
  3366  01B8                     _I2C_Master_Write:
  3367  01B8                     l1578:	
  3368                           ;incstack = 0
  3369                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3370                           
  3371                           
  3372                           ;I2C.c: 67: I2C_Master_Wait();
  3373  01B8  120A  118A  21C2  120A  118A  	fcall	_I2C_Master_Wait
  3374  01BD                     l1580:
  3375                           
  3376                           ;I2C.c: 68: SSPBUF = d;
  3377  01BD  0870               	movf	I2C_Master_Write@d,w
  3378  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  3379  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  3380  01C0  0093               	movwf	19	;volatile
  3381  01C1                     l179:
  3382  01C1  0008               	return
  3383  01C2                     __end_of_I2C_Master_Write:
  3384                           
  3385                           	psect	text18
  3386  01AF                     __ptext18:	
  3387 ;; *************** function _I2C_Master_Stop *****************
  3388 ;; Defined at:
  3389 ;;		line 55 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0
  3406 ;;      Totals:         0       0       0       0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    1
  3410 ;; This function calls:
  3411 ;;		_I2C_Master_Wait
  3412 ;; This function is called by:
  3413 ;;		_main
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _I2C_Master_Stop
  3419  01AF                     _I2C_Master_Stop:
  3420  01AF                     l1582:	
  3421                           ;incstack = 0
  3422                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3423                           
  3424                           
  3425                           ;I2C.c: 57: I2C_Master_Wait();
  3426  01AF  120A  118A  21C2  120A  118A  	fcall	_I2C_Master_Wait
  3427  01B4                     l1584:
  3428                           
  3429                           ;I2C.c: 58: SSPCON2bits.PEN = 1;
  3430  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  3431  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  3432  01B6  1511               	bsf	17,2	;volatile
  3433  01B7                     l176:
  3434  01B7  0008               	return
  3435  01B8                     __end_of_I2C_Master_Stop:
  3436                           
  3437                           	psect	text19
  3438  01A6                     __ptext19:	
  3439 ;; *************** function _I2C_Master_Start *****************
  3440 ;; Defined at:
  3441 ;;		line 39 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0, pclath, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3455 ;;      Params:         0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0
  3458 ;;      Totals:         0       0       0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    1
  3462 ;; This function calls:
  3463 ;;		_I2C_Master_Wait
  3464 ;; This function is called by:
  3465 ;;		_main
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           
  3470                           ;psect for function _I2C_Master_Start
  3471  01A6                     _I2C_Master_Start:
  3472  01A6                     l1574:	
  3473                           ;incstack = 0
  3474                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3475                           
  3476                           
  3477                           ;I2C.c: 41: I2C_Master_Wait();
  3478  01A6  120A  118A  21C2  120A  118A  	fcall	_I2C_Master_Wait
  3479  01AB                     l1576:
  3480                           
  3481                           ;I2C.c: 42: SSPCON2bits.SEN = 1;
  3482  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  3483  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  3484  01AD  1411               	bsf	17,0	;volatile
  3485  01AE                     l170:
  3486  01AE  0008               	return
  3487  01AF                     __end_of_I2C_Master_Start:
  3488                           
  3489                           	psect	text20
  3490  028D                     __ptext20:	
  3491 ;; *************** function _I2C_Master_Read *****************
  3492 ;; Defined at:
  3493 ;;		line 74 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  a               2    0[COMMON] unsigned short 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  temp            2    4[COMMON] unsigned short 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  2    0[COMMON] unsigned short 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0, pclath, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3507 ;;      Params:         2       0       0       0       0
  3508 ;;      Locals:         2       0       0       0       0
  3509 ;;      Temps:          2       0       0       0       0
  3510 ;;      Totals:         6       0       0       0       0
  3511 ;;Total ram usage:        6 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    1
  3514 ;; This function calls:
  3515 ;;		_I2C_Master_Wait
  3516 ;; This function is called by:
  3517 ;;		_main
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           
  3522                           ;psect for function _I2C_Master_Read
  3523  028D                     _I2C_Master_Read:
  3524  028D                     l1586:	
  3525                           ;incstack = 0
  3526                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3527                           
  3528                           
  3529                           ;I2C.c: 76: unsigned short temp;;I2C.c: 77: I2C_Master_Wait();
  3530  028D  120A  118A  21C2  120A  118A  	fcall	_I2C_Master_Wait
  3531  0292                     l1588:
  3532                           
  3533                           ;I2C.c: 78: SSPCON2bits.RCEN = 1;
  3534  0292  1683               	bsf	3,5	;RP0=1, select bank1
  3535  0293  1303               	bcf	3,6	;RP1=0, select bank1
  3536  0294  1591               	bsf	17,3	;volatile
  3537                           
  3538                           ;I2C.c: 79: I2C_Master_Wait();
  3539  0295  120A  118A  21C2  120A  118A  	fcall	_I2C_Master_Wait
  3540  029A                     l1590:
  3541                           
  3542                           ;I2C.c: 80: temp = SSPBUF;
  3543  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3544  029B  1303               	bcf	3,6	;RP1=0, select bank0
  3545  029C  0813               	movf	19,w	;volatile
  3546  029D  00F2               	movwf	??_I2C_Master_Read
  3547  029E  01F3               	clrf	??_I2C_Master_Read+1
  3548  029F  0872               	movf	??_I2C_Master_Read,w
  3549  02A0  00F4               	movwf	I2C_Master_Read@temp
  3550  02A1  0873               	movf	??_I2C_Master_Read+1,w
  3551  02A2  00F5               	movwf	I2C_Master_Read@temp+1
  3552  02A3                     l1592:
  3553                           
  3554                           ;I2C.c: 81: I2C_Master_Wait();
  3555  02A3  120A  118A  21C2  120A  118A  	fcall	_I2C_Master_Wait
  3556  02A8                     l1594:
  3557                           
  3558                           ;I2C.c: 82: if(a == 1){
  3559  02A8  0370               	decf	I2C_Master_Read@a,w
  3560  02A9  0471               	iorwf	I2C_Master_Read@a+1,w
  3561  02AA  1D03               	btfss	3,2
  3562  02AB  2AAD               	goto	u771
  3563  02AC  2AAE               	goto	u770
  3564  02AD                     u771:
  3565  02AD  2AB2               	goto	l182
  3566  02AE                     u770:
  3567  02AE                     l1596:
  3568                           
  3569                           ;I2C.c: 83: SSPCON2bits.ACKDT = 0;
  3570  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  3571  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  3572  02B0  1291               	bcf	17,5	;volatile
  3573                           
  3574                           ;I2C.c: 84: }else{
  3575  02B1  2AB5               	goto	l183
  3576  02B2                     l182:
  3577                           
  3578                           ;I2C.c: 85: SSPCON2bits.ACKDT = 1;
  3579  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  3580  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  3581  02B4  1691               	bsf	17,5	;volatile
  3582  02B5                     l183:
  3583                           
  3584                           ;I2C.c: 86: };I2C.c: 87: SSPCON2bits.ACKEN = 1;
  3585  02B5  1611               	bsf	17,4	;volatile
  3586  02B6                     l1598:
  3587                           
  3588                           ;I2C.c: 88: return temp;
  3589  02B6  0875               	movf	I2C_Master_Read@temp+1,w
  3590  02B7  00F1               	movwf	?_I2C_Master_Read+1
  3591  02B8  0874               	movf	I2C_Master_Read@temp,w
  3592  02B9  00F0               	movwf	?_I2C_Master_Read
  3593  02BA                     l184:
  3594  02BA  0008               	return
  3595  02BB                     __end_of_I2C_Master_Read:
  3596                           
  3597                           	psect	text21
  3598  01C2                     __ptext21:	
  3599 ;; *************** function _I2C_Master_Wait *****************
  3600 ;; Defined at:
  3601 ;;		line 32 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3615 ;;      Params:         0       0       0       0       0
  3616 ;;      Locals:         0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0
  3618 ;;      Totals:         0       0       0       0       0
  3619 ;;Total ram usage:        0 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_I2C_Master_Start
  3625 ;;		_I2C_Master_Stop
  3626 ;;		_I2C_Master_Write
  3627 ;;		_I2C_Master_Read
  3628 ;;		_I2C_Master_RepeatedStart
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function _I2C_Master_Wait
  3634  01C2                     _I2C_Master_Wait:
  3635  01C2                     l1416:	
  3636                           ;incstack = 0
  3637                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3638                           
  3639  01C2                     l164:	
  3640                           ;I2C.c: 34: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3641                           
  3642  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  3643  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  3644  01C4  1914               	btfsc	20,2	;volatile
  3645  01C5  29C7               	goto	u491
  3646  01C6  29C8               	goto	u490
  3647  01C7                     u491:
  3648  01C7  29C2               	goto	l164
  3649  01C8                     u490:
  3650  01C8                     l1418:
  3651  01C8  0811               	movf	17,w	;volatile
  3652  01C9  391F               	andlw	31
  3653  01CA  1D03               	btfss	3,2
  3654  01CB  29CD               	goto	u501
  3655  01CC  29CE               	goto	u500
  3656  01CD                     u501:
  3657  01CD  29C2               	goto	l164
  3658  01CE                     u500:
  3659  01CE                     l167:
  3660  01CE  0008               	return
  3661  01CF                     __end_of_I2C_Master_Wait:
  3662  007E                     btemp	set	126	;btemp
  3663  007E                     wtemp0	set	126
  3664                           
  3665                           	psect	config
  3666                           
  3667                           ;Config register CONFIG1 @ 0x2007
  3668                           ;	Oscillator Selection bits
  3669                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3670                           ;	Watchdog Timer Enable bit
  3671                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3672                           ;	Power-up Timer Enable bit
  3673                           ;	PWRTE = OFF, PWRT disabled
  3674                           ;	RE3/MCLR pin function select bit
  3675                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3676                           ;	Code Protection bit
  3677                           ;	CP = OFF, Program memory code protection is disabled
  3678                           ;	Data Code Protection bit
  3679                           ;	CPD = OFF, Data memory code protection is disabled
  3680                           ;	Brown Out Reset Selection bits
  3681                           ;	BOREN = OFF, BOR disabled
  3682                           ;	Internal External Switchover bit
  3683                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3684                           ;	Fail-Safe Clock Monitor Enabled bit
  3685                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3686                           ;	Low Voltage Programming Enable bit
  3687                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3688                           ;	In-Circuit Debugger Mode bit
  3689                           ;	DEBUG = 0x1, unprogrammed default
  3690  2007                     	org	8199
  3691  2007  20D4               	dw	8404
  3692                           
  3693                           ;Config register CONFIG2 @ 0x2008
  3694                           ;	Brown-out Reset Selection bit
  3695                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3696                           ;	Flash Program Memory Self Write Enable bits
  3697                           ;	WRT = OFF, Write protection off
  3698  2008                     	org	8200
  3699  2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _temperatura->___awdiv
    _I2C_Master_Init->___lldiv
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_clear->_cmd
    _lcd_ascii->___awmod
    ___awmod->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_show
    _temperatura->___awdiv
    _show->_lcd_ascii
    _setup->_I2C_Master_Init
    _lcd_ascii->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7261
                                             30 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _cmd
                          _lcd_ascii
                          _lcd_clear
                           _lcd_init
                          _lcd_linea
                              _setup
                               _show
                        _temperatura
 ---------------------------------------------------------------------------------
 (1) _temperatura                                          4     4      0    2406
                                              4 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     320
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _show                                                 3     1      2     219
                                             27 BANK0      3     1      2
                                _dat
                          _lcd_ascii (ARG)
 ---------------------------------------------------------------------------------
 (2) _dat                                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     354
                                              2 COMMON     5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      22
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_ascii                                           19    19      0    2977
                                              8 BANK0     19    19      0
                            ___awdiv
                            ___awmod
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) _datos_ascii                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1056
                                             11 COMMON     3     3      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1516
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     554
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _cmd
   _lcd_ascii
     ___awdiv
       ___wmul (ARG)
     ___awmod
       ___awdiv (ARG)
         ___wmul (ARG)
     _datos_ascii
   _lcd_clear
     _cmd
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _setup
     _I2C_Master_Init
       ___lldiv
   _show
     _dat
     _lcd_ascii (ARG)
       ___awdiv
         ___wmul (ARG)
       ___awmod
         ___awdiv (ARG)
           ___wmul (ARG)
       _datos_ascii
   _temperatura
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _datos_ascii

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      45       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      37       5       68.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      45      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 11 15:22:05 2021

                        pc 0002             ___bmul@product 0072               ___awdiv@sign 0021  
                       fsr 0004        ___wmul@multiplicand 0072                        _AC1 0049  
                      _AC2 0048                        _AD1 0046                        _AC3 0047  
                      _AD2 0045                        _AD3 0044                        l113 0320  
                      l105 023B                        l202 01DB                        l211 0201  
                      l132 06B8                        l205 0357                        l127 05A9  
                      l223 028C                        l208 01EE                        l161 038F  
                      l217 02E9                        l170 01AE                        l164 01C2  
                      l182 02B2                        l326 0248                        l167 01CE  
                      l183 02B5                        l184 02BA                        l176 01B7  
                      l352 0216                        l328 0260                        l362 0450  
                      l179 01C1                        l492 03EA                        l479 04B9  
                      _AU1 0043                        _AU2 0042                        _AU3 0041  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      _RE2 004A                        u410 03FB                        u411 03FA  
                      u500 01CE                        u501 01CD                        u430 040F  
                      u510 0242                        u431 040E                        u511 0241  
                      u425 0400                        u610 0486                        u450 042A  
                      u611 0485                        u451 0429                        u540 025C  
                      u605 0478                        u445 0411                        u541 025B  
                      u525 0249                        u630 0497                        u710 03BF  
                      u470 0448                        u550 0208                        u631 0496  
                      u711 03BE                        u471 0447                        u455 0426  
                      u551 0207                        u535 0250                        u720 03C9  
                      u480 036F                        u800 02E9                        u560 0215  
                      u625 0487                        u721 03C8                        u705 03B1  
                      u465 043A                        u801 02E8                        u561 0214  
                      u490 01C8                        u650 04AB                        u570 0458  
                      u491 01C7                        u651 04AA                        u635 0493  
                      u571 0457                        u660 04B0                        u580 0463  
                      u740 03DC                        u661 04AF                        u645 049F  
                      u581 0462                        u741 03DB                        u725 03C5  
                      u485 036A                        u590 0474                        u750 03E1  
                      u670 0397                        u591 0473                        u751 03E0  
                      u735 03D0                        u671 0396                        u680 03A2  
                      u760 05B2                        u681 03A1                        u761 05B1  
                      u817 06D4                        u770 02AE                        u690 03AD  
                      u771 02AD                        u691 03AC                        u827 0700  
                      u780 0267                        u781 0266                        u837 0730  
                      u790 027D                        u791 027C                        u847 0760  
                      _NUM 0053                        u857 078B                        u867 07BB  
                      u877 02D6                        u887 01F9                        u897 01E6  
                      _Un1 004C                        _Un2 004B                        _Un3 004A  
                      _dat 01EF                        _cmd 01DC                        fsr0 0004  
                      indf 0000               ___awmod@sign 007D                       l1300 03FB  
                     l1310 042A                       l1302 03FE                       l1400 02FC  
                     l1312 0438                       l1304 040B                       l1330 01EB  
                     l1322 01DD                       l1314 0439                       l1306 040F  
                     l1324 01E1                       l1316 0442                       l1308 0418  
                     l1340 038D                       l1332 0358                       l1420 01F0  
                     l1510 039E                       l1502 0390                       l1406 02FE  
                     l1414 0300                       l1326 01E2                       l1318 0448  
                     l1342 038E                       l1334 035C                       l1422 01F4  
                     l1430 023C                       ?_dat 0070                       l1416 01C2  
                     l1520 03B7                       l1512 03A2                       l1504 0391  
                     l1344 02EB                       l1328 01E3                       l1336 035F  
                     l1424 01F5                       l1440 025C                       l1432 023E  
                     l1418 01C8                       l1530 03D6                       l1522 03BB  
                     l1514 03A7                       l1506 0397                       l1370 02F2  
                     l1346 02EC                       l1610 0277                       l1602 0262  
                     l1338 038C                       l1426 01F6                       l1450 020C  
                     l1434 0242                       ?_cmd 0070                       l1460 0454  
                     l1524 03BF                       l1516 03AD                       l1532 03DC  
                     l1508 039C                       l1364 02F0                       l1612 027D  
                     l1604 0267                       l1540 0217                       l1428 01FE  
                     l1620 02BC                       l1452 020E                       l1444 0203  
                     l1436 024F                       l1700 0783                       l1470 0468  
                     l1462 0458                       l1534 03E1                       l1526 03C9  
                     l1518 03B0                       l1382 02F6                       l1358 02EE  
                     l1630 04C4                       l1550 0321                       l1614 0282  
                     l1606 026C                       l1542 0227                       l1622 02CA  
                     l1454 0215                       l1446 0204                       l1438 0256  
                     l1710 07B3                       l1702 0792                       l1480 047E  
                     l1472 046C                       l1464 045D                       l1536 03E6  
                     l1528 03CF                       l1376 02F4                       l1640 0590  
                     l1632 04F0                       l1616 0286                       l1608 0270  
                     l1544 022B                       l1624 02D2                       l1448 0208  
                     l1560 0648                       l1552 05AA                       l1712 07C2  
                     l1704 0797                       l1490 049E                       l1482 0482  
                     l1474 046E                       l1466 045F                       l1458 0451  
                     l1394 02FA                       l1650 05A4                       l1642 0594  
                     l1634 0511                       l1298 03EB                       l1546 022C  
                     l1626 02D9                       l1618 02BB                       l1570 06A2  
                     l1554 05B2                       l1562 0654                       l1714 07CA  
                     l1706 07A0                       l1580 01BD                       l1492 04A5  
                     l1484 0486                       l1476 0474                       l1468 0463  
                     l1388 02F8                       l1652 05A8                       l1644 0598  
                     l1636 053E                       l1628 04BA                       l1548 01CF  
                     l1572 06AD                       l1564 0678                       l1556 0632  
                     l1716 07D5                       l1708 07AE                       l1660 06D8  
                     l1590 029A                       l1574 01A6                       l1582 01AF  
                     l1486 0497                       l1478 0477                       l1494 04AB  
                     l1646 059C                       l1638 058C                       l1566 067C  
                     l1558 063D                       l1718 07DD                       l1670 06F8  
                     l1662 06DD                       l1592 02A3                       l1576 01AB  
                     l1584 01B4                       l1496 04B0                       l1488 049D  
                     l1648 05A0                       l1568 0692                       l1680 0728  
                     l1672 0707                       l1664 06E2                       l1656 06B9  
                     l1594 02A8                       l1586 028D                       l1578 01B8  
                     l1498 04B5                       l1690 0758                       l1682 0737  
                     l1674 070C                       l1666 06EB                       l1658 06CE  
                     l1596 02AE                       l1588 0292                       l1692 0767  
                     l1684 073C                       l1676 0715                       l1668 06F3  
                     l1598 02B6                       l1694 076C                       l1686 0745  
                     l1678 0723                       l1696 0775                       l1688 0753  
                     l1698 077E                       STR_1 0013                       _PEIE 005E  
                     _Dec1 004F                       _Dec2 004E                       _Dec3 004D  
                     _Cen1 0052                       _Cen2 0051                       _Cen3 0050  
                     dat@b 0071                       cmd@a 0071                       _main 06B9  
                     _show 02BB                       btemp 007E                       start 0000  
        ___bmul@multiplier 0073                      ??_dat 0070                      ??_cmd 0070  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070            __end_of___awdiv 04BA  
          __end_of___awmod 03EB                      ?_show 003B                      _ANSEL 0188  
          __end_of___lldiv 0451            ___awdiv@divisor 0076            ___awdiv@counter 0020  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _setup 0217                      pclath 000A  
                    show@s 003B              lcd_linea@temp 0075                      status 0003  
                    wtemp0 007E            __initialization 07F3               __end_of_main 07F3  
             __end_of_show 02EA                     ??_main 003E                     ??_show 003D  
     __size_of_datos_ascii 0037          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072           ___awdiv@dividend 0078  
                   ?_setup 0070                     _ANSELH 0189                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of_lcd_init 0358                     ___bmul 0202  
                   ___wmul 023C            lcd_ascii@random 002B                  ??___awdiv 007A  
                ??___awmod 007B                  ??___lldiv 0078           ___awdiv@quotient 0022  
          ___awmod@divisor 0024            ___awmod@counter 007C               ?_temperatura 0070  
  __end_of__initialization 07FC        ___bmul@multiplicand 0070             __pcstackCOMMON 0070  
            __end_of_setup 023C         __size_of_lcd_clear 000D         __size_of_lcd_ascii 00F0  
       __size_of_lcd_linea 002C                    ??_setup 007E                 __pbssBANK0 0041  
               __pmaintext 06B9                    ?___bmul 0070                    ?___wmul 0070  
             _desde_sensor 0056                    _SSPCON2 0091                  ?_lcd_init 0070  
                  _SSPSTAT 0094                 __stringtab 0003             _desde_contador 0055  
        __end_of_lcd_clear 01DC          __end_of_lcd_ascii 05AA          __end_of_lcd_linea 028D  
          __size_of___bmul 0015                    ___awdiv 0451                    ___awmod 0390  
                  ___lldiv 03EB            __size_of___wmul 0025                    __ptext1 05AA  
                  __ptext2 023C                    __ptext3 0202                    __ptext4 02BB  
                  __ptext5 01EF                    __ptext6 0217                    __ptext7 0358  
                  __ptext8 03EB                    __ptext9 0261               __size_of_dat 0013  
             __size_of_cmd 0013           ___awmod@dividend 0026       __size_of_temperatura 010F  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    clrloop0 019F                 ??_lcd_init 0072  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070              ??_datos_ascii 0070                  _TRISCbits 0087  
               lcd_linea@a 0074                 lcd_linea@b 0072                 lcd_linea@z 0076  
           __end_of___bmul 0217             __end_of___wmul 0261        start_initialization 07F3  
      __end_of_datos_ascii 0321                __end_of_dat 0202                __end_of_cmd 01EF  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          datos_ascii@numero 0070  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                   ??___bmul 0071  
                 ??___wmul 0074                  ___latbits 0002              __pcstackBANK0 0020  
        __size_of_lcd_init 0037           _I2C_Master_Start 01A6           _I2C_Master_Write 01B8  
                _desde_pot 0054                   ?___awdiv 0076                   ?___awmod 0024  
                 ?___lldiv 0070                  _lcd_clear 01CF                  _lcd_ascii 04BA  
              _datos_ascii 02EA                  _lcd_linea 0261                  __pstrings 0003  
           __size_of_setup 0025             ___wmul@product 0074                  clear_ram0 019E  
               ?_lcd_clear 0070                 ?_lcd_ascii 0070                 ?_lcd_linea 0072  
              __stringbase 0012              ??_temperatura 0024          ___wmul@multiplier 0070  
      I2C_Master_Read@temp 0074           __size_of___awdiv 0069           __size_of___awmod 005B  
         __size_of___lldiv 0066         __end_of__stringtab 0013            _I2C_Master_Init 0358  
          _I2C_Master_Read 028D            _I2C_Master_Wait 01C2            _I2C_Master_Stop 01AF  
                 __ptext10 0321                   __ptext11 01CF                   __ptext20 028D  
                 __ptext12 01DC                   __ptext21 01C2                   __ptext13 04BA  
                 __ptext14 02EA                   __ptext15 0390                   __ptext16 0451  
                 __ptext17 01B8                   __ptext18 01AF                   __ptext19 01A6  
      __end_of_temperatura 06B9                   _lcd_init 0321              __size_of_main 013A  
            __size_of_show 002F                ??_lcd_clear 0072                ??_lcd_ascii 0028  
              ??_lcd_linea 0073   __end_of_I2C_Master_Start 01AF   __end_of_I2C_Master_Write 01C2  
         ___lldiv@dividend 0074                  stringcode 000D                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 0390    __end_of_I2C_Master_Read 02BB    __end_of_I2C_Master_Wait 01CF  
  __end_of_I2C_Master_Stop 01B8               ?_datos_ascii 0070                _temperatura 05AA  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070                   stringdir 000D  
                 stringtab 0003                _SSPCON2bits 0091  
