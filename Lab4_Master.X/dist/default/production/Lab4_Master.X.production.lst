

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 11 02:58:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0013                     _SSPBUF	set	19
   454  0014                     _SSPCON	set	20
   455  0009                     _PORTE	set	9
   456  0006                     _PORTB	set	6
   457  0005                     _PORTA	set	5
   458  0008                     _PORTD	set	8
   459  004A                     _RE2	set	74
   460  0049                     _RE1	set	73
   461  0048                     _RE0	set	72
   462  0063                     _SSPIF	set	99
   463  005E                     _PEIE	set	94
   464  005F                     _GIE	set	95
   465  008F                     _OSCCONbits	set	143
   466  0091                     _SSPCON2bits	set	145
   467  0087                     _TRISCbits	set	135
   468  0094                     _SSPSTAT	set	148
   469  0093                     _SSPADD	set	147
   470  0091                     _SSPCON2	set	145
   471  0089                     _TRISE	set	137
   472  0088                     _TRISD	set	136
   473  0086                     _TRISB	set	134
   474  0085                     _TRISA	set	133
   475  0463                     _SSPIE	set	1123
   476  043C                     _TRISC4	set	1084
   477  043B                     _TRISC3	set	1083
   478  0189                     _ANSELH	set	393
   479  0188                     _ANSEL	set	392
   480                           
   481                           	psect	strings
   482  0003                     __pstrings:
   483  0003                     stringtab:
   484  0003                     __stringtab:
   485                           
   486                           ;	String table - string pointers are 1 byte each
   487  0003  1BFF               	btfsc	btemp+1,7
   488  0004  280D               	ljmp	stringcode
   489  0005  1383               	bcf	3,7
   490  0006  187F               	btfsc	btemp+1,0
   491  0007  1783               	bsf	3,7
   492  0008  0800               	movf	0,w
   493  0009  0A84               	incf	4,f
   494  000A  1903               	skipnz
   495  000B  0AFF               	incf	btemp+1,f
   496  000C  0008               	return
   497  000D                     stringcode:
   498  000D                     stringdir:
   499  000D  3000               	movlw	high stringdir
   500  000E  008A               	movwf	10
   501  000F  0804               	movf	4,w
   502  0010  0A84               	incf	4,f
   503  0011  0782               	addwf	2,f
   504  0012                     __stringbase:
   505  0012  3400               	retlw	0
   506  0013                     __end_of__stringtab:
   507  0013                     STR_1:
   508  0013  3420               	retlw	32	;' '
   509  0014  3453               	retlw	83	;'S'
   510  0015  3431               	retlw	49	;'1'
   511  0016  3420               	retlw	32	;' '
   512  0017  3420               	retlw	32	;' '
   513  0018  3420               	retlw	32	;' '
   514  0019  3453               	retlw	83	;'S'
   515  001A  3432               	retlw	50	;'2'
   516  001B  3420               	retlw	32	;' '
   517  001C  3420               	retlw	32	;' '
   518  001D  3420               	retlw	32	;' '
   519  001E  3453               	retlw	83	;'S'
   520  001F  3433               	retlw	51	;'3'
   521  0020  3420               	retlw	32	;' '
   522  0021  3400               	retlw	0
   523                           
   524                           	psect	cinit
   525  07F7                     start_initialization:	
   526                           ; #config settings
   527                           
   528  07F7                     __initialization:
   529                           
   530                           ; Clear objects allocated to BANK0
   531  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   532  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   533  07F9  01B3               	clrf	__pbssBANK0& (0+127)
   534  07FA  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   535  07FB  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   536  07FC                     end_of_initialization:	
   537                           ;End of C runtime variable initialization code
   538                           
   539  07FC                     __end_of__initialization:
   540  07FC  0183               	clrf	3
   541  07FD  120A  118A  2EEB   	ljmp	_main	;jump to C main() function
   542                           
   543                           	psect	bssBANK0
   544  0033                     __pbssBANK0:
   545  0033                     _desde_sensor:
   546  0033                     	ds	1
   547  0034                     _desde_pot:
   548  0034                     	ds	1
   549  0035                     _desde_contador:
   550  0035                     	ds	1
   551                           
   552                           	psect	cstackCOMMON
   553  0070                     __pcstackCOMMON:
   554  0070                     ?_setup:
   555  0070                     ?_lcd_clear:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_lcd_init:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_cmd:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ??_cmd:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_I2C_Master_Start:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ??_I2C_Master_Start:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_I2C_Master_Write:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_I2C_Master_Stop:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ??_I2C_Master_Stop:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_lcd_ascii:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_main:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_datos_ascii:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ??_datos_ascii:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_I2C_Master_Wait:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ??_I2C_Master_Wait:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_dat:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ??_dat:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_I2C_Master_Read:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?___lldiv:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  0070                     datos_ascii@numero:	
   613                           ; 4 bytes @ 0x0
   614                           
   615  0070                     I2C_Master_Write@d:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     I2C_Master_Read@a:	
   619                           ; 2 bytes @ 0x0
   620                           
   621  0070                     ___lldiv@divisor:	
   622                           ; 2 bytes @ 0x0
   623                           
   624                           
   625                           ; 4 bytes @ 0x0
   626  0070                     	ds	1
   627  0071                     ??_lcd_ascii:
   628  0071                     cmd@a:	
   629                           ; 1 bytes @ 0x1
   630                           
   631  0071                     dat@b:	
   632                           ; 1 bytes @ 0x1
   633                           
   634                           
   635                           ; 1 bytes @ 0x1
   636  0071                     	ds	1
   637  0072                     ??_lcd_clear:
   638  0072                     ??_lcd_init:	
   639                           ; 1 bytes @ 0x2
   640                           
   641  0072                     ??_I2C_Master_Write:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     ??_I2C_Master_Read:	
   645                           ; 1 bytes @ 0x2
   646                           
   647  0072                     ?_lcd_linea:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ?_show:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     lcd_linea@b:	
   654                           ; 1 bytes @ 0x2
   655                           
   656  0072                     show@s:	
   657                           ; 1 bytes @ 0x2
   658                           
   659                           
   660                           ; 2 bytes @ 0x2
   661  0072                     	ds	1
   662  0073                     ??_lcd_linea:
   663                           
   664                           ; 1 bytes @ 0x3
   665  0073                     	ds	1
   666  0074                     ??_show:
   667  0074                     lcd_linea@a:	
   668                           ; 1 bytes @ 0x4
   669                           
   670  0074                     I2C_Master_Read@temp:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0074                     ___lldiv@dividend:	
   674                           ; 2 bytes @ 0x4
   675                           
   676                           
   677                           ; 4 bytes @ 0x4
   678  0074                     	ds	1
   679  0075                     lcd_linea@temp:
   680                           
   681                           ; 1 bytes @ 0x5
   682  0075                     	ds	1
   683  0076                     lcd_linea@z:
   684                           
   685                           ; 1 bytes @ 0x6
   686  0076                     	ds	2
   687  0078                     ??___lldiv:
   688                           
   689                           ; 1 bytes @ 0x8
   690  0078                     	ds	1
   691  0079                     ___lldiv@quotient:
   692                           
   693                           ; 4 bytes @ 0x9
   694  0079                     	ds	4
   695  007D                     ___lldiv@counter:
   696                           
   697                           ; 1 bytes @ 0xD
   698  007D                     	ds	1
   699  007E                     ??_setup:
   700                           
   701                           	psect	cstackBANK0
   702  0020                     __pcstackBANK0:	
   703                           ; 1 bytes @ 0xE
   704                           
   705  0020                     ?_I2C_Master_Init:
   706  0020                     I2C_Master_Init@c:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0020                     lcd_ascii@random:	
   710                           ; 4 bytes @ 0x0
   711                           
   712                           
   713                           ; 16 bytes @ 0x0
   714  0020                     	ds	4
   715  0024                     ??_I2C_Master_Init:
   716                           
   717                           ; 1 bytes @ 0x4
   718  0024                     	ds	12
   719  0030                     ??_main:
   720                           
   721                           ; 1 bytes @ 0x10
   722  0030                     	ds	3
   723                           
   724                           	psect	maintext
   725  06EB                     __pmaintext:	
   726 ;;
   727 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   728 ;;
   729 ;; *************** function _main *****************
   730 ;; Defined at:
   731 ;;		line 62 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/Master_main.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : B00/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0
   747 ;;      Temps:          0       3       0       0       0
   748 ;;      Totals:         0       3       0       0       0
   749 ;;Total ram usage:        3 bytes
   750 ;; Hardware stack levels required when called:    3
   751 ;; This function calls:
   752 ;;		_I2C_Master_Read
   753 ;;		_I2C_Master_Start
   754 ;;		_I2C_Master_Stop
   755 ;;		_I2C_Master_Write
   756 ;;		_cmd
   757 ;;		_lcd_ascii
   758 ;;		_lcd_clear
   759 ;;		_lcd_init
   760 ;;		_lcd_linea
   761 ;;		_setup
   762 ;;		_show
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           
   769                           ;psect for function _main
   770  06EB                     _main:
   771  06EB                     l1323:	
   772                           ;incstack = 0
   773                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   774                           
   775                           
   776                           ;Master_main.c: 63: setup();
   777  06EB  120A  118A  24C8  120A  118A  	fcall	_setup
   778                           
   779                           ;Master_main.c: 64: lcd_clear();
   780  06F0  120A  118A  2495  120A  118A  	fcall	_lcd_clear
   781                           
   782                           ;Master_main.c: 65: lcd_init();
   783  06F5  120A  118A  25A1  120A  118A  	fcall	_lcd_init
   784                           
   785                           ;Master_main.c: 66: cmd(0x90);
   786  06FA  3090               	movlw	144
   787  06FB  120A  118A  24A2  120A  118A  	fcall	_cmd
   788  0700                     l1325:
   789                           
   790                           ;Master_main.c: 67: _delay((unsigned long)((1)*(8000000/4000.0)));
   791  0700  3003               	movlw	3
   792  0701  1283               	bcf	3,5	;RP0=0, select bank0
   793  0702  1303               	bcf	3,6	;RP1=0, select bank0
   794  0703  00B1               	movwf	??_main+1
   795  0704  3097               	movlw	151
   796  0705  00B0               	movwf	??_main
   797  0706                     u297:
   798  0706  0BB0               	decfsz	??_main,f
   799  0707  2F06               	goto	u297
   800  0708  0BB1               	decfsz	??_main+1,f
   801  0709  2F06               	goto	u297
   802  070A                     l1327:
   803                           
   804                           ;Master_main.c: 69: {;Master_main.c: 71: I2C_Master_Start();
   805  070A  120A  118A  246C  120A  118A  	fcall	_I2C_Master_Start
   806  070F                     l1329:
   807                           
   808                           ;Master_main.c: 72: I2C_Master_Write(0x50);
   809  070F  3050               	movlw	80
   810  0710  00F0               	movwf	I2C_Master_Write@d
   811  0711  3000               	movlw	0
   812  0712  00F1               	movwf	I2C_Master_Write@d+1
   813  0713  120A  118A  247E  120A  118A  	fcall	_I2C_Master_Write
   814  0718                     l1331:
   815                           
   816                           ;Master_main.c: 73: I2C_Master_Write(0);
   817  0718  3000               	movlw	0
   818  0719  00F0               	movwf	I2C_Master_Write@d
   819  071A  00F1               	movwf	I2C_Master_Write@d+1
   820  071B  120A  118A  247E  120A  118A  	fcall	_I2C_Master_Write
   821  0720                     l1333:
   822                           
   823                           ;Master_main.c: 74: I2C_Master_Stop();
   824  0720  120A  118A  2475  120A  118A  	fcall	_I2C_Master_Stop
   825  0725                     l1335:
   826                           
   827                           ;Master_main.c: 75: _delay((unsigned long)((200)*(8000000/4000.0)));
   828  0725  3003               	movlw	3
   829  0726  1283               	bcf	3,5	;RP0=0, select bank0
   830  0727  1303               	bcf	3,6	;RP1=0, select bank0
   831  0728  00B2               	movwf	??_main+2
   832  0729  3008               	movlw	8
   833  072A  00B1               	movwf	??_main+1
   834  072B  3076               	movlw	118
   835  072C  00B0               	movwf	??_main
   836  072D                     u307:
   837  072D  0BB0               	decfsz	??_main,f
   838  072E  2F2D               	goto	u307
   839  072F  0BB1               	decfsz	??_main+1,f
   840  0730  2F2D               	goto	u307
   841  0731  0BB2               	decfsz	??_main+2,f
   842  0732  2F2D               	goto	u307
   843  0733  0000               	nop
   844                           
   845                           ;Master_main.c: 77: I2C_Master_Start();
   846  0734  120A  118A  246C  120A  118A  	fcall	_I2C_Master_Start
   847                           
   848                           ;Master_main.c: 78: I2C_Master_Write(0x51);
   849  0739  3051               	movlw	81
   850  073A  00F0               	movwf	I2C_Master_Write@d
   851  073B  3000               	movlw	0
   852  073C  00F1               	movwf	I2C_Master_Write@d+1
   853  073D  120A  118A  247E  120A  118A  	fcall	_I2C_Master_Write
   854                           
   855                           ;Master_main.c: 79: desde_contador = I2C_Master_Read(0);
   856  0742  3000               	movlw	0
   857  0743  00F0               	movwf	I2C_Master_Read@a
   858  0744  00F1               	movwf	I2C_Master_Read@a+1
   859  0745  120A  118A  253C  120A  118A  	fcall	_I2C_Master_Read
   860  074A  0870               	movf	?_I2C_Master_Read,w
   861  074B  1283               	bcf	3,5	;RP0=0, select bank0
   862  074C  1303               	bcf	3,6	;RP1=0, select bank0
   863  074D  00B0               	movwf	??_main
   864  074E  0830               	movf	??_main,w
   865  074F  00B5               	movwf	_desde_contador
   866                           
   867                           ;Master_main.c: 80: I2C_Master_Stop();
   868  0750  120A  118A  2475  120A  118A  	fcall	_I2C_Master_Stop
   869  0755                     l1337:
   870                           
   871                           ;Master_main.c: 81: _delay((unsigned long)((200)*(8000000/4000.0)));
   872  0755  3003               	movlw	3
   873  0756  1283               	bcf	3,5	;RP0=0, select bank0
   874  0757  1303               	bcf	3,6	;RP1=0, select bank0
   875  0758  00B2               	movwf	??_main+2
   876  0759  3008               	movlw	8
   877  075A  00B1               	movwf	??_main+1
   878  075B  3076               	movlw	118
   879  075C  00B0               	movwf	??_main
   880  075D                     u317:
   881  075D  0BB0               	decfsz	??_main,f
   882  075E  2F5D               	goto	u317
   883  075F  0BB1               	decfsz	??_main+1,f
   884  0760  2F5D               	goto	u317
   885  0761  0BB2               	decfsz	??_main+2,f
   886  0762  2F5D               	goto	u317
   887  0763  0000               	nop
   888  0764                     l1339:
   889                           
   890                           ;Master_main.c: 84: I2C_Master_Start();
   891  0764  120A  118A  246C  120A  118A  	fcall	_I2C_Master_Start
   892  0769                     l1341:
   893                           
   894                           ;Master_main.c: 85: I2C_Master_Write(0x61);
   895  0769  3061               	movlw	97
   896  076A  00F0               	movwf	I2C_Master_Write@d
   897  076B  3000               	movlw	0
   898  076C  00F1               	movwf	I2C_Master_Write@d+1
   899  076D  120A  118A  247E  120A  118A  	fcall	_I2C_Master_Write
   900  0772                     l1343:
   901                           
   902                           ;Master_main.c: 86: desde_pot = I2C_Master_Read(0);
   903  0772  3000               	movlw	0
   904  0773  00F0               	movwf	I2C_Master_Read@a
   905  0774  00F1               	movwf	I2C_Master_Read@a+1
   906  0775  120A  118A  253C  120A  118A  	fcall	_I2C_Master_Read
   907  077A  0870               	movf	?_I2C_Master_Read,w
   908  077B  1283               	bcf	3,5	;RP0=0, select bank0
   909  077C  1303               	bcf	3,6	;RP1=0, select bank0
   910  077D  00B0               	movwf	??_main
   911  077E  0830               	movf	??_main,w
   912  077F  00B4               	movwf	_desde_pot
   913  0780                     l1345:
   914                           
   915                           ;Master_main.c: 87: I2C_Master_Stop();
   916  0780  120A  118A  2475  120A  118A  	fcall	_I2C_Master_Stop
   917  0785                     l1347:
   918                           
   919                           ;Master_main.c: 88: _delay((unsigned long)((200)*(8000000/4000.0)));
   920  0785  3003               	movlw	3
   921  0786  1283               	bcf	3,5	;RP0=0, select bank0
   922  0787  1303               	bcf	3,6	;RP1=0, select bank0
   923  0788  00B2               	movwf	??_main+2
   924  0789  3008               	movlw	8
   925  078A  00B1               	movwf	??_main+1
   926  078B  3076               	movlw	118
   927  078C  00B0               	movwf	??_main
   928  078D                     u327:
   929  078D  0BB0               	decfsz	??_main,f
   930  078E  2F8D               	goto	u327
   931  078F  0BB1               	decfsz	??_main+1,f
   932  0790  2F8D               	goto	u327
   933  0791  0BB2               	decfsz	??_main+2,f
   934  0792  2F8D               	goto	u327
   935  0793  0000               	nop
   936  0794                     l1349:
   937                           
   938                           ;Master_main.c: 89: PORTD=desde_pot;
   939  0794  1283               	bcf	3,5	;RP0=0, select bank0
   940  0795  1303               	bcf	3,6	;RP1=0, select bank0
   941  0796  0834               	movf	_desde_pot,w
   942  0797  0088               	movwf	8	;volatile
   943  0798                     l1351:
   944                           
   945                           ;Master_main.c: 91: I2C_Master_Start();
   946  0798  120A  118A  246C  120A  118A  	fcall	_I2C_Master_Start
   947  079D                     l1353:
   948                           
   949                           ;Master_main.c: 92: I2C_Master_Write(0x81);
   950  079D  3081               	movlw	129
   951  079E  00F0               	movwf	I2C_Master_Write@d
   952  079F  3000               	movlw	0
   953  07A0  00F1               	movwf	I2C_Master_Write@d+1
   954  07A1  120A  118A  247E  120A  118A  	fcall	_I2C_Master_Write
   955  07A6                     l1355:
   956                           
   957                           ;Master_main.c: 93: desde_sensor= I2C_Master_Read(0);
   958  07A6  3000               	movlw	0
   959  07A7  00F0               	movwf	I2C_Master_Read@a
   960  07A8  00F1               	movwf	I2C_Master_Read@a+1
   961  07A9  120A  118A  253C  120A  118A  	fcall	_I2C_Master_Read
   962  07AE  0870               	movf	?_I2C_Master_Read,w
   963  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   964  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   965  07B1  00B0               	movwf	??_main
   966  07B2  0830               	movf	??_main,w
   967  07B3  00B3               	movwf	_desde_sensor
   968  07B4                     l1357:
   969                           
   970                           ;Master_main.c: 94: I2C_Master_Stop();
   971  07B4  120A  118A  2475  120A  118A  	fcall	_I2C_Master_Stop
   972  07B9                     l1359:
   973                           
   974                           ;Master_main.c: 95: _delay((unsigned long)((200)*(8000000/4000.0)));
   975  07B9  3003               	movlw	3
   976  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   977  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   978  07BC  00B2               	movwf	??_main+2
   979  07BD  3008               	movlw	8
   980  07BE  00B1               	movwf	??_main+1
   981  07BF  3076               	movlw	118
   982  07C0  00B0               	movwf	??_main
   983  07C1                     u337:
   984  07C1  0BB0               	decfsz	??_main,f
   985  07C2  2FC1               	goto	u337
   986  07C3  0BB1               	decfsz	??_main+1,f
   987  07C4  2FC1               	goto	u337
   988  07C5  0BB2               	decfsz	??_main+2,f
   989  07C6  2FC1               	goto	u337
   990  07C7  0000               	nop
   991                           
   992                           ;Master_main.c: 98: lcd_linea(1,1);
   993  07C8  01F2               	clrf	lcd_linea@b
   994  07C9  0AF2               	incf	lcd_linea@b,f
   995  07CA  3001               	movlw	1
   996  07CB  120A  118A  2510  120A  118A  	fcall	_lcd_linea
   997  07D0                     l1361:
   998                           
   999                           ;Master_main.c: 99: show(" S1   S2   S3 ");
  1000  07D0  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1001  07D1  00F2               	movwf	show@s
  1002  07D2  3080               	movlw	128
  1003  07D3  00F3               	movwf	show@s+1
  1004  07D4  120A  118A  24E6  120A  118A  	fcall	_show
  1005  07D9                     l1363:
  1006                           
  1007                           ;Master_main.c: 100: lcd_linea(2,1);
  1008  07D9  01F2               	clrf	lcd_linea@b
  1009  07DA  0AF2               	incf	lcd_linea@b,f
  1010  07DB  3002               	movlw	2
  1011  07DC  120A  118A  2510  120A  118A  	fcall	_lcd_linea
  1012                           
  1013                           ;Master_main.c: 101: show(lcd_ascii());
  1014  07E1  120A  118A  2676  120A  118A  	fcall	_lcd_ascii
  1015  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1016  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1017  07E8  00B0               	movwf	??_main
  1018  07E9  01B1               	clrf	??_main+1
  1019  07EA  0830               	movf	??_main,w
  1020  07EB  00F2               	movwf	show@s
  1021  07EC  0831               	movf	??_main+1,w
  1022  07ED  00F3               	movwf	show@s+1
  1023  07EE  120A  118A  24E6  120A  118A  	fcall	_show
  1024  07F3  2F0A               	goto	l1327
  1025  07F4  120A  118A  2800   	ljmp	start
  1026  07F7                     __end_of_main:
  1027                           
  1028                           	psect	text1
  1029  04E6                     __ptext1:	
  1030 ;; *************** function _show *****************
  1031 ;; Defined at:
  1032 ;;		line 72 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  s               2    2[COMMON] PTR unsigned char 
  1035 ;;		 -> RAM(512), STR_1(15), 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         2       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0
  1049 ;;      Temps:          1       0       0       0       0
  1050 ;;      Totals:         3       0       0       0       0
  1051 ;;Total ram usage:        3 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    1
  1054 ;; This function calls:
  1055 ;;		_dat
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _show
  1063  04E6                     _show:
  1064  04E6                     l1281:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1067                           
  1068                           
  1069                           ;LCD.c: 74: while(*s) {
  1070  04E6  2CFF               	goto	l1289
  1071  04E7                     l1283:
  1072                           
  1073                           ;LCD.c: 75: dat(*s++);
  1074  04E7  0873               	movf	show@s+1,w
  1075  04E8  00FF               	movwf	btemp+1
  1076  04E9  0872               	movf	show@s,w
  1077  04EA  0084               	movwf	4
  1078  04EB  120A  118A  2003  120A  118A  	fcall	stringtab
  1079  04F0  120A  118A  24B5  120A  118A  	fcall	_dat
  1080  04F5                     l1285:
  1081  04F5  3001               	movlw	1
  1082  04F6  07F2               	addwf	show@s,f
  1083  04F7  1803               	skipnc
  1084  04F8  0AF3               	incf	show@s+1,f
  1085  04F9  3000               	movlw	0
  1086  04FA  07F3               	addwf	show@s+1,f
  1087  04FB                     l1287:
  1088                           
  1089                           ;LCD.c: 76: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1090  04FB  300D               	movlw	13
  1091  04FC  00F4               	movwf	??_show
  1092  04FD                     u347:
  1093  04FD  0BF4               	decfsz	??_show,f
  1094  04FE  2CFD               	goto	u347
  1095  04FF                     l1289:
  1096  04FF  0873               	movf	show@s+1,w
  1097  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0502  00FF               	movwf	btemp+1
  1100  0503  0872               	movf	show@s,w
  1101  0504  0084               	movwf	4
  1102  0505  120A  118A  2003  120A  118A  	fcall	stringtab
  1103  050A  3A00               	xorlw	0
  1104  050B  1D03               	skipz
  1105  050C  2D0E               	goto	u281
  1106  050D  2D0F               	goto	u280
  1107  050E                     u281:
  1108  050E  2CE7               	goto	l1283
  1109  050F                     u280:
  1110  050F                     l170:
  1111  050F  0008               	return
  1112  0510                     __end_of_show:
  1113                           
  1114                           	psect	text2
  1115  04B5                     __ptext2:	
  1116 ;; *************** function _dat *****************
  1117 ;; Defined at:
  1118 ;;		line 61 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  b               1    wreg     unsigned char 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  b               1    1[COMMON] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         0       0       0       0       0
  1133 ;;      Locals:         1       0       0       0       0
  1134 ;;      Temps:          1       0       0       0       0
  1135 ;;      Totals:         2       0       0       0       0
  1136 ;;Total ram usage:        2 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_show
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _dat
  1147  04B5                     _dat:
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _dat: [wreg]
  1151                           ;dat@b stored from wreg
  1152  04B5  00F1               	movwf	dat@b
  1153  04B6                     l1219:
  1154                           
  1155                           ;LCD.c: 63: PORTB=b;
  1156  04B6  0871               	movf	dat@b,w
  1157  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1158  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1159  04B9  0086               	movwf	6	;volatile
  1160  04BA                     l1221:
  1161                           
  1162                           ;LCD.c: 64: RE0=1;
  1163  04BA  1409               	bsf	9,0	;volatile
  1164  04BB                     l1223:
  1165                           
  1166                           ;LCD.c: 65: RE1=0;
  1167  04BB  1089               	bcf	9,1	;volatile
  1168  04BC                     l1225:
  1169                           
  1170                           ;LCD.c: 66: RE2=1;
  1171  04BC  1509               	bsf	9,2	;volatile
  1172                           
  1173                           ;LCD.c: 67: _delay((unsigned long)((1)*(4000000/4000.0)));
  1174  04BD  30C7               	movlw	199
  1175  04BE  00F0               	movwf	??_dat
  1176  04BF                     u357:
  1177  04BF  2CC0               	nop2
  1178  04C0  0BF0               	decfsz	??_dat,f
  1179  04C1  2CBF               	goto	u357
  1180  04C2  2CC3               	nop2
  1181  04C3  2CC4               	nop2
  1182  04C4                     l1227:
  1183                           
  1184                           ;LCD.c: 68: RE2=0;
  1185  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  1186  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  1187  04C6  1109               	bcf	9,2	;volatile
  1188  04C7                     l164:
  1189  04C7  0008               	return
  1190  04C8                     __end_of_dat:
  1191                           
  1192                           	psect	text3
  1193  04C8                     __ptext3:	
  1194 ;; *************** function _setup *****************
  1195 ;; Defined at:
  1196 ;;		line 108 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/Master_main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, status,0, pclath, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0
  1213 ;;      Totals:         0       0       0       0       0
  1214 ;;Total ram usage:        0 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    2
  1217 ;; This function calls:
  1218 ;;		_I2C_Master_Init
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           
  1225                           ;psect for function _setup
  1226  04C8                     _setup:
  1227  04C8                     l1229:	
  1228                           ;incstack = 0
  1229                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1230                           
  1231                           
  1232                           ;Master_main.c: 109: ANSEL = 0;
  1233  04C8  1683               	bsf	3,5	;RP0=1, select bank3
  1234  04C9  1703               	bsf	3,6	;RP1=1, select bank3
  1235  04CA  0188               	clrf	8	;volatile
  1236                           
  1237                           ;Master_main.c: 110: ANSELH = 0;
  1238  04CB  0189               	clrf	9	;volatile
  1239                           
  1240                           ;Master_main.c: 111: TRISA = 0;
  1241  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  1242  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  1243  04CE  0185               	clrf	5	;volatile
  1244                           
  1245                           ;Master_main.c: 112: TRISB = 0;
  1246  04CF  0186               	clrf	6	;volatile
  1247                           
  1248                           ;Master_main.c: 113: TRISD = 0;
  1249  04D0  0188               	clrf	8	;volatile
  1250                           
  1251                           ;Master_main.c: 114: TRISE = 0;
  1252  04D1  0189               	clrf	9	;volatile
  1253                           
  1254                           ;Master_main.c: 115: PORTA = 0;
  1255  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  1256  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  1257  04D4  0185               	clrf	5	;volatile
  1258                           
  1259                           ;Master_main.c: 116: PORTB = 0;
  1260  04D5  0186               	clrf	6	;volatile
  1261                           
  1262                           ;Master_main.c: 117: PORTD = 0;
  1263  04D6  0188               	clrf	8	;volatile
  1264                           
  1265                           ;Master_main.c: 118: PORTE = 0;
  1266  04D7  0189               	clrf	9	;volatile
  1267  04D8                     l1231:
  1268                           
  1269                           ;Master_main.c: 119: I2C_Master_Init(100000);
  1270  04D8  3000               	movlw	0
  1271  04D9  00A3               	movwf	I2C_Master_Init@c+3
  1272  04DA  3001               	movlw	1
  1273  04DB  00A2               	movwf	I2C_Master_Init@c+2
  1274  04DC  3086               	movlw	134
  1275  04DD  00A1               	movwf	I2C_Master_Init@c+1
  1276  04DE  30A0               	movlw	160
  1277  04DF  00A0               	movwf	I2C_Master_Init@c
  1278  04E0  120A  118A  25D8  120A  118A  	fcall	_I2C_Master_Init
  1279  04E5                     l63:
  1280  04E5  0008               	return
  1281  04E6                     __end_of_setup:
  1282                           
  1283                           	psect	text4
  1284  05D8                     __ptext4:	
  1285 ;; *************** function _I2C_Master_Init *****************
  1286 ;; Defined at:
  1287 ;;		line 16 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  c               4    0[BANK0 ] const unsigned long 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, pclath, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1301 ;;      Params:         0       4       0       0       0
  1302 ;;      Locals:         0       0       0       0       0
  1303 ;;      Temps:          0       4       0       0       0
  1304 ;;      Totals:         0       8       0       0       0
  1305 ;;Total ram usage:        8 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    1
  1308 ;; This function calls:
  1309 ;;		___lldiv
  1310 ;; This function is called by:
  1311 ;;		_setup
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           
  1316                           ;psect for function _I2C_Master_Init
  1317  05D8                     _I2C_Master_Init:
  1318  05D8                     l1131:	
  1319                           ;incstack = 0
  1320                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1321                           
  1322                           
  1323                           ;I2C.c: 18: SSPCON = 0b00101000;
  1324  05D8  3028               	movlw	40
  1325  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1326  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1327  05DB  0094               	movwf	20	;volatile
  1328  05DC                     l1133:
  1329                           
  1330                           ;I2C.c: 19: SSPCON2 = 0;
  1331  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  1332  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  1333  05DE  0191               	clrf	17	;volatile
  1334  05DF                     l1135:
  1335                           
  1336                           ;I2C.c: 20: SSPADD = (8000000/(4*c))-1;
  1337  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  1338  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  1339  05E1  0820               	movf	I2C_Master_Init@c,w
  1340  05E2  00A4               	movwf	??_I2C_Master_Init
  1341  05E3  0821               	movf	I2C_Master_Init@c+1,w
  1342  05E4  00A5               	movwf	??_I2C_Master_Init+1
  1343  05E5  0822               	movf	I2C_Master_Init@c+2,w
  1344  05E6  00A6               	movwf	??_I2C_Master_Init+2
  1345  05E7  0823               	movf	I2C_Master_Init@c+3,w
  1346  05E8  00A7               	movwf	??_I2C_Master_Init+3
  1347  05E9  3002               	movlw	2
  1348  05EA                     u225:
  1349  05EA  1003               	clrc
  1350  05EB  0DA4               	rlf	??_I2C_Master_Init,f
  1351  05EC  0DA5               	rlf	??_I2C_Master_Init+1,f
  1352  05ED  0DA6               	rlf	??_I2C_Master_Init+2,f
  1353  05EE  0DA7               	rlf	??_I2C_Master_Init+3,f
  1354  05EF                     u220:
  1355  05EF  3EFF               	addlw	-1
  1356  05F0  1D03               	skipz
  1357  05F1  2DEA               	goto	u225
  1358  05F2  0827               	movf	??_I2C_Master_Init+3,w
  1359  05F3  00F3               	movwf	___lldiv@divisor+3
  1360  05F4  0826               	movf	??_I2C_Master_Init+2,w
  1361  05F5  00F2               	movwf	___lldiv@divisor+2
  1362  05F6  0825               	movf	??_I2C_Master_Init+1,w
  1363  05F7  00F1               	movwf	___lldiv@divisor+1
  1364  05F8  0824               	movf	??_I2C_Master_Init,w
  1365  05F9  00F0               	movwf	___lldiv@divisor
  1366  05FA  3000               	movlw	0
  1367  05FB  00F7               	movwf	___lldiv@dividend+3
  1368  05FC  307A               	movlw	122
  1369  05FD  00F6               	movwf	___lldiv@dividend+2
  1370  05FE  3012               	movlw	18
  1371  05FF  00F5               	movwf	___lldiv@dividend+1
  1372  0600  3000               	movlw	0
  1373  0601  00F4               	movwf	___lldiv@dividend
  1374  0602  120A  118A  2610  120A  118A  	fcall	___lldiv
  1375  0607  0870               	movf	?___lldiv,w
  1376  0608  3EFF               	addlw	255
  1377  0609  1683               	bsf	3,5	;RP0=1, select bank1
  1378  060A  1303               	bcf	3,6	;RP1=0, select bank1
  1379  060B  0093               	movwf	19	;volatile
  1380  060C                     l1137:
  1381                           
  1382                           ;I2C.c: 21: SSPSTAT = 0;
  1383  060C  0194               	clrf	20	;volatile
  1384  060D                     l1139:
  1385                           
  1386                           ;I2C.c: 22: TRISCbits.TRISC3 = 1;
  1387  060D  1587               	bsf	7,3	;volatile
  1388  060E                     l1141:
  1389                           
  1390                           ;I2C.c: 23: TRISCbits.TRISC4 = 1;
  1391  060E  1607               	bsf	7,4	;volatile
  1392  060F                     l114:
  1393  060F  0008               	return
  1394  0610                     __end_of_I2C_Master_Init:
  1395                           
  1396                           	psect	text5
  1397  0610                     __ptext5:	
  1398 ;; *************** function ___lldiv *****************
  1399 ;; Defined at:
  1400 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  divisor         4    0[COMMON] unsigned long 
  1403 ;;  dividend        4    4[COMMON] unsigned long 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  quotient        4    9[COMMON] unsigned long 
  1406 ;;  counter         1   13[COMMON] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  4    0[COMMON] unsigned long 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         8       0       0       0       0
  1417 ;;      Locals:         5       0       0       0       0
  1418 ;;      Temps:          1       0       0       0       0
  1419 ;;      Totals:        14       0       0       0       0
  1420 ;;Total ram usage:       14 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_I2C_Master_Init
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function ___lldiv
  1431  0610                     ___lldiv:
  1432  0610                     l1097:	
  1433                           ;incstack = 0
  1434                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1435                           
  1436  0610  3000               	movlw	0
  1437  0611  00FC               	movwf	___lldiv@quotient+3
  1438  0612  3000               	movlw	0
  1439  0613  00FB               	movwf	___lldiv@quotient+2
  1440  0614  3000               	movlw	0
  1441  0615  00FA               	movwf	___lldiv@quotient+1
  1442  0616  3000               	movlw	0
  1443  0617  00F9               	movwf	___lldiv@quotient
  1444  0618  0873               	movf	___lldiv@divisor+3,w
  1445  0619  0472               	iorwf	___lldiv@divisor+2,w
  1446  061A  0471               	iorwf	___lldiv@divisor+1,w
  1447  061B  0470               	iorwf	___lldiv@divisor,w
  1448  061C  1903               	skipnz
  1449  061D  2E1F               	goto	u151
  1450  061E  2E20               	goto	u150
  1451  061F                     u151:
  1452  061F  2E6D               	goto	l1117
  1453  0620                     u150:
  1454  0620                     l1099:
  1455  0620  01FD               	clrf	___lldiv@counter
  1456  0621  0AFD               	incf	___lldiv@counter,f
  1457  0622  2E30               	goto	l1103
  1458  0623                     l1101:
  1459  0623  3001               	movlw	1
  1460  0624  00F8               	movwf	??___lldiv
  1461  0625                     u165:
  1462  0625  1003               	clrc
  1463  0626  0DF0               	rlf	___lldiv@divisor,f
  1464  0627  0DF1               	rlf	___lldiv@divisor+1,f
  1465  0628  0DF2               	rlf	___lldiv@divisor+2,f
  1466  0629  0DF3               	rlf	___lldiv@divisor+3,f
  1467  062A  0BF8               	decfsz	??___lldiv,f
  1468  062B  2E25               	goto	u165
  1469  062C  3001               	movlw	1
  1470  062D  00F8               	movwf	??___lldiv
  1471  062E  0878               	movf	??___lldiv,w
  1472  062F  07FD               	addwf	___lldiv@counter,f
  1473  0630                     l1103:
  1474  0630  1FF3               	btfss	___lldiv@divisor+3,7
  1475  0631  2E33               	goto	u171
  1476  0632  2E34               	goto	u170
  1477  0633                     u171:
  1478  0633  2E23               	goto	l1101
  1479  0634                     u170:
  1480  0634                     l1105:
  1481  0634  3001               	movlw	1
  1482  0635  00F8               	movwf	??___lldiv
  1483  0636                     u185:
  1484  0636  1003               	clrc
  1485  0637  0DF9               	rlf	___lldiv@quotient,f
  1486  0638  0DFA               	rlf	___lldiv@quotient+1,f
  1487  0639  0DFB               	rlf	___lldiv@quotient+2,f
  1488  063A  0DFC               	rlf	___lldiv@quotient+3,f
  1489  063B  0BF8               	decfsz	??___lldiv,f
  1490  063C  2E36               	goto	u185
  1491  063D                     l1107:
  1492  063D  0873               	movf	___lldiv@divisor+3,w
  1493  063E  0277               	subwf	___lldiv@dividend+3,w
  1494  063F  1D03               	skipz
  1495  0640  2E4B               	goto	u195
  1496  0641  0872               	movf	___lldiv@divisor+2,w
  1497  0642  0276               	subwf	___lldiv@dividend+2,w
  1498  0643  1D03               	skipz
  1499  0644  2E4B               	goto	u195
  1500  0645  0871               	movf	___lldiv@divisor+1,w
  1501  0646  0275               	subwf	___lldiv@dividend+1,w
  1502  0647  1D03               	skipz
  1503  0648  2E4B               	goto	u195
  1504  0649  0870               	movf	___lldiv@divisor,w
  1505  064A  0274               	subwf	___lldiv@dividend,w
  1506  064B                     u195:
  1507  064B  1C03               	skipc
  1508  064C  2E4E               	goto	u191
  1509  064D  2E4F               	goto	u190
  1510  064E                     u191:
  1511  064E  2E5E               	goto	l1113
  1512  064F                     u190:
  1513  064F                     l1109:
  1514  064F  0870               	movf	___lldiv@divisor,w
  1515  0650  02F4               	subwf	___lldiv@dividend,f
  1516  0651  0871               	movf	___lldiv@divisor+1,w
  1517  0652  1C03               	skipc
  1518  0653  0F71               	incfsz	___lldiv@divisor+1,w
  1519  0654  02F5               	subwf	___lldiv@dividend+1,f
  1520  0655  0872               	movf	___lldiv@divisor+2,w
  1521  0656  1C03               	skipc
  1522  0657  0F72               	incfsz	___lldiv@divisor+2,w
  1523  0658  02F6               	subwf	___lldiv@dividend+2,f
  1524  0659  0873               	movf	___lldiv@divisor+3,w
  1525  065A  1C03               	skipc
  1526  065B  0F73               	incfsz	___lldiv@divisor+3,w
  1527  065C  02F7               	subwf	___lldiv@dividend+3,f
  1528  065D                     l1111:
  1529  065D  1479               	bsf	___lldiv@quotient,0
  1530  065E                     l1113:
  1531  065E  3001               	movlw	1
  1532  065F                     u205:
  1533  065F  1003               	clrc
  1534  0660  0CF3               	rrf	___lldiv@divisor+3,f
  1535  0661  0CF2               	rrf	___lldiv@divisor+2,f
  1536  0662  0CF1               	rrf	___lldiv@divisor+1,f
  1537  0663  0CF0               	rrf	___lldiv@divisor,f
  1538  0664  3EFF               	addlw	-1
  1539  0665  1D03               	skipz
  1540  0666  2E5F               	goto	u205
  1541  0667                     l1115:
  1542  0667  3001               	movlw	1
  1543  0668  02FD               	subwf	___lldiv@counter,f
  1544  0669  1D03               	btfss	3,2
  1545  066A  2E6C               	goto	u211
  1546  066B  2E6D               	goto	u210
  1547  066C                     u211:
  1548  066C  2E34               	goto	l1105
  1549  066D                     u210:
  1550  066D                     l1117:
  1551  066D  087C               	movf	___lldiv@quotient+3,w
  1552  066E  00F3               	movwf	?___lldiv+3
  1553  066F  087B               	movf	___lldiv@quotient+2,w
  1554  0670  00F2               	movwf	?___lldiv+2
  1555  0671  087A               	movf	___lldiv@quotient+1,w
  1556  0672  00F1               	movwf	?___lldiv+1
  1557  0673  0879               	movf	___lldiv@quotient,w
  1558  0674  00F0               	movwf	?___lldiv
  1559  0675                     l315:
  1560  0675  0008               	return
  1561  0676                     __end_of___lldiv:
  1562                           
  1563                           	psect	text6
  1564  0510                     __ptext6:	
  1565 ;; *************** function _lcd_linea *****************
  1566 ;; Defined at:
  1567 ;;		line 81 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  a               1    wreg     unsigned char 
  1570 ;;  b               1    2[COMMON] unsigned char 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  a               1    4[COMMON] unsigned char 
  1573 ;;  z               1    6[COMMON] unsigned char 
  1574 ;;  temp            1    5[COMMON] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         1       0       0       0       0
  1585 ;;      Locals:         3       0       0       0       0
  1586 ;;      Temps:          1       0       0       0       0
  1587 ;;      Totals:         5       0       0       0       0
  1588 ;;Total ram usage:        5 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    1
  1591 ;; This function calls:
  1592 ;;		_cmd
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _lcd_linea
  1600  0510                     _lcd_linea:
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1604                           ;lcd_linea@a stored from wreg
  1605  0510  00F4               	movwf	lcd_linea@a
  1606  0511                     l1265:
  1607                           
  1608                           ;LCD.c: 82: char temp, z;;LCD.c: 83: if (a == 1)
  1609  0511  0374               	decf	lcd_linea@a,w
  1610  0512  1D03               	btfss	3,2
  1611  0513  2D15               	goto	u261
  1612  0514  2D16               	goto	u260
  1613  0515                     u261:
  1614  0515  2D26               	goto	l1273
  1615  0516                     u260:
  1616  0516                     l1267:
  1617                           
  1618                           ;LCD.c: 84: {;LCD.c: 85: temp = 0x80 + b - 1;
  1619  0516  0872               	movf	lcd_linea@b,w
  1620  0517  3E7F               	addlw	127
  1621  0518  00F3               	movwf	??_lcd_linea
  1622  0519  0873               	movf	??_lcd_linea,w
  1623  051A  00F5               	movwf	lcd_linea@temp
  1624  051B                     l1269:
  1625                           
  1626                           ;LCD.c: 86: z = temp;
  1627  051B  0875               	movf	lcd_linea@temp,w
  1628  051C  00F3               	movwf	??_lcd_linea
  1629  051D  0873               	movf	??_lcd_linea,w
  1630  051E  00F6               	movwf	lcd_linea@z
  1631  051F                     l1271:
  1632                           
  1633                           ;LCD.c: 87: cmd(z);
  1634  051F  0876               	movf	lcd_linea@z,w
  1635  0520  120A  118A  24A2  120A  118A  	fcall	_cmd
  1636                           
  1637                           ;LCD.c: 89: }
  1638  0525  2D3B               	goto	l176
  1639  0526                     l1273:
  1640                           
  1641                           ;LCD.c: 90: else if (a == 2)
  1642  0526  3002               	movlw	2
  1643  0527  0674               	xorwf	lcd_linea@a,w
  1644  0528  1D03               	btfss	3,2
  1645  0529  2D2B               	goto	u271
  1646  052A  2D2C               	goto	u270
  1647  052B                     u271:
  1648  052B  2D3B               	goto	l176
  1649  052C                     u270:
  1650  052C                     l1275:
  1651                           
  1652                           ;LCD.c: 91: {;LCD.c: 92: temp = 0xC0 + b - 1;
  1653  052C  0872               	movf	lcd_linea@b,w
  1654  052D  3EBF               	addlw	191
  1655  052E  00F3               	movwf	??_lcd_linea
  1656  052F  0873               	movf	??_lcd_linea,w
  1657  0530  00F5               	movwf	lcd_linea@temp
  1658  0531                     l1277:
  1659                           
  1660                           ;LCD.c: 93: z = temp;
  1661  0531  0875               	movf	lcd_linea@temp,w
  1662  0532  00F3               	movwf	??_lcd_linea
  1663  0533  0873               	movf	??_lcd_linea,w
  1664  0534  00F6               	movwf	lcd_linea@z
  1665  0535                     l1279:
  1666                           
  1667                           ;LCD.c: 94: cmd(z);
  1668  0535  0876               	movf	lcd_linea@z,w
  1669  0536  120A  118A  24A2  120A  118A  	fcall	_cmd
  1670  053B                     l176:
  1671  053B  0008               	return
  1672  053C                     __end_of_lcd_linea:
  1673                           
  1674                           	psect	text7
  1675  05A1                     __ptext7:	
  1676 ;; *************** function _lcd_init *****************
  1677 ;; Defined at:
  1678 ;;		line 36 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0
  1695 ;;      Totals:         0       0       0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    1
  1699 ;; This function calls:
  1700 ;;		_cmd
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           
  1707                           ;psect for function _lcd_init
  1708  05A1                     _lcd_init:
  1709  05A1                     l1235:	
  1710                           ;incstack = 0
  1711                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1712                           
  1713                           
  1714                           ;LCD.c: 38: cmd(0x30);
  1715  05A1  3030               	movlw	48
  1716  05A2  120A  118A  24A2  120A  118A  	fcall	_cmd
  1717                           
  1718                           ;LCD.c: 39: cmd(0x0C);
  1719  05A7  300C               	movlw	12
  1720  05A8  120A  118A  24A2  120A  118A  	fcall	_cmd
  1721                           
  1722                           ;LCD.c: 40: cmd(0x01);
  1723  05AD  3001               	movlw	1
  1724  05AE  120A  118A  24A2  120A  118A  	fcall	_cmd
  1725                           
  1726                           ;LCD.c: 41: cmd(0x06);
  1727  05B3  3006               	movlw	6
  1728  05B4  120A  118A  24A2  120A  118A  	fcall	_cmd
  1729                           
  1730                           ;LCD.c: 42: cmd(0x80);
  1731  05B9  3080               	movlw	128
  1732  05BA  120A  118A  24A2  120A  118A  	fcall	_cmd
  1733                           
  1734                           ;LCD.c: 43: cmd(0x38);
  1735  05BF  3038               	movlw	56
  1736  05C0  120A  118A  24A2  120A  118A  	fcall	_cmd
  1737                           
  1738                           ;LCD.c: 44: cmd(0x0c);
  1739  05C5  300C               	movlw	12
  1740  05C6  120A  118A  24A2  120A  118A  	fcall	_cmd
  1741                           
  1742                           ;LCD.c: 45: cmd(0x06);
  1743  05CB  3006               	movlw	6
  1744  05CC  120A  118A  24A2  120A  118A  	fcall	_cmd
  1745                           
  1746                           ;LCD.c: 46: cmd(0x80);
  1747  05D1  3080               	movlw	128
  1748  05D2  120A  118A  24A2  120A  118A  	fcall	_cmd
  1749  05D7                     l158:
  1750  05D7  0008               	return
  1751  05D8                     __end_of_lcd_init:
  1752                           
  1753                           	psect	text8
  1754  0495                     __ptext8:	
  1755 ;; *************** function _lcd_clear *****************
  1756 ;; Defined at:
  1757 ;;		line 29 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    1
  1778 ;; This function calls:
  1779 ;;		_cmd
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function _lcd_clear
  1787  0495                     _lcd_clear:
  1788  0495                     l1233:	
  1789                           ;incstack = 0
  1790                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1791                           
  1792                           
  1793                           ;LCD.c: 31: cmd(0);
  1794  0495  3000               	movlw	0
  1795  0496  120A  118A  24A2  120A  118A  	fcall	_cmd
  1796                           
  1797                           ;LCD.c: 32: cmd(1);
  1798  049B  3001               	movlw	1
  1799  049C  120A  118A  24A2  120A  118A  	fcall	_cmd
  1800  04A1                     l155:
  1801  04A1  0008               	return
  1802  04A2                     __end_of_lcd_clear:
  1803                           
  1804                           	psect	text9
  1805  04A2                     __ptext9:	
  1806 ;; *************** function _cmd *****************
  1807 ;; Defined at:
  1808 ;;		line 50 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/LCD.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  a               1    wreg     unsigned char 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  a               1    1[COMMON] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       0       0       0       0
  1823 ;;      Locals:         1       0       0       0       0
  1824 ;;      Temps:          1       0       0       0       0
  1825 ;;      Totals:         2       0       0       0       0
  1826 ;;Total ram usage:        2 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;;		_lcd_clear
  1833 ;;		_lcd_init
  1834 ;;		_lcd_linea
  1835 ;;		_lcd_mov_derecha
  1836 ;;		_lcd_mov_izquierda
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _cmd
  1842  04A2                     _cmd:
  1843                           
  1844                           ;incstack = 0
  1845                           ; Regs used in _cmd: [wreg]
  1846                           ;cmd@a stored from wreg
  1847  04A2  00F1               	movwf	cmd@a
  1848  04A3                     l1121:
  1849                           
  1850                           ;LCD.c: 52: PORTB=a;
  1851  04A3  0871               	movf	cmd@a,w
  1852  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1853  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1854  04A6  0086               	movwf	6	;volatile
  1855  04A7                     l1123:
  1856                           
  1857                           ;LCD.c: 53: RE0=0;
  1858  04A7  1009               	bcf	9,0	;volatile
  1859  04A8                     l1125:
  1860                           
  1861                           ;LCD.c: 54: RE1=0;
  1862  04A8  1089               	bcf	9,1	;volatile
  1863  04A9                     l1127:
  1864                           
  1865                           ;LCD.c: 55: RE2=1;
  1866  04A9  1509               	bsf	9,2	;volatile
  1867                           
  1868                           ;LCD.c: 56: _delay((unsigned long)((1)*(4000000/4000.0)));
  1869  04AA  30C7               	movlw	199
  1870  04AB  00F0               	movwf	??_cmd
  1871  04AC                     u367:
  1872  04AC  2CAD               	nop2
  1873  04AD  0BF0               	decfsz	??_cmd,f
  1874  04AE  2CAC               	goto	u367
  1875  04AF  2CB0               	nop2
  1876  04B0  2CB1               	nop2
  1877  04B1                     l1129:
  1878                           
  1879                           ;LCD.c: 57: RE2=0;
  1880  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1881  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1882  04B3  1109               	bcf	9,2	;volatile
  1883  04B4                     l161:
  1884  04B4  0008               	return
  1885  04B5                     __end_of_cmd:
  1886                           
  1887                           	psect	text10
  1888  0676                     __ptext10:	
  1889 ;; *************** function _lcd_ascii *****************
  1890 ;; Defined at:
  1891 ;;		line 181 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/Master_main.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  random         16    0[BANK0 ] unsigned char [16]
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      unsigned char 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         0       0       0       0       0
  1906 ;;      Locals:         0      16       0       0       0
  1907 ;;      Temps:          1       0       0       0       0
  1908 ;;      Totals:         1      16       0       0       0
  1909 ;;Total ram usage:       17 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    1
  1912 ;; This function calls:
  1913 ;;		_datos_ascii
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _lcd_ascii
  1921  0676                     _lcd_ascii:
  1922  0676                     l1291:	
  1923                           ;incstack = 0
  1924                           ; Regs used in _lcd_ascii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1925                           
  1926                           
  1927                           ;Master_main.c: 183: uint8_t random[16];;Master_main.c: 184: random[0]=datos_ascii(desde
      +                          _contador);
  1928  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0678  0835               	movf	_desde_contador,w
  1931  0679  120A  118A  256A  120A  118A  	fcall	_datos_ascii
  1932  067E  00F1               	movwf	??_lcd_ascii
  1933  067F  0871               	movf	??_lcd_ascii,w
  1934  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0682  00A0               	movwf	lcd_ascii@random
  1937  0683                     l1293:
  1938                           
  1939                           ;Master_main.c: 185: random[1]=0x2E;
  1940  0683  302E               	movlw	46
  1941  0684  00F1               	movwf	??_lcd_ascii
  1942  0685  0871               	movf	??_lcd_ascii,w
  1943  0686  00A1               	movwf	lcd_ascii@random+1
  1944  0687                     l1295:
  1945                           
  1946                           ;Master_main.c: 186: random[2]=datos_ascii(desde_contador);
  1947  0687  0835               	movf	_desde_contador,w
  1948  0688  120A  118A  256A  120A  118A  	fcall	_datos_ascii
  1949  068D  00F1               	movwf	??_lcd_ascii
  1950  068E  0871               	movf	??_lcd_ascii,w
  1951  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1953  0691  00A2               	movwf	lcd_ascii@random+2
  1954  0692                     l1297:
  1955                           
  1956                           ;Master_main.c: 187: random[3]=datos_ascii(desde_contador);
  1957  0692  0835               	movf	_desde_contador,w
  1958  0693  120A  118A  256A  120A  118A  	fcall	_datos_ascii
  1959  0698  00F1               	movwf	??_lcd_ascii
  1960  0699  0871               	movf	??_lcd_ascii,w
  1961  069A  1283               	bcf	3,5	;RP0=0, select bank0
  1962  069B  1303               	bcf	3,6	;RP1=0, select bank0
  1963  069C  00A3               	movwf	lcd_ascii@random+3
  1964  069D                     l1299:
  1965                           
  1966                           ;Master_main.c: 188: random[4]=32;
  1967  069D  3020               	movlw	32
  1968  069E  00F1               	movwf	??_lcd_ascii
  1969  069F  0871               	movf	??_lcd_ascii,w
  1970  06A0  00A4               	movwf	lcd_ascii@random+4
  1971                           
  1972                           ;Master_main.c: 189: random[5]=datos_ascii(desde_contador);
  1973  06A1  0835               	movf	_desde_contador,w
  1974  06A2  120A  118A  256A  120A  118A  	fcall	_datos_ascii
  1975  06A7  00F1               	movwf	??_lcd_ascii
  1976  06A8  0871               	movf	??_lcd_ascii,w
  1977  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1978  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1979  06AB  00A5               	movwf	lcd_ascii@random+5
  1980  06AC                     l1301:
  1981                           
  1982                           ;Master_main.c: 190: random[6]=0x2E;
  1983  06AC  302E               	movlw	46
  1984  06AD  00F1               	movwf	??_lcd_ascii
  1985  06AE  0871               	movf	??_lcd_ascii,w
  1986  06AF  00A6               	movwf	lcd_ascii@random+6
  1987  06B0                     l1303:
  1988                           
  1989                           ;Master_main.c: 191: random[7]=datos_ascii(desde_contador);
  1990  06B0  0835               	movf	_desde_contador,w
  1991  06B1  120A  118A  256A  120A  118A  	fcall	_datos_ascii
  1992  06B6  00F1               	movwf	??_lcd_ascii
  1993  06B7  0871               	movf	??_lcd_ascii,w
  1994  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  1995  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  1996  06BA  00A7               	movwf	lcd_ascii@random+7
  1997  06BB                     l1305:
  1998                           
  1999                           ;Master_main.c: 192: random[8]=datos_ascii(desde_contador);
  2000  06BB  0835               	movf	_desde_contador,w
  2001  06BC  120A  118A  256A  120A  118A  	fcall	_datos_ascii
  2002  06C1  00F1               	movwf	??_lcd_ascii
  2003  06C2  0871               	movf	??_lcd_ascii,w
  2004  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  2005  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  2006  06C5  00A8               	movwf	lcd_ascii@random+8
  2007  06C6                     l1307:
  2008                           
  2009                           ;Master_main.c: 193: random[9]=32;
  2010  06C6  3020               	movlw	32
  2011  06C7  00F1               	movwf	??_lcd_ascii
  2012  06C8  0871               	movf	??_lcd_ascii,w
  2013  06C9  00A9               	movwf	lcd_ascii@random+9
  2014                           
  2015                           ;Master_main.c: 194: random[10]=datos_ascii(desde_contador);
  2016  06CA  0835               	movf	_desde_contador,w
  2017  06CB  120A  118A  256A  120A  118A  	fcall	_datos_ascii
  2018  06D0  00F1               	movwf	??_lcd_ascii
  2019  06D1  0871               	movf	??_lcd_ascii,w
  2020  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  2021  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  2022  06D4  00AA               	movwf	lcd_ascii@random+10
  2023  06D5                     l1309:
  2024                           
  2025                           ;Master_main.c: 195: random[11]=32;
  2026  06D5  3020               	movlw	32
  2027  06D6  00F1               	movwf	??_lcd_ascii
  2028  06D7  0871               	movf	??_lcd_ascii,w
  2029  06D8  00AB               	movwf	lcd_ascii@random+11
  2030  06D9                     l1311:
  2031                           
  2032                           ;Master_main.c: 196: random[12]=32;
  2033  06D9  3020               	movlw	32
  2034  06DA  00F1               	movwf	??_lcd_ascii
  2035  06DB  0871               	movf	??_lcd_ascii,w
  2036  06DC  00AC               	movwf	lcd_ascii@random+12
  2037  06DD                     l1313:
  2038                           
  2039                           ;Master_main.c: 197: random[13]=32;
  2040  06DD  3020               	movlw	32
  2041  06DE  00F1               	movwf	??_lcd_ascii
  2042  06DF  0871               	movf	??_lcd_ascii,w
  2043  06E0  00AD               	movwf	lcd_ascii@random+13
  2044  06E1                     l1315:
  2045                           
  2046                           ;Master_main.c: 198: random[14]=32;
  2047  06E1  3020               	movlw	32
  2048  06E2  00F1               	movwf	??_lcd_ascii
  2049  06E3  0871               	movf	??_lcd_ascii,w
  2050  06E4  00AE               	movwf	lcd_ascii@random+14
  2051  06E5                     l1317:
  2052                           
  2053                           ;Master_main.c: 199: random[15]=32;
  2054  06E5  3020               	movlw	32
  2055  06E6  00F1               	movwf	??_lcd_ascii
  2056  06E7  0871               	movf	??_lcd_ascii,w
  2057  06E8  00AF               	movwf	lcd_ascii@random+15
  2058  06E9                     l1319:
  2059                           
  2060                           ;Master_main.c: 200: return random;
  2061  06E9  3020               	movlw	(low lcd_ascii@random)& (0+255)
  2062  06EA                     l85:
  2063  06EA  0008               	return
  2064  06EB                     __end_of_lcd_ascii:
  2065                           
  2066                           	psect	text11
  2067  056A                     __ptext11:	
  2068 ;; *************** function _datos_ascii *****************
  2069 ;; Defined at:
  2070 ;;		line 132 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/Master_main.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  numero          1    wreg     unsigned char 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  numero          1    0[COMMON] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      unsigned char 
  2077 ;; Registers used:
  2078 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2084 ;;      Params:         0       0       0       0       0
  2085 ;;      Locals:         1       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0
  2087 ;;      Totals:         1       0       0       0       0
  2088 ;;Total ram usage:        1 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_lcd_ascii
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _datos_ascii
  2099  056A                     _datos_ascii:
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _datos_ascii: [wreg-fsr0h+status,2+status,0]
  2103                           ;datos_ascii@numero stored from wreg
  2104  056A  00F0               	movwf	datos_ascii@numero
  2105  056B                     l1143:
  2106                           
  2107                           ;Master_main.c: 134: switch(numero)
  2108  056B  2D80               	goto	l1213
  2109  056C                     l1145:
  2110                           
  2111                           ;Master_main.c: 137: return 0x30;
  2112  056C  3030               	movlw	48
  2113  056D  2DA0               	goto	l71
  2114  056E                     l1157:
  2115                           
  2116                           ;Master_main.c: 144: return 0x31;
  2117  056E  3031               	movlw	49
  2118  056F  2DA0               	goto	l71
  2119  0570                     l1163:
  2120                           
  2121                           ;Master_main.c: 148: return 0x32;
  2122  0570  3032               	movlw	50
  2123  0571  2DA0               	goto	l71
  2124  0572                     l1169:
  2125                           
  2126                           ;Master_main.c: 152: return 0x33;
  2127  0572  3033               	movlw	51
  2128  0573  2DA0               	goto	l71
  2129  0574                     l1175:
  2130                           
  2131                           ;Master_main.c: 156: return 0x34;
  2132  0574  3034               	movlw	52
  2133  0575  2DA0               	goto	l71
  2134  0576                     l1181:
  2135                           
  2136                           ;Master_main.c: 160: return 0x35;
  2137  0576  3035               	movlw	53
  2138  0577  2DA0               	goto	l71
  2139  0578                     l1187:
  2140                           
  2141                           ;Master_main.c: 164: return 0x36;
  2142  0578  3036               	movlw	54
  2143  0579  2DA0               	goto	l71
  2144  057A                     l1193:
  2145                           
  2146                           ;Master_main.c: 168: return 0x37;
  2147  057A  3037               	movlw	55
  2148  057B  2DA0               	goto	l71
  2149  057C                     l1199:
  2150                           
  2151                           ;Master_main.c: 172: return 0x38;
  2152  057C  3038               	movlw	56
  2153  057D  2DA0               	goto	l71
  2154  057E                     l1205:
  2155                           
  2156                           ;Master_main.c: 176: return 0x39;
  2157  057E  3039               	movlw	57
  2158  057F  2DA0               	goto	l71
  2159  0580                     l1213:
  2160  0580  0870               	movf	datos_ascii@numero,w
  2161                           
  2162                           ; Switch size 1, requested type "simple"
  2163                           ; Number of cases is 10, Range of values is 0 to 9
  2164                           ; switch strategies available:
  2165                           ; Name         Instructions Cycles
  2166                           ; simple_byte           31    16 (average)
  2167                           ; direct_byte           38     8 (fixed)
  2168                           ; jumptable            260     6 (fixed)
  2169                           ;	Chosen strategy is simple_byte
  2170  0581  3A00               	xorlw	0	; case 0
  2171  0582  1903               	skipnz
  2172  0583  2D6C               	goto	l1145
  2173  0584  3A01               	xorlw	1	; case 1
  2174  0585  1903               	skipnz
  2175  0586  2D6E               	goto	l1157
  2176  0587  3A03               	xorlw	3	; case 2
  2177  0588  1903               	skipnz
  2178  0589  2D70               	goto	l1163
  2179  058A  3A01               	xorlw	1	; case 3
  2180  058B  1903               	skipnz
  2181  058C  2D72               	goto	l1169
  2182  058D  3A07               	xorlw	7	; case 4
  2183  058E  1903               	skipnz
  2184  058F  2D74               	goto	l1175
  2185  0590  3A01               	xorlw	1	; case 5
  2186  0591  1903               	skipnz
  2187  0592  2D76               	goto	l1181
  2188  0593  3A03               	xorlw	3	; case 6
  2189  0594  1903               	skipnz
  2190  0595  2D78               	goto	l1187
  2191  0596  3A01               	xorlw	1	; case 7
  2192  0597  1903               	skipnz
  2193  0598  2D7A               	goto	l1193
  2194  0599  3A0F               	xorlw	15	; case 8
  2195  059A  1903               	skipnz
  2196  059B  2D7C               	goto	l1199
  2197  059C  3A01               	xorlw	1	; case 9
  2198  059D  1903               	skipnz
  2199  059E  2D7E               	goto	l1205
  2200  059F  2D6C               	goto	l1145
  2201  05A0                     l71:
  2202  05A0  0008               	return
  2203  05A1                     __end_of_datos_ascii:
  2204                           
  2205                           	psect	text12
  2206  047E                     __ptext12:	
  2207 ;; *************** function _I2C_Master_Write *****************
  2208 ;; Defined at:
  2209 ;;		line 65 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  d               2    0[COMMON] unsigned int 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0, pclath, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         2       0       0       0       0
  2224 ;;      Locals:         0       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0
  2226 ;;      Totals:         2       0       0       0       0
  2227 ;;Total ram usage:        2 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    1
  2230 ;; This function calls:
  2231 ;;		_I2C_Master_Wait
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           
  2238                           ;psect for function _I2C_Master_Write
  2239  047E                     _I2C_Master_Write:
  2240  047E                     l1241:	
  2241                           ;incstack = 0
  2242                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2243                           
  2244                           
  2245                           ;I2C.c: 67: I2C_Master_Wait();
  2246  047E  120A  118A  2488  120A  118A  	fcall	_I2C_Master_Wait
  2247  0483                     l1243:
  2248                           
  2249                           ;I2C.c: 68: SSPBUF = d;
  2250  0483  0870               	movf	I2C_Master_Write@d,w
  2251  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0486  0093               	movwf	19	;volatile
  2254  0487                     l132:
  2255  0487  0008               	return
  2256  0488                     __end_of_I2C_Master_Write:
  2257                           
  2258                           	psect	text13
  2259  0475                     __ptext13:	
  2260 ;; *************** function _I2C_Master_Stop *****************
  2261 ;; Defined at:
  2262 ;;		line 55 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0, pclath, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2276 ;;      Params:         0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    1
  2283 ;; This function calls:
  2284 ;;		_I2C_Master_Wait
  2285 ;; This function is called by:
  2286 ;;		_main
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function _I2C_Master_Stop
  2292  0475                     _I2C_Master_Stop:
  2293  0475                     l1245:	
  2294                           ;incstack = 0
  2295                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2296                           
  2297                           
  2298                           ;I2C.c: 57: I2C_Master_Wait();
  2299  0475  120A  118A  2488  120A  118A  	fcall	_I2C_Master_Wait
  2300  047A                     l1247:
  2301                           
  2302                           ;I2C.c: 58: SSPCON2bits.PEN = 1;
  2303  047A  1683               	bsf	3,5	;RP0=1, select bank1
  2304  047B  1303               	bcf	3,6	;RP1=0, select bank1
  2305  047C  1511               	bsf	17,2	;volatile
  2306  047D                     l129:
  2307  047D  0008               	return
  2308  047E                     __end_of_I2C_Master_Stop:
  2309                           
  2310                           	psect	text14
  2311  046C                     __ptext14:	
  2312 ;; *************** function _I2C_Master_Start *****************
  2313 ;; Defined at:
  2314 ;;		line 39 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2328 ;;      Params:         0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0
  2331 ;;      Totals:         0       0       0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    1
  2335 ;; This function calls:
  2336 ;;		_I2C_Master_Wait
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _I2C_Master_Start
  2344  046C                     _I2C_Master_Start:
  2345  046C                     l1237:	
  2346                           ;incstack = 0
  2347                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2348                           
  2349                           
  2350                           ;I2C.c: 41: I2C_Master_Wait();
  2351  046C  120A  118A  2488  120A  118A  	fcall	_I2C_Master_Wait
  2352  0471                     l1239:
  2353                           
  2354                           ;I2C.c: 42: SSPCON2bits.SEN = 1;
  2355  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2356  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2357  0473  1411               	bsf	17,0	;volatile
  2358  0474                     l123:
  2359  0474  0008               	return
  2360  0475                     __end_of_I2C_Master_Start:
  2361                           
  2362                           	psect	text15
  2363  053C                     __ptext15:	
  2364 ;; *************** function _I2C_Master_Read *****************
  2365 ;; Defined at:
  2366 ;;		line 74 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  a               2    0[COMMON] unsigned short 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  temp            2    4[COMMON] unsigned short 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2    0[COMMON] unsigned short 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         2       0       0       0       0
  2381 ;;      Locals:         2       0       0       0       0
  2382 ;;      Temps:          2       0       0       0       0
  2383 ;;      Totals:         6       0       0       0       0
  2384 ;;Total ram usage:        6 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    1
  2387 ;; This function calls:
  2388 ;;		_I2C_Master_Wait
  2389 ;; This function is called by:
  2390 ;;		_main
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           
  2395                           ;psect for function _I2C_Master_Read
  2396  053C                     _I2C_Master_Read:
  2397  053C                     l1249:	
  2398                           ;incstack = 0
  2399                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2400                           
  2401                           
  2402                           ;I2C.c: 76: unsigned short temp;;I2C.c: 77: I2C_Master_Wait();
  2403  053C  120A  118A  2488  120A  118A  	fcall	_I2C_Master_Wait
  2404  0541                     l1251:
  2405                           
  2406                           ;I2C.c: 78: SSPCON2bits.RCEN = 1;
  2407  0541  1683               	bsf	3,5	;RP0=1, select bank1
  2408  0542  1303               	bcf	3,6	;RP1=0, select bank1
  2409  0543  1591               	bsf	17,3	;volatile
  2410                           
  2411                           ;I2C.c: 79: I2C_Master_Wait();
  2412  0544  120A  118A  2488  120A  118A  	fcall	_I2C_Master_Wait
  2413  0549                     l1253:
  2414                           
  2415                           ;I2C.c: 80: temp = SSPBUF;
  2416  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2417  054A  1303               	bcf	3,6	;RP1=0, select bank0
  2418  054B  0813               	movf	19,w	;volatile
  2419  054C  00F2               	movwf	??_I2C_Master_Read
  2420  054D  01F3               	clrf	??_I2C_Master_Read+1
  2421  054E  0872               	movf	??_I2C_Master_Read,w
  2422  054F  00F4               	movwf	I2C_Master_Read@temp
  2423  0550  0873               	movf	??_I2C_Master_Read+1,w
  2424  0551  00F5               	movwf	I2C_Master_Read@temp+1
  2425  0552                     l1255:
  2426                           
  2427                           ;I2C.c: 81: I2C_Master_Wait();
  2428  0552  120A  118A  2488  120A  118A  	fcall	_I2C_Master_Wait
  2429  0557                     l1257:
  2430                           
  2431                           ;I2C.c: 82: if(a == 1){
  2432  0557  0370               	decf	I2C_Master_Read@a,w
  2433  0558  0471               	iorwf	I2C_Master_Read@a+1,w
  2434  0559  1D03               	btfss	3,2
  2435  055A  2D5C               	goto	u251
  2436  055B  2D5D               	goto	u250
  2437  055C                     u251:
  2438  055C  2D61               	goto	l135
  2439  055D                     u250:
  2440  055D                     l1259:
  2441                           
  2442                           ;I2C.c: 83: SSPCON2bits.ACKDT = 0;
  2443  055D  1683               	bsf	3,5	;RP0=1, select bank1
  2444  055E  1303               	bcf	3,6	;RP1=0, select bank1
  2445  055F  1291               	bcf	17,5	;volatile
  2446                           
  2447                           ;I2C.c: 84: }else{
  2448  0560  2D64               	goto	l136
  2449  0561                     l135:
  2450                           
  2451                           ;I2C.c: 85: SSPCON2bits.ACKDT = 1;
  2452  0561  1683               	bsf	3,5	;RP0=1, select bank1
  2453  0562  1303               	bcf	3,6	;RP1=0, select bank1
  2454  0563  1691               	bsf	17,5	;volatile
  2455  0564                     l136:
  2456                           
  2457                           ;I2C.c: 86: };I2C.c: 87: SSPCON2bits.ACKEN = 1;
  2458  0564  1611               	bsf	17,4	;volatile
  2459  0565                     l1261:
  2460                           
  2461                           ;I2C.c: 88: return temp;
  2462  0565  0875               	movf	I2C_Master_Read@temp+1,w
  2463  0566  00F1               	movwf	?_I2C_Master_Read+1
  2464  0567  0874               	movf	I2C_Master_Read@temp,w
  2465  0568  00F0               	movwf	?_I2C_Master_Read
  2466  0569                     l137:
  2467  0569  0008               	return
  2468  056A                     __end_of_I2C_Master_Read:
  2469                           
  2470                           	psect	text16
  2471  0488                     __ptext16:	
  2472 ;; *************** function _I2C_Master_Wait *****************
  2473 ;; Defined at:
  2474 ;;		line 32 in file "C:/Users/Andy Bonilla/Documents/GitHub/ED2/Lab4_ED2/Lab4_Master.X/I2C.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_I2C_Master_Start
  2498 ;;		_I2C_Master_Stop
  2499 ;;		_I2C_Master_Write
  2500 ;;		_I2C_Master_Read
  2501 ;;		_I2C_Master_RepeatedStart
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function _I2C_Master_Wait
  2507  0488                     _I2C_Master_Wait:
  2508  0488                     l1215:	
  2509                           ;incstack = 0
  2510                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2511                           
  2512  0488                     l117:	
  2513                           ;I2C.c: 34: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2514                           
  2515  0488  1683               	bsf	3,5	;RP0=1, select bank1
  2516  0489  1303               	bcf	3,6	;RP1=0, select bank1
  2517  048A  1914               	btfsc	20,2	;volatile
  2518  048B  2C8D               	goto	u231
  2519  048C  2C8E               	goto	u230
  2520  048D                     u231:
  2521  048D  2C88               	goto	l117
  2522  048E                     u230:
  2523  048E                     l1217:
  2524  048E  0811               	movf	17,w	;volatile
  2525  048F  391F               	andlw	31
  2526  0490  1D03               	btfss	3,2
  2527  0491  2C93               	goto	u241
  2528  0492  2C94               	goto	u240
  2529  0493                     u241:
  2530  0493  2C88               	goto	l117
  2531  0494                     u240:
  2532  0494                     l120:
  2533  0494  0008               	return
  2534  0495                     __end_of_I2C_Master_Wait:
  2535  007E                     btemp	set	126	;btemp
  2536  007E                     wtemp0	set	126
  2537                           
  2538                           	psect	config
  2539                           
  2540                           ;Config register CONFIG1 @ 0x2007
  2541                           ;	Oscillator Selection bits
  2542                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2543                           ;	Watchdog Timer Enable bit
  2544                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2545                           ;	Power-up Timer Enable bit
  2546                           ;	PWRTE = OFF, PWRT disabled
  2547                           ;	RE3/MCLR pin function select bit
  2548                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2549                           ;	Code Protection bit
  2550                           ;	CP = OFF, Program memory code protection is disabled
  2551                           ;	Data Code Protection bit
  2552                           ;	CPD = OFF, Data memory code protection is disabled
  2553                           ;	Brown Out Reset Selection bits
  2554                           ;	BOREN = OFF, BOR disabled
  2555                           ;	Internal External Switchover bit
  2556                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2557                           ;	Fail-Safe Clock Monitor Enabled bit
  2558                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2559                           ;	Low Voltage Programming Enable bit
  2560                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2561                           ;	In-Circuit Debugger Mode bit
  2562                           ;	DEBUG = 0x1, unprogrammed default
  2563  2007                     	org	8199
  2564  2007  20D6               	dw	8406
  2565                           
  2566                           ;Config register CONFIG2 @ 0x2008
  2567                           ;	Brown-out Reset Selection bit
  2568                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2569                           ;	Flash Program Memory Self Write Enable bits
  2570                           ;	WRT = OFF, Write protection off
  2571  2008                     	org	8200
  2572  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _show->_dat
    _show->_lcd_ascii
    _I2C_Master_Init->___lldiv
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_clear->_cmd
    _lcd_ascii->_datos_ascii

Critical Paths under _main in BANK0

    _main->_lcd_ascii
    _show->_lcd_ascii
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2131
                                             16 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _cmd
                          _lcd_ascii
                          _lcd_clear
                           _lcd_init
                          _lcd_linea
                              _setup
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 3     1      2     219
                                              2 COMMON     3     1      2
                                _dat
                          _lcd_ascii (ARG)
 ---------------------------------------------------------------------------------
 (2) _dat                                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     354
                                              2 COMMON     5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      22
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_ascii                                           17    17      0     405
                                              1 COMMON     1     1      0
                                              0 BANK0     16    16      0
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) _datos_ascii                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _cmd
   _lcd_ascii
     _datos_ascii
   _lcd_clear
     _cmd
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _setup
     _I2C_Master_Init
       ___lldiv
   _show
     _dat
     _lcd_ascii (ARG)
       _datos_ascii

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 11 02:58:39 2021

                        pc 0002                         l71 05A0                         l63 04E5  
                       l85 06EA                         fsr 0004                        l120 0494  
                      l114 060F                        l123 0474                        l132 0487  
                      l117 0488                        l135 0561                        l136 0564  
                      l137 0569                        l129 047D                        l161 04B4  
                      l170 050F                        l155 04A1                        l315 0675  
                      l164 04C7                        l158 05D7                        l176 053B  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      _RE2 004A                        u210 066D                        u211 066C  
                      u220 05EF                        u205 065F                        u230 048E  
                      u150 0620                        u231 048D                        u151 061F  
                      u240 0494                        u241 0493                        u225 05EA  
                      u250 055D                        u170 0634                        u251 055C  
                      u171 0633                        u307 072D                        u260 0516  
                      u261 0515                        u165 0625                        u317 075D  
                      u270 052C                        u190 064F                        u271 052B  
                      u191 064E                        u327 078D                        u280 050F  
                      u185 0636                        u281 050E                        u337 07C1  
                      u195 064B                        u347 04FD                        u357 04BF  
                      u367 04AC                        u297 0706                        _dat 04B5  
                      _cmd 04A2                        fsr0 0004                        indf 0000  
                     l1101 0623                       l1111 065D                       l1103 0630  
                     l1121 04A3                       l1113 065E                       l1105 0634  
                     l1123 04A7                       l1115 0667                       l1107 063D  
                     l1131 05D8                       l1205 057E                       l1213 0580  
                     l1301 06AC                       l1125 04A8                       l1109 064F  
                     l1117 066D                       l1141 060E                       l1133 05DC  
                     l1221 04BA                       l1215 0488                       l1143 056B  
                     l1311 06D9                       l1303 06B0                       l1127 04A9  
                     l1135 05DF                       l1231 04D8                       l1223 04BB  
                     l1217 048E                       l1241 047E                       l1145 056C  
                     l1313 06DD                       l1305 06BB                       l1129 04B1  
                     l1233 0495                       l1137 060C                       l1225 04BC  
                     l1251 0541                       l1243 0483                       l1163 0570  
                     l1315 06E1                       l1307 06C6                       l1235 05A1  
                     l1139 060D                       l1227 04C4                       l1219 04B6  
                     l1331 0718                       l1323 06EB                       l1261 0565  
                     l1253 0549                       l1237 046C                       l1245 0475  
                     l1181 0576                       l1157 056E                       l1317 06E5  
                     l1309 06D5                       l1229 04C8                       l1341 0769  
                     l1333 0720                       l1325 0700                       ?_dat 0070  
                     l1255 0552                       l1239 0471                       l1247 047A  
                     l1175 0574                       l1319 06E9                       l1271 051F  
                     l1351 0798                       l1343 0772                       l1335 0725  
                     l1327 070A                       l1257 0557                       l1249 053C  
                     l1193 057A                       l1169 0572                       l1273 0526  
                     l1265 0511                       l1097 0610                       l1281 04E6  
                     l1361 07D0                       l1353 079D                       l1345 0780  
                     l1337 0755                       l1329 070F                       ?_cmd 0070  
                     l1259 055D                       l1187 0578                       l1291 0676  
                     l1275 052C                       l1267 0516                       l1099 0620  
                     l1283 04E7                       l1363 07D9                       l1355 07A6  
                     l1347 0785                       l1339 0764                       l1293 0683  
                     l1277 0531                       l1269 051B                       l1285 04F5  
                     l1357 07B4                       l1349 0794                       l1199 057C  
                     l1295 0687                       l1279 0535                       l1287 04FB  
                     l1359 07B9                       l1297 0692                       l1289 04FF  
                     l1299 069D                       STR_1 0013                       _PEIE 005E  
                     dat@b 0071                       cmd@a 0071                       _main 06EB  
                     _show 04E6                       btemp 007E                       start 0000  
                    ??_dat 0070                      ??_cmd 0070           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      ?_show 0072                      _ANSEL 0188  
          __end_of___lldiv 0676                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063                      _setup 04C8  
                    pclath 000A                      show@s 0072              lcd_linea@temp 0075  
                    status 0003                      wtemp0 007E            __initialization 07F7  
             __end_of_main 07F7               __end_of_show 0510                     ??_main 0030  
                   ??_show 0074       __size_of_datos_ascii 0037          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   ?_setup 0070                     _ANSELH 0189                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of_lcd_init 05D8            lcd_ascii@random 0020  
                ??___lldiv 0078    __end_of__initialization 07FC             __pcstackCOMMON 0070  
            __end_of_setup 04E6         __size_of_lcd_clear 000D         __size_of_lcd_ascii 0075  
       __size_of_lcd_linea 002C                    ??_setup 007E                 __pbssBANK0 0033  
               __pmaintext 06EB               _desde_sensor 0033                    _SSPCON2 0091  
                ?_lcd_init 0070                    _SSPSTAT 0094                 __stringtab 0003  
           _desde_contador 0035          __end_of_lcd_clear 04A2          __end_of_lcd_ascii 06EB  
        __end_of_lcd_linea 053C                    ___lldiv 0610                    __ptext1 04E6  
                  __ptext2 04B5                    __ptext3 04C8                    __ptext4 05D8  
                  __ptext5 0610                    __ptext6 0510                    __ptext7 05A1  
                  __ptext8 0495                    __ptext9 04A2               __size_of_dat 0013  
             __size_of_cmd 0013   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                 ??_lcd_init 0072  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070              ??_datos_ascii 0070                  _TRISCbits 0087  
               lcd_linea@a 0074                 lcd_linea@b 0072                 lcd_linea@z 0076  
      start_initialization 07F7        __end_of_datos_ascii 05A1                __end_of_dat 04C8  
              __end_of_cmd 04B5          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        datos_ascii@numero 0070          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
                ___latbits 0002              __pcstackBANK0 0020          __size_of_lcd_init 0037  
         _I2C_Master_Start 046C           _I2C_Master_Write 047E                  _desde_pot 0034  
                 ?___lldiv 0070                  _lcd_clear 0495                  _lcd_ascii 0676  
              _datos_ascii 056A                  _lcd_linea 0510                  __pstrings 0003  
           __size_of_setup 001E                 ?_lcd_clear 0070                 ?_lcd_ascii 0070  
               ?_lcd_linea 0072                __stringbase 0012        I2C_Master_Read@temp 0074  
         __size_of___lldiv 0066         __end_of__stringtab 0013            _I2C_Master_Init 05D8  
          _I2C_Master_Read 053C            _I2C_Master_Wait 0488            _I2C_Master_Stop 0475  
                 __ptext10 0676                   __ptext11 056A                   __ptext12 047E  
                 __ptext13 0475                   __ptext14 046C                   __ptext15 053C  
                 __ptext16 0488                   _lcd_init 05A1              __size_of_main 010C  
            __size_of_show 002A                ??_lcd_clear 0072                ??_lcd_ascii 0071  
              ??_lcd_linea 0073   __end_of_I2C_Master_Start 0475   __end_of_I2C_Master_Write 0488  
         ___lldiv@dividend 0074                  stringcode 000D                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 0610    __end_of_I2C_Master_Read 056A    __end_of_I2C_Master_Wait 0495  
  __end_of_I2C_Master_Stop 047E               ?_datos_ascii 0070           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070                   stringdir 000D                   stringtab 0003  
              _SSPCON2bits 0091  
